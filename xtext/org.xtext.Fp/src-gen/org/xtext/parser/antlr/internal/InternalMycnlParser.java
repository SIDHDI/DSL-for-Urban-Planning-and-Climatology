package org.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.services.MycnlGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalMycnlParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_INT", "RULE_STRING", "RULE_HEX", "RULE_DECIMAL", "RULE_ID", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'show'", "'details'", "'of'", "'region'", "'Show'", "'Details'", "'Of'", "'Region'", "'SHOW'", "'DETAILS'", "'OF'", "'REGION'", "'what'", "'will'", "'be'", "'the'", "'temperature'", "'if'", "'we'", "'build'", "'buildings'", "'dimensions'", "'x'", "'in'", "'What'", "'Will'", "'Be'", "'The'", "'Temperature'", "'If'", "'We'", "'Build'", "'Buildings'", "'Dimensions'", "'In'", "'WHAT'", "'WILL'", "'BE'", "'THE'", "'TEMPERATURE'", "'IF'", "'WE'", "'BUILD'", "'BUILDINGS'", "'DIMENSIONS'", "'IN'", "'how'", "'many'", "'trees'", "'to'", "'planted'", "'How'", "'Many'", "'Trees'", "'To'", "'Planted'", "'HOW'", "'MANY'", "'TREES'", "'TO'", "'PLANTED'", "'design'", "'plan'", "'for'", "'residential'", "'area'", "'people'", "'Design'", "'Plan'", "'For'", "'Residential'", "'Area'", "'People'", "'DESIGN'", "'PLAN'", "'FOR'", "'RESIDENTIAL'", "'AREA'", "'PEOPLE'", "'demolish'", "'Demolish'", "'DEMOLISH'", "'plant'", "'Plant'", "'PLANT'", "'cut'", "'Cut'", "'CUT'", "'bushes'", "'square'", "'meter'", "'Bushes'", "'Square'", "'Meter'", "'BUSHES'", "'SQUARE'", "'METER'", "'remove'", "'Remove'", "'REMOVE'", "'create'", "'lake'", "'over'", "'Create'", "'Lake'", "'Over'", "'CREATE'", "'LAKE'", "'OVER'", "'commercial'", "'Commercial'", "'COMMERCIAL'", "'educational'", "'Educational'", "'EDUCATIONAL'", "'='", "'+='", "'-='", "'*='", "'/='", "'%='", "'<'", "'>'", "'>='", "'||'", "'&&'", "'=='", "'!='", "'==='", "'!=='", "'instanceof'", "'->'", "'..<'", "'..'", "'=>'", "'<>'", "'?:'", "'+'", "'-'", "'*'", "'**'", "'/'", "'%'", "'!'", "'as'", "'++'", "'--'", "'.'", "'::'", "'?.'", "','", "'('", "')'", "'#'", "'{'", "'}'", "'['", "']'", "'|'", "';'", "'else'", "'switch'", "':'", "'default'", "'case'", "'while'", "'do'", "'var'", "'val'", "'extends'", "'static'", "'import'", "'extension'", "'super'", "'new'", "'false'", "'true'", "'null'", "'typeof'", "'throw'", "'return'", "'try'", "'finally'", "'synchronized'", "'catch'", "'?'", "'&'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=8;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INT=4;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__166=166;
    public static final int T__165=165;
    public static final int T__168=168;
    public static final int T__167=167;
    public static final int T__162=162;
    public static final int T__161=161;
    public static final int T__164=164;
    public static final int T__163=163;
    public static final int T__160=160;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__159=159;
    public static final int T__30=30;
    public static final int T__158=158;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__155=155;
    public static final int T__154=154;
    public static final int T__157=157;
    public static final int T__156=156;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__100=100;
    public static final int T__102=102;
    public static final int T__101=101;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__13=13;
    public static final int T__14=14;
    public static final int RULE_DECIMAL=7;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__121=121;
    public static final int T__124=124;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_SL_COMMENT=10;
    public static final int T__119=119;
    public static final int T__118=118;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__114=114;
    public static final int T__117=117;
    public static final int T__116=116;
    public static final int T__111=111;
    public static final int T__110=110;
    public static final int T__113=113;
    public static final int T__112=112;
    public static final int T__108=108;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__104=104;
    public static final int T__103=103;
    public static final int T__106=106;
    public static final int T__105=105;
    public static final int RULE_HEX=6;
    public static final int RULE_ML_COMMENT=9;
    public static final int T__91=91;
    public static final int T__188=188;
    public static final int T__92=92;
    public static final int T__187=187;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__189=189;
    public static final int T__184=184;
    public static final int T__183=183;
    public static final int T__186=186;
    public static final int T__90=90;
    public static final int T__185=185;
    public static final int T__180=180;
    public static final int T__182=182;
    public static final int T__181=181;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__177=177;
    public static final int T__176=176;
    public static final int T__179=179;
    public static final int T__178=178;
    public static final int T__173=173;
    public static final int T__172=172;
    public static final int T__175=175;
    public static final int T__174=174;
    public static final int T__171=171;
    public static final int T__170=170;
    public static final int T__169=169;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=5;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__199=199;
    public static final int T__81=81;
    public static final int T__198=198;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int T__195=195;
    public static final int T__194=194;
    public static final int RULE_WS=11;
    public static final int T__197=197;
    public static final int T__196=196;
    public static final int T__191=191;
    public static final int T__190=190;
    public static final int T__193=193;
    public static final int T__192=192;
    public static final int RULE_ANY_OTHER=12;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalMycnlParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalMycnlParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalMycnlParser.tokenNames; }
    public String getGrammarFileName() { return "InternalMycnl.g"; }



     	private MycnlGrammarAccess grammarAccess;

        public InternalMycnlParser(TokenStream input, MycnlGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "DomainModel";
       	}

       	@Override
       	protected MycnlGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleDomainModel"
    // InternalMycnl.g:64:1: entryRuleDomainModel returns [EObject current=null] : iv_ruleDomainModel= ruleDomainModel EOF ;
    public final EObject entryRuleDomainModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDomainModel = null;


        try {
            // InternalMycnl.g:64:52: (iv_ruleDomainModel= ruleDomainModel EOF )
            // InternalMycnl.g:65:2: iv_ruleDomainModel= ruleDomainModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDomainModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDomainModel=ruleDomainModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDomainModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDomainModel"


    // $ANTLR start "ruleDomainModel"
    // InternalMycnl.g:71:1: ruleDomainModel returns [EObject current=null] : ( (lv_elements_0_0= ruleModel ) )* ;
    public final EObject ruleDomainModel() throws RecognitionException {
        EObject current = null;

        EObject lv_elements_0_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:77:2: ( ( (lv_elements_0_0= ruleModel ) )* )
            // InternalMycnl.g:78:2: ( (lv_elements_0_0= ruleModel ) )*
            {
            // InternalMycnl.g:78:2: ( (lv_elements_0_0= ruleModel ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==13||LA1_0==17||LA1_0==21||LA1_0==25||LA1_0==37||LA1_0==48||LA1_0==59||LA1_0==64||LA1_0==69) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalMycnl.g:79:3: (lv_elements_0_0= ruleModel )
            	    {
            	    // InternalMycnl.g:79:3: (lv_elements_0_0= ruleModel )
            	    // InternalMycnl.g:80:4: lv_elements_0_0= ruleModel
            	    {
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getDomainModelAccess().getElementsModelParserRuleCall_0());
            	      			
            	    }
            	    pushFollow(FOLLOW_3);
            	    lv_elements_0_0=ruleModel();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElementForParent(grammarAccess.getDomainModelRule());
            	      				}
            	      				add(
            	      					current,
            	      					"elements",
            	      					lv_elements_0_0,
            	      					"org.xtext.Mycnl.Model");
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDomainModel"


    // $ANTLR start "entryRuleModel"
    // InternalMycnl.g:100:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalMycnl.g:100:46: (iv_ruleModel= ruleModel EOF )
            // InternalMycnl.g:101:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalMycnl.g:107:1: ruleModel returns [EObject current=null] : ( (lv_query_0_0= ruleQuery ) ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_query_0_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:113:2: ( ( (lv_query_0_0= ruleQuery ) ) )
            // InternalMycnl.g:114:2: ( (lv_query_0_0= ruleQuery ) )
            {
            // InternalMycnl.g:114:2: ( (lv_query_0_0= ruleQuery ) )
            // InternalMycnl.g:115:3: (lv_query_0_0= ruleQuery )
            {
            // InternalMycnl.g:115:3: (lv_query_0_0= ruleQuery )
            // InternalMycnl.g:116:4: lv_query_0_0= ruleQuery
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getModelAccess().getQueryQueryParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_query_0_0=ruleQuery();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getModelRule());
              				}
              				add(
              					current,
              					"query",
              					lv_query_0_0,
              					"org.xtext.Mycnl.Query");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleQuery"
    // InternalMycnl.g:136:1: entryRuleQuery returns [EObject current=null] : iv_ruleQuery= ruleQuery EOF ;
    public final EObject entryRuleQuery() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuery = null;


        try {
            // InternalMycnl.g:136:46: (iv_ruleQuery= ruleQuery EOF )
            // InternalMycnl.g:137:2: iv_ruleQuery= ruleQuery EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQueryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQuery=ruleQuery();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuery; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuery"


    // $ANTLR start "ruleQuery"
    // InternalMycnl.g:143:1: ruleQuery returns [EObject current=null] : (this_findtempBuilAction_0= rulefindtempBuilAction | this_findtempDemolish_1= rulefindtempDemolish | this_findtempPlantTrees_2= rulefindtempPlantTrees | this_findtempCutTrees_3= rulefindtempCutTrees | this_findtempPlantBushes_4= rulefindtempPlantBushes | this_findtempRemoveBushes_5= rulefindtempRemoveBushes | this_findtempCreateLake_6= rulefindtempCreateLake | this_findtempRemoveLake_7= rulefindtempRemoveLake | this_caltreesBuildAction_8= rulecaltreesBuildAction | this_DesignCommercial_9= ruleDesignCommercial | this_DesignResidential_10= ruleDesignResidential | this_DesignEducational_11= ruleDesignEducational | this_showRegion_12= ruleshowRegion ) ;
    public final EObject ruleQuery() throws RecognitionException {
        EObject current = null;

        EObject this_findtempBuilAction_0 = null;

        EObject this_findtempDemolish_1 = null;

        EObject this_findtempPlantTrees_2 = null;

        EObject this_findtempCutTrees_3 = null;

        EObject this_findtempPlantBushes_4 = null;

        EObject this_findtempRemoveBushes_5 = null;

        EObject this_findtempCreateLake_6 = null;

        EObject this_findtempRemoveLake_7 = null;

        EObject this_caltreesBuildAction_8 = null;

        EObject this_DesignCommercial_9 = null;

        EObject this_DesignResidential_10 = null;

        EObject this_DesignEducational_11 = null;

        EObject this_showRegion_12 = null;



        	enterRule();

        try {
            // InternalMycnl.g:149:2: ( (this_findtempBuilAction_0= rulefindtempBuilAction | this_findtempDemolish_1= rulefindtempDemolish | this_findtempPlantTrees_2= rulefindtempPlantTrees | this_findtempCutTrees_3= rulefindtempCutTrees | this_findtempPlantBushes_4= rulefindtempPlantBushes | this_findtempRemoveBushes_5= rulefindtempRemoveBushes | this_findtempCreateLake_6= rulefindtempCreateLake | this_findtempRemoveLake_7= rulefindtempRemoveLake | this_caltreesBuildAction_8= rulecaltreesBuildAction | this_DesignCommercial_9= ruleDesignCommercial | this_DesignResidential_10= ruleDesignResidential | this_DesignEducational_11= ruleDesignEducational | this_showRegion_12= ruleshowRegion ) )
            // InternalMycnl.g:150:2: (this_findtempBuilAction_0= rulefindtempBuilAction | this_findtempDemolish_1= rulefindtempDemolish | this_findtempPlantTrees_2= rulefindtempPlantTrees | this_findtempCutTrees_3= rulefindtempCutTrees | this_findtempPlantBushes_4= rulefindtempPlantBushes | this_findtempRemoveBushes_5= rulefindtempRemoveBushes | this_findtempCreateLake_6= rulefindtempCreateLake | this_findtempRemoveLake_7= rulefindtempRemoveLake | this_caltreesBuildAction_8= rulecaltreesBuildAction | this_DesignCommercial_9= ruleDesignCommercial | this_DesignResidential_10= ruleDesignResidential | this_DesignEducational_11= ruleDesignEducational | this_showRegion_12= ruleshowRegion )
            {
            // InternalMycnl.g:150:2: (this_findtempBuilAction_0= rulefindtempBuilAction | this_findtempDemolish_1= rulefindtempDemolish | this_findtempPlantTrees_2= rulefindtempPlantTrees | this_findtempCutTrees_3= rulefindtempCutTrees | this_findtempPlantBushes_4= rulefindtempPlantBushes | this_findtempRemoveBushes_5= rulefindtempRemoveBushes | this_findtempCreateLake_6= rulefindtempCreateLake | this_findtempRemoveLake_7= rulefindtempRemoveLake | this_caltreesBuildAction_8= rulecaltreesBuildAction | this_DesignCommercial_9= ruleDesignCommercial | this_DesignResidential_10= ruleDesignResidential | this_DesignEducational_11= ruleDesignEducational | this_showRegion_12= ruleshowRegion )
            int alt2=13;
            alt2 = dfa2.predict(input);
            switch (alt2) {
                case 1 :
                    // InternalMycnl.g:151:3: this_findtempBuilAction_0= rulefindtempBuilAction
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQueryAccess().getFindtempBuilActionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_findtempBuilAction_0=rulefindtempBuilAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_findtempBuilAction_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMycnl.g:160:3: this_findtempDemolish_1= rulefindtempDemolish
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQueryAccess().getFindtempDemolishParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_findtempDemolish_1=rulefindtempDemolish();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_findtempDemolish_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMycnl.g:169:3: this_findtempPlantTrees_2= rulefindtempPlantTrees
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQueryAccess().getFindtempPlantTreesParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_findtempPlantTrees_2=rulefindtempPlantTrees();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_findtempPlantTrees_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMycnl.g:178:3: this_findtempCutTrees_3= rulefindtempCutTrees
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQueryAccess().getFindtempCutTreesParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_findtempCutTrees_3=rulefindtempCutTrees();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_findtempCutTrees_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMycnl.g:187:3: this_findtempPlantBushes_4= rulefindtempPlantBushes
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQueryAccess().getFindtempPlantBushesParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_findtempPlantBushes_4=rulefindtempPlantBushes();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_findtempPlantBushes_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMycnl.g:196:3: this_findtempRemoveBushes_5= rulefindtempRemoveBushes
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQueryAccess().getFindtempRemoveBushesParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_findtempRemoveBushes_5=rulefindtempRemoveBushes();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_findtempRemoveBushes_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalMycnl.g:205:3: this_findtempCreateLake_6= rulefindtempCreateLake
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQueryAccess().getFindtempCreateLakeParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_findtempCreateLake_6=rulefindtempCreateLake();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_findtempCreateLake_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalMycnl.g:214:3: this_findtempRemoveLake_7= rulefindtempRemoveLake
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQueryAccess().getFindtempRemoveLakeParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_findtempRemoveLake_7=rulefindtempRemoveLake();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_findtempRemoveLake_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalMycnl.g:223:3: this_caltreesBuildAction_8= rulecaltreesBuildAction
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQueryAccess().getCaltreesBuildActionParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_caltreesBuildAction_8=rulecaltreesBuildAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_caltreesBuildAction_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalMycnl.g:232:3: this_DesignCommercial_9= ruleDesignCommercial
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQueryAccess().getDesignCommercialParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DesignCommercial_9=ruleDesignCommercial();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DesignCommercial_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalMycnl.g:241:3: this_DesignResidential_10= ruleDesignResidential
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQueryAccess().getDesignResidentialParserRuleCall_10());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DesignResidential_10=ruleDesignResidential();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DesignResidential_10;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalMycnl.g:250:3: this_DesignEducational_11= ruleDesignEducational
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQueryAccess().getDesignEducationalParserRuleCall_11());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DesignEducational_11=ruleDesignEducational();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DesignEducational_11;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalMycnl.g:259:3: this_showRegion_12= ruleshowRegion
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQueryAccess().getShowRegionParserRuleCall_12());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_showRegion_12=ruleshowRegion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_showRegion_12;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuery"


    // $ANTLR start "entryRuleshowRegion"
    // InternalMycnl.g:271:1: entryRuleshowRegion returns [EObject current=null] : iv_ruleshowRegion= ruleshowRegion EOF ;
    public final EObject entryRuleshowRegion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleshowRegion = null;


        try {
            // InternalMycnl.g:271:51: (iv_ruleshowRegion= ruleshowRegion EOF )
            // InternalMycnl.g:272:2: iv_ruleshowRegion= ruleshowRegion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShowRegionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleshowRegion=ruleshowRegion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleshowRegion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleshowRegion"


    // $ANTLR start "ruleshowRegion"
    // InternalMycnl.g:278:1: ruleshowRegion returns [EObject current=null] : ( (otherlv_0= 'show' otherlv_1= 'details' otherlv_2= 'of' otherlv_3= 'region' ( (lv_region_4_0= RULE_INT ) ) ) | (otherlv_5= 'Show' otherlv_6= 'Details' otherlv_7= 'Of' otherlv_8= 'Region' ( (lv_region_9_0= RULE_INT ) ) ) | (otherlv_10= 'Show' otherlv_11= 'Details' otherlv_12= 'of' otherlv_13= 'Region' ( (lv_region_14_0= RULE_INT ) ) ) | (otherlv_15= 'SHOW' otherlv_16= 'DETAILS' otherlv_17= 'OF' otherlv_18= 'REGION' ( (lv_region_19_0= RULE_INT ) ) ) | (otherlv_20= 'show' otherlv_21= 'details' otherlv_22= 'of' otherlv_23= 'Region' ( (lv_region_24_0= RULE_INT ) ) ) | (otherlv_25= 'Show' otherlv_26= 'details' otherlv_27= 'of' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) ) ) | (otherlv_30= 'Show' otherlv_31= 'details' otherlv_32= 'of' otherlv_33= 'Region' ( (lv_region_34_0= RULE_INT ) ) ) ) ;
    public final EObject ruleshowRegion() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_region_4_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_region_9_0=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_region_14_0=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token lv_region_19_0=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token lv_region_24_0=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_region_29_0=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token lv_region_34_0=null;


        	enterRule();

        try {
            // InternalMycnl.g:284:2: ( ( (otherlv_0= 'show' otherlv_1= 'details' otherlv_2= 'of' otherlv_3= 'region' ( (lv_region_4_0= RULE_INT ) ) ) | (otherlv_5= 'Show' otherlv_6= 'Details' otherlv_7= 'Of' otherlv_8= 'Region' ( (lv_region_9_0= RULE_INT ) ) ) | (otherlv_10= 'Show' otherlv_11= 'Details' otherlv_12= 'of' otherlv_13= 'Region' ( (lv_region_14_0= RULE_INT ) ) ) | (otherlv_15= 'SHOW' otherlv_16= 'DETAILS' otherlv_17= 'OF' otherlv_18= 'REGION' ( (lv_region_19_0= RULE_INT ) ) ) | (otherlv_20= 'show' otherlv_21= 'details' otherlv_22= 'of' otherlv_23= 'Region' ( (lv_region_24_0= RULE_INT ) ) ) | (otherlv_25= 'Show' otherlv_26= 'details' otherlv_27= 'of' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) ) ) | (otherlv_30= 'Show' otherlv_31= 'details' otherlv_32= 'of' otherlv_33= 'Region' ( (lv_region_34_0= RULE_INT ) ) ) ) )
            // InternalMycnl.g:285:2: ( (otherlv_0= 'show' otherlv_1= 'details' otherlv_2= 'of' otherlv_3= 'region' ( (lv_region_4_0= RULE_INT ) ) ) | (otherlv_5= 'Show' otherlv_6= 'Details' otherlv_7= 'Of' otherlv_8= 'Region' ( (lv_region_9_0= RULE_INT ) ) ) | (otherlv_10= 'Show' otherlv_11= 'Details' otherlv_12= 'of' otherlv_13= 'Region' ( (lv_region_14_0= RULE_INT ) ) ) | (otherlv_15= 'SHOW' otherlv_16= 'DETAILS' otherlv_17= 'OF' otherlv_18= 'REGION' ( (lv_region_19_0= RULE_INT ) ) ) | (otherlv_20= 'show' otherlv_21= 'details' otherlv_22= 'of' otherlv_23= 'Region' ( (lv_region_24_0= RULE_INT ) ) ) | (otherlv_25= 'Show' otherlv_26= 'details' otherlv_27= 'of' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) ) ) | (otherlv_30= 'Show' otherlv_31= 'details' otherlv_32= 'of' otherlv_33= 'Region' ( (lv_region_34_0= RULE_INT ) ) ) )
            {
            // InternalMycnl.g:285:2: ( (otherlv_0= 'show' otherlv_1= 'details' otherlv_2= 'of' otherlv_3= 'region' ( (lv_region_4_0= RULE_INT ) ) ) | (otherlv_5= 'Show' otherlv_6= 'Details' otherlv_7= 'Of' otherlv_8= 'Region' ( (lv_region_9_0= RULE_INT ) ) ) | (otherlv_10= 'Show' otherlv_11= 'Details' otherlv_12= 'of' otherlv_13= 'Region' ( (lv_region_14_0= RULE_INT ) ) ) | (otherlv_15= 'SHOW' otherlv_16= 'DETAILS' otherlv_17= 'OF' otherlv_18= 'REGION' ( (lv_region_19_0= RULE_INT ) ) ) | (otherlv_20= 'show' otherlv_21= 'details' otherlv_22= 'of' otherlv_23= 'Region' ( (lv_region_24_0= RULE_INT ) ) ) | (otherlv_25= 'Show' otherlv_26= 'details' otherlv_27= 'of' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) ) ) | (otherlv_30= 'Show' otherlv_31= 'details' otherlv_32= 'of' otherlv_33= 'Region' ( (lv_region_34_0= RULE_INT ) ) ) )
            int alt3=7;
            alt3 = dfa3.predict(input);
            switch (alt3) {
                case 1 :
                    // InternalMycnl.g:286:3: (otherlv_0= 'show' otherlv_1= 'details' otherlv_2= 'of' otherlv_3= 'region' ( (lv_region_4_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:286:3: (otherlv_0= 'show' otherlv_1= 'details' otherlv_2= 'of' otherlv_3= 'region' ( (lv_region_4_0= RULE_INT ) ) )
                    // InternalMycnl.g:287:4: otherlv_0= 'show' otherlv_1= 'details' otherlv_2= 'of' otherlv_3= 'region' ( (lv_region_4_0= RULE_INT ) )
                    {
                    otherlv_0=(Token)match(input,13,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getShowRegionAccess().getShowKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,14,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getShowRegionAccess().getDetailsKeyword_0_1());
                      			
                    }
                    otherlv_2=(Token)match(input,15,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getShowRegionAccess().getOfKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getShowRegionAccess().getRegionKeyword_0_3());
                      			
                    }
                    // InternalMycnl.g:303:4: ( (lv_region_4_0= RULE_INT ) )
                    // InternalMycnl.g:304:5: (lv_region_4_0= RULE_INT )
                    {
                    // InternalMycnl.g:304:5: (lv_region_4_0= RULE_INT )
                    // InternalMycnl.g:305:6: lv_region_4_0= RULE_INT
                    {
                    lv_region_4_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_4_0, grammarAccess.getShowRegionAccess().getRegionINTTerminalRuleCall_0_4_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getShowRegionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_4_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:323:3: (otherlv_5= 'Show' otherlv_6= 'Details' otherlv_7= 'Of' otherlv_8= 'Region' ( (lv_region_9_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:323:3: (otherlv_5= 'Show' otherlv_6= 'Details' otherlv_7= 'Of' otherlv_8= 'Region' ( (lv_region_9_0= RULE_INT ) ) )
                    // InternalMycnl.g:324:4: otherlv_5= 'Show' otherlv_6= 'Details' otherlv_7= 'Of' otherlv_8= 'Region' ( (lv_region_9_0= RULE_INT ) )
                    {
                    otherlv_5=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getShowRegionAccess().getShowKeyword_1_0());
                      			
                    }
                    otherlv_6=(Token)match(input,18,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getShowRegionAccess().getDetailsKeyword_1_1());
                      			
                    }
                    otherlv_7=(Token)match(input,19,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getShowRegionAccess().getOfKeyword_1_2());
                      			
                    }
                    otherlv_8=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getShowRegionAccess().getRegionKeyword_1_3());
                      			
                    }
                    // InternalMycnl.g:340:4: ( (lv_region_9_0= RULE_INT ) )
                    // InternalMycnl.g:341:5: (lv_region_9_0= RULE_INT )
                    {
                    // InternalMycnl.g:341:5: (lv_region_9_0= RULE_INT )
                    // InternalMycnl.g:342:6: lv_region_9_0= RULE_INT
                    {
                    lv_region_9_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_9_0, grammarAccess.getShowRegionAccess().getRegionINTTerminalRuleCall_1_4_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getShowRegionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_9_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalMycnl.g:360:3: (otherlv_10= 'Show' otherlv_11= 'Details' otherlv_12= 'of' otherlv_13= 'Region' ( (lv_region_14_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:360:3: (otherlv_10= 'Show' otherlv_11= 'Details' otherlv_12= 'of' otherlv_13= 'Region' ( (lv_region_14_0= RULE_INT ) ) )
                    // InternalMycnl.g:361:4: otherlv_10= 'Show' otherlv_11= 'Details' otherlv_12= 'of' otherlv_13= 'Region' ( (lv_region_14_0= RULE_INT ) )
                    {
                    otherlv_10=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getShowRegionAccess().getShowKeyword_2_0());
                      			
                    }
                    otherlv_11=(Token)match(input,18,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getShowRegionAccess().getDetailsKeyword_2_1());
                      			
                    }
                    otherlv_12=(Token)match(input,15,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getShowRegionAccess().getOfKeyword_2_2());
                      			
                    }
                    otherlv_13=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getShowRegionAccess().getRegionKeyword_2_3());
                      			
                    }
                    // InternalMycnl.g:377:4: ( (lv_region_14_0= RULE_INT ) )
                    // InternalMycnl.g:378:5: (lv_region_14_0= RULE_INT )
                    {
                    // InternalMycnl.g:378:5: (lv_region_14_0= RULE_INT )
                    // InternalMycnl.g:379:6: lv_region_14_0= RULE_INT
                    {
                    lv_region_14_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_14_0, grammarAccess.getShowRegionAccess().getRegionINTTerminalRuleCall_2_4_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getShowRegionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_14_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalMycnl.g:397:3: (otherlv_15= 'SHOW' otherlv_16= 'DETAILS' otherlv_17= 'OF' otherlv_18= 'REGION' ( (lv_region_19_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:397:3: (otherlv_15= 'SHOW' otherlv_16= 'DETAILS' otherlv_17= 'OF' otherlv_18= 'REGION' ( (lv_region_19_0= RULE_INT ) ) )
                    // InternalMycnl.g:398:4: otherlv_15= 'SHOW' otherlv_16= 'DETAILS' otherlv_17= 'OF' otherlv_18= 'REGION' ( (lv_region_19_0= RULE_INT ) )
                    {
                    otherlv_15=(Token)match(input,21,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getShowRegionAccess().getSHOWKeyword_3_0());
                      			
                    }
                    otherlv_16=(Token)match(input,22,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getShowRegionAccess().getDETAILSKeyword_3_1());
                      			
                    }
                    otherlv_17=(Token)match(input,23,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getShowRegionAccess().getOFKeyword_3_2());
                      			
                    }
                    otherlv_18=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getShowRegionAccess().getREGIONKeyword_3_3());
                      			
                    }
                    // InternalMycnl.g:414:4: ( (lv_region_19_0= RULE_INT ) )
                    // InternalMycnl.g:415:5: (lv_region_19_0= RULE_INT )
                    {
                    // InternalMycnl.g:415:5: (lv_region_19_0= RULE_INT )
                    // InternalMycnl.g:416:6: lv_region_19_0= RULE_INT
                    {
                    lv_region_19_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_19_0, grammarAccess.getShowRegionAccess().getRegionINTTerminalRuleCall_3_4_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getShowRegionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_19_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalMycnl.g:434:3: (otherlv_20= 'show' otherlv_21= 'details' otherlv_22= 'of' otherlv_23= 'Region' ( (lv_region_24_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:434:3: (otherlv_20= 'show' otherlv_21= 'details' otherlv_22= 'of' otherlv_23= 'Region' ( (lv_region_24_0= RULE_INT ) ) )
                    // InternalMycnl.g:435:4: otherlv_20= 'show' otherlv_21= 'details' otherlv_22= 'of' otherlv_23= 'Region' ( (lv_region_24_0= RULE_INT ) )
                    {
                    otherlv_20=(Token)match(input,13,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getShowRegionAccess().getShowKeyword_4_0());
                      			
                    }
                    otherlv_21=(Token)match(input,14,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_21, grammarAccess.getShowRegionAccess().getDetailsKeyword_4_1());
                      			
                    }
                    otherlv_22=(Token)match(input,15,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getShowRegionAccess().getOfKeyword_4_2());
                      			
                    }
                    otherlv_23=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getShowRegionAccess().getRegionKeyword_4_3());
                      			
                    }
                    // InternalMycnl.g:451:4: ( (lv_region_24_0= RULE_INT ) )
                    // InternalMycnl.g:452:5: (lv_region_24_0= RULE_INT )
                    {
                    // InternalMycnl.g:452:5: (lv_region_24_0= RULE_INT )
                    // InternalMycnl.g:453:6: lv_region_24_0= RULE_INT
                    {
                    lv_region_24_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_24_0, grammarAccess.getShowRegionAccess().getRegionINTTerminalRuleCall_4_4_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getShowRegionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_24_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalMycnl.g:471:3: (otherlv_25= 'Show' otherlv_26= 'details' otherlv_27= 'of' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:471:3: (otherlv_25= 'Show' otherlv_26= 'details' otherlv_27= 'of' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) ) )
                    // InternalMycnl.g:472:4: otherlv_25= 'Show' otherlv_26= 'details' otherlv_27= 'of' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) )
                    {
                    otherlv_25=(Token)match(input,17,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getShowRegionAccess().getShowKeyword_5_0());
                      			
                    }
                    otherlv_26=(Token)match(input,14,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getShowRegionAccess().getDetailsKeyword_5_1());
                      			
                    }
                    otherlv_27=(Token)match(input,15,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_27, grammarAccess.getShowRegionAccess().getOfKeyword_5_2());
                      			
                    }
                    otherlv_28=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getShowRegionAccess().getRegionKeyword_5_3());
                      			
                    }
                    // InternalMycnl.g:488:4: ( (lv_region_29_0= RULE_INT ) )
                    // InternalMycnl.g:489:5: (lv_region_29_0= RULE_INT )
                    {
                    // InternalMycnl.g:489:5: (lv_region_29_0= RULE_INT )
                    // InternalMycnl.g:490:6: lv_region_29_0= RULE_INT
                    {
                    lv_region_29_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_29_0, grammarAccess.getShowRegionAccess().getRegionINTTerminalRuleCall_5_4_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getShowRegionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_29_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalMycnl.g:508:3: (otherlv_30= 'Show' otherlv_31= 'details' otherlv_32= 'of' otherlv_33= 'Region' ( (lv_region_34_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:508:3: (otherlv_30= 'Show' otherlv_31= 'details' otherlv_32= 'of' otherlv_33= 'Region' ( (lv_region_34_0= RULE_INT ) ) )
                    // InternalMycnl.g:509:4: otherlv_30= 'Show' otherlv_31= 'details' otherlv_32= 'of' otherlv_33= 'Region' ( (lv_region_34_0= RULE_INT ) )
                    {
                    otherlv_30=(Token)match(input,17,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_30, grammarAccess.getShowRegionAccess().getShowKeyword_6_0());
                      			
                    }
                    otherlv_31=(Token)match(input,14,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getShowRegionAccess().getDetailsKeyword_6_1());
                      			
                    }
                    otherlv_32=(Token)match(input,15,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_32, grammarAccess.getShowRegionAccess().getOfKeyword_6_2());
                      			
                    }
                    otherlv_33=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_33, grammarAccess.getShowRegionAccess().getRegionKeyword_6_3());
                      			
                    }
                    // InternalMycnl.g:525:4: ( (lv_region_34_0= RULE_INT ) )
                    // InternalMycnl.g:526:5: (lv_region_34_0= RULE_INT )
                    {
                    // InternalMycnl.g:526:5: (lv_region_34_0= RULE_INT )
                    // InternalMycnl.g:527:6: lv_region_34_0= RULE_INT
                    {
                    lv_region_34_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_34_0, grammarAccess.getShowRegionAccess().getRegionINTTerminalRuleCall_6_4_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getShowRegionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_34_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleshowRegion"


    // $ANTLR start "entryRulefindtempBuilAction"
    // InternalMycnl.g:548:1: entryRulefindtempBuilAction returns [EObject current=null] : iv_rulefindtempBuilAction= rulefindtempBuilAction EOF ;
    public final EObject entryRulefindtempBuilAction() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefindtempBuilAction = null;


        try {
            // InternalMycnl.g:548:59: (iv_rulefindtempBuilAction= rulefindtempBuilAction EOF )
            // InternalMycnl.g:549:2: iv_rulefindtempBuilAction= rulefindtempBuilAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFindtempBuilActionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefindtempBuilAction=rulefindtempBuilAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefindtempBuilAction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefindtempBuilAction"


    // $ANTLR start "rulefindtempBuilAction"
    // InternalMycnl.g:555:1: rulefindtempBuilAction returns [EObject current=null] : ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'build' ( (lv_no_of_buildings_8_0= RULE_INT ) ) otherlv_9= 'buildings' otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) otherlv_17= 'in' otherlv_18= 'region' ( (lv_region_19_0= RULE_INT ) ) ) | (otherlv_20= 'What' otherlv_21= 'Will' otherlv_22= 'Be' otherlv_23= 'The' otherlv_24= 'Temperature' otherlv_25= 'If' otherlv_26= 'We' otherlv_27= 'Build' ( (lv_no_of_buildings_28_0= RULE_INT ) ) otherlv_29= 'Buildings' otherlv_30= 'Of' otherlv_31= 'Dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) otherlv_37= 'In' otherlv_38= 'Region' ( (lv_region_39_0= RULE_INT ) ) ) | (otherlv_40= 'What' otherlv_41= 'will' otherlv_42= 'be' otherlv_43= 'the' otherlv_44= 'temperature' otherlv_45= 'if' otherlv_46= 'we' otherlv_47= 'build' ( (lv_no_of_buildings_48_0= RULE_INT ) ) otherlv_49= 'buildings' otherlv_50= 'of' otherlv_51= 'dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) otherlv_57= 'in' otherlv_58= 'region' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'TEMPERATURE' otherlv_65= 'IF' otherlv_66= 'WE' otherlv_67= 'BUILD' ( (lv_no_of_buildings_68_0= RULE_INT ) ) otherlv_69= 'BUILDINGS' otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) otherlv_77= 'IN' otherlv_78= 'REGION' ( (lv_region_79_0= RULE_INT ) ) ) | (otherlv_80= 'What' otherlv_81= 'Will' otherlv_82= 'be' otherlv_83= 'the' otherlv_84= 'Temperature' otherlv_85= 'if' otherlv_86= 'we' otherlv_87= 'Build' ( (lv_no_of_buildings_88_0= RULE_INT ) ) otherlv_89= 'Buildings' otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) otherlv_97= 'in' otherlv_98= 'Region' ( (lv_region_99_0= RULE_INT ) ) ) ) ;
    public final EObject rulefindtempBuilAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token lv_no_of_buildings_8_0=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token lv_length_12_0=null;
        Token otherlv_13=null;
        Token lv_breadth_14_0=null;
        Token otherlv_15=null;
        Token lv_height_16_0=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token lv_region_19_0=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token lv_no_of_buildings_28_0=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token lv_length_32_0=null;
        Token otherlv_33=null;
        Token lv_breadth_34_0=null;
        Token otherlv_35=null;
        Token lv_height_36_0=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token lv_region_39_0=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token otherlv_47=null;
        Token lv_no_of_buildings_48_0=null;
        Token otherlv_49=null;
        Token otherlv_50=null;
        Token otherlv_51=null;
        Token lv_length_52_0=null;
        Token otherlv_53=null;
        Token lv_breadth_54_0=null;
        Token otherlv_55=null;
        Token lv_height_56_0=null;
        Token otherlv_57=null;
        Token otherlv_58=null;
        Token lv_region_59_0=null;
        Token otherlv_60=null;
        Token otherlv_61=null;
        Token otherlv_62=null;
        Token otherlv_63=null;
        Token otherlv_64=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token otherlv_67=null;
        Token lv_no_of_buildings_68_0=null;
        Token otherlv_69=null;
        Token otherlv_70=null;
        Token otherlv_71=null;
        Token lv_length_72_0=null;
        Token otherlv_73=null;
        Token lv_breadth_74_0=null;
        Token otherlv_75=null;
        Token lv_height_76_0=null;
        Token otherlv_77=null;
        Token otherlv_78=null;
        Token lv_region_79_0=null;
        Token otherlv_80=null;
        Token otherlv_81=null;
        Token otherlv_82=null;
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token otherlv_85=null;
        Token otherlv_86=null;
        Token otherlv_87=null;
        Token lv_no_of_buildings_88_0=null;
        Token otherlv_89=null;
        Token otherlv_90=null;
        Token otherlv_91=null;
        Token lv_length_92_0=null;
        Token otherlv_93=null;
        Token lv_breadth_94_0=null;
        Token otherlv_95=null;
        Token lv_height_96_0=null;
        Token otherlv_97=null;
        Token otherlv_98=null;
        Token lv_region_99_0=null;


        	enterRule();

        try {
            // InternalMycnl.g:561:2: ( ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'build' ( (lv_no_of_buildings_8_0= RULE_INT ) ) otherlv_9= 'buildings' otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) otherlv_17= 'in' otherlv_18= 'region' ( (lv_region_19_0= RULE_INT ) ) ) | (otherlv_20= 'What' otherlv_21= 'Will' otherlv_22= 'Be' otherlv_23= 'The' otherlv_24= 'Temperature' otherlv_25= 'If' otherlv_26= 'We' otherlv_27= 'Build' ( (lv_no_of_buildings_28_0= RULE_INT ) ) otherlv_29= 'Buildings' otherlv_30= 'Of' otherlv_31= 'Dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) otherlv_37= 'In' otherlv_38= 'Region' ( (lv_region_39_0= RULE_INT ) ) ) | (otherlv_40= 'What' otherlv_41= 'will' otherlv_42= 'be' otherlv_43= 'the' otherlv_44= 'temperature' otherlv_45= 'if' otherlv_46= 'we' otherlv_47= 'build' ( (lv_no_of_buildings_48_0= RULE_INT ) ) otherlv_49= 'buildings' otherlv_50= 'of' otherlv_51= 'dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) otherlv_57= 'in' otherlv_58= 'region' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'TEMPERATURE' otherlv_65= 'IF' otherlv_66= 'WE' otherlv_67= 'BUILD' ( (lv_no_of_buildings_68_0= RULE_INT ) ) otherlv_69= 'BUILDINGS' otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) otherlv_77= 'IN' otherlv_78= 'REGION' ( (lv_region_79_0= RULE_INT ) ) ) | (otherlv_80= 'What' otherlv_81= 'Will' otherlv_82= 'be' otherlv_83= 'the' otherlv_84= 'Temperature' otherlv_85= 'if' otherlv_86= 'we' otherlv_87= 'Build' ( (lv_no_of_buildings_88_0= RULE_INT ) ) otherlv_89= 'Buildings' otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) otherlv_97= 'in' otherlv_98= 'Region' ( (lv_region_99_0= RULE_INT ) ) ) ) )
            // InternalMycnl.g:562:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'build' ( (lv_no_of_buildings_8_0= RULE_INT ) ) otherlv_9= 'buildings' otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) otherlv_17= 'in' otherlv_18= 'region' ( (lv_region_19_0= RULE_INT ) ) ) | (otherlv_20= 'What' otherlv_21= 'Will' otherlv_22= 'Be' otherlv_23= 'The' otherlv_24= 'Temperature' otherlv_25= 'If' otherlv_26= 'We' otherlv_27= 'Build' ( (lv_no_of_buildings_28_0= RULE_INT ) ) otherlv_29= 'Buildings' otherlv_30= 'Of' otherlv_31= 'Dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) otherlv_37= 'In' otherlv_38= 'Region' ( (lv_region_39_0= RULE_INT ) ) ) | (otherlv_40= 'What' otherlv_41= 'will' otherlv_42= 'be' otherlv_43= 'the' otherlv_44= 'temperature' otherlv_45= 'if' otherlv_46= 'we' otherlv_47= 'build' ( (lv_no_of_buildings_48_0= RULE_INT ) ) otherlv_49= 'buildings' otherlv_50= 'of' otherlv_51= 'dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) otherlv_57= 'in' otherlv_58= 'region' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'TEMPERATURE' otherlv_65= 'IF' otherlv_66= 'WE' otherlv_67= 'BUILD' ( (lv_no_of_buildings_68_0= RULE_INT ) ) otherlv_69= 'BUILDINGS' otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) otherlv_77= 'IN' otherlv_78= 'REGION' ( (lv_region_79_0= RULE_INT ) ) ) | (otherlv_80= 'What' otherlv_81= 'Will' otherlv_82= 'be' otherlv_83= 'the' otherlv_84= 'Temperature' otherlv_85= 'if' otherlv_86= 'we' otherlv_87= 'Build' ( (lv_no_of_buildings_88_0= RULE_INT ) ) otherlv_89= 'Buildings' otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) otherlv_97= 'in' otherlv_98= 'Region' ( (lv_region_99_0= RULE_INT ) ) ) )
            {
            // InternalMycnl.g:562:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'build' ( (lv_no_of_buildings_8_0= RULE_INT ) ) otherlv_9= 'buildings' otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) otherlv_17= 'in' otherlv_18= 'region' ( (lv_region_19_0= RULE_INT ) ) ) | (otherlv_20= 'What' otherlv_21= 'Will' otherlv_22= 'Be' otherlv_23= 'The' otherlv_24= 'Temperature' otherlv_25= 'If' otherlv_26= 'We' otherlv_27= 'Build' ( (lv_no_of_buildings_28_0= RULE_INT ) ) otherlv_29= 'Buildings' otherlv_30= 'Of' otherlv_31= 'Dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) otherlv_37= 'In' otherlv_38= 'Region' ( (lv_region_39_0= RULE_INT ) ) ) | (otherlv_40= 'What' otherlv_41= 'will' otherlv_42= 'be' otherlv_43= 'the' otherlv_44= 'temperature' otherlv_45= 'if' otherlv_46= 'we' otherlv_47= 'build' ( (lv_no_of_buildings_48_0= RULE_INT ) ) otherlv_49= 'buildings' otherlv_50= 'of' otherlv_51= 'dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) otherlv_57= 'in' otherlv_58= 'region' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'TEMPERATURE' otherlv_65= 'IF' otherlv_66= 'WE' otherlv_67= 'BUILD' ( (lv_no_of_buildings_68_0= RULE_INT ) ) otherlv_69= 'BUILDINGS' otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) otherlv_77= 'IN' otherlv_78= 'REGION' ( (lv_region_79_0= RULE_INT ) ) ) | (otherlv_80= 'What' otherlv_81= 'Will' otherlv_82= 'be' otherlv_83= 'the' otherlv_84= 'Temperature' otherlv_85= 'if' otherlv_86= 'we' otherlv_87= 'Build' ( (lv_no_of_buildings_88_0= RULE_INT ) ) otherlv_89= 'Buildings' otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) otherlv_97= 'in' otherlv_98= 'Region' ( (lv_region_99_0= RULE_INT ) ) ) )
            int alt4=5;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt4=1;
                }
                break;
            case 37:
                {
                int LA4_2 = input.LA(2);

                if ( (LA4_2==26) ) {
                    alt4=3;
                }
                else if ( (LA4_2==38) ) {
                    int LA4_5 = input.LA(3);

                    if ( (LA4_5==27) ) {
                        alt4=5;
                    }
                    else if ( (LA4_5==39) ) {
                        alt4=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 4, 5, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 2, input);

                    throw nvae;
                }
                }
                break;
            case 48:
                {
                alt4=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // InternalMycnl.g:563:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'build' ( (lv_no_of_buildings_8_0= RULE_INT ) ) otherlv_9= 'buildings' otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) otherlv_17= 'in' otherlv_18= 'region' ( (lv_region_19_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:563:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'build' ( (lv_no_of_buildings_8_0= RULE_INT ) ) otherlv_9= 'buildings' otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) otherlv_17= 'in' otherlv_18= 'region' ( (lv_region_19_0= RULE_INT ) ) )
                    // InternalMycnl.g:564:4: otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'build' ( (lv_no_of_buildings_8_0= RULE_INT ) ) otherlv_9= 'buildings' otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) otherlv_17= 'in' otherlv_18= 'region' ( (lv_region_19_0= RULE_INT ) )
                    {
                    otherlv_0=(Token)match(input,25,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFindtempBuilActionAccess().getWhatKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getFindtempBuilActionAccess().getWillKeyword_0_1());
                      			
                    }
                    otherlv_2=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getFindtempBuilActionAccess().getBeKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,28,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getFindtempBuilActionAccess().getTheKeyword_0_3());
                      			
                    }
                    otherlv_4=(Token)match(input,29,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getFindtempBuilActionAccess().getTemperatureKeyword_0_4());
                      			
                    }
                    otherlv_5=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getFindtempBuilActionAccess().getIfKeyword_0_5());
                      			
                    }
                    otherlv_6=(Token)match(input,31,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getFindtempBuilActionAccess().getWeKeyword_0_6());
                      			
                    }
                    otherlv_7=(Token)match(input,32,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getFindtempBuilActionAccess().getBuildKeyword_0_7());
                      			
                    }
                    // InternalMycnl.g:596:4: ( (lv_no_of_buildings_8_0= RULE_INT ) )
                    // InternalMycnl.g:597:5: (lv_no_of_buildings_8_0= RULE_INT )
                    {
                    // InternalMycnl.g:597:5: (lv_no_of_buildings_8_0= RULE_INT )
                    // InternalMycnl.g:598:6: lv_no_of_buildings_8_0= RULE_INT
                    {
                    lv_no_of_buildings_8_0=(Token)match(input,RULE_INT,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_buildings_8_0, grammarAccess.getFindtempBuilActionAccess().getNo_of_buildingsINTTerminalRuleCall_0_8_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_buildings",
                      							lv_no_of_buildings_8_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,33,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getFindtempBuilActionAccess().getBuildingsKeyword_0_9());
                      			
                    }
                    otherlv_10=(Token)match(input,15,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getFindtempBuilActionAccess().getOfKeyword_0_10());
                      			
                    }
                    otherlv_11=(Token)match(input,34,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getFindtempBuilActionAccess().getDimensionsKeyword_0_11());
                      			
                    }
                    // InternalMycnl.g:626:4: ( (lv_length_12_0= RULE_INT ) )
                    // InternalMycnl.g:627:5: (lv_length_12_0= RULE_INT )
                    {
                    // InternalMycnl.g:627:5: (lv_length_12_0= RULE_INT )
                    // InternalMycnl.g:628:6: lv_length_12_0= RULE_INT
                    {
                    lv_length_12_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_length_12_0, grammarAccess.getFindtempBuilActionAccess().getLengthINTTerminalRuleCall_0_12_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"length",
                      							lv_length_12_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_13=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getFindtempBuilActionAccess().getXKeyword_0_13());
                      			
                    }
                    // InternalMycnl.g:648:4: ( (lv_breadth_14_0= RULE_INT ) )
                    // InternalMycnl.g:649:5: (lv_breadth_14_0= RULE_INT )
                    {
                    // InternalMycnl.g:649:5: (lv_breadth_14_0= RULE_INT )
                    // InternalMycnl.g:650:6: lv_breadth_14_0= RULE_INT
                    {
                    lv_breadth_14_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_breadth_14_0, grammarAccess.getFindtempBuilActionAccess().getBreadthINTTerminalRuleCall_0_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"breadth",
                      							lv_breadth_14_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_15=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getFindtempBuilActionAccess().getXKeyword_0_15());
                      			
                    }
                    // InternalMycnl.g:670:4: ( (lv_height_16_0= RULE_INT ) )
                    // InternalMycnl.g:671:5: (lv_height_16_0= RULE_INT )
                    {
                    // InternalMycnl.g:671:5: (lv_height_16_0= RULE_INT )
                    // InternalMycnl.g:672:6: lv_height_16_0= RULE_INT
                    {
                    lv_height_16_0=(Token)match(input,RULE_INT,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_height_16_0, grammarAccess.getFindtempBuilActionAccess().getHeightINTTerminalRuleCall_0_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"height",
                      							lv_height_16_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_17=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getFindtempBuilActionAccess().getInKeyword_0_17());
                      			
                    }
                    otherlv_18=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getFindtempBuilActionAccess().getRegionKeyword_0_18());
                      			
                    }
                    // InternalMycnl.g:696:4: ( (lv_region_19_0= RULE_INT ) )
                    // InternalMycnl.g:697:5: (lv_region_19_0= RULE_INT )
                    {
                    // InternalMycnl.g:697:5: (lv_region_19_0= RULE_INT )
                    // InternalMycnl.g:698:6: lv_region_19_0= RULE_INT
                    {
                    lv_region_19_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_19_0, grammarAccess.getFindtempBuilActionAccess().getRegionINTTerminalRuleCall_0_19_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_19_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:716:3: (otherlv_20= 'What' otherlv_21= 'Will' otherlv_22= 'Be' otherlv_23= 'The' otherlv_24= 'Temperature' otherlv_25= 'If' otherlv_26= 'We' otherlv_27= 'Build' ( (lv_no_of_buildings_28_0= RULE_INT ) ) otherlv_29= 'Buildings' otherlv_30= 'Of' otherlv_31= 'Dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) otherlv_37= 'In' otherlv_38= 'Region' ( (lv_region_39_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:716:3: (otherlv_20= 'What' otherlv_21= 'Will' otherlv_22= 'Be' otherlv_23= 'The' otherlv_24= 'Temperature' otherlv_25= 'If' otherlv_26= 'We' otherlv_27= 'Build' ( (lv_no_of_buildings_28_0= RULE_INT ) ) otherlv_29= 'Buildings' otherlv_30= 'Of' otherlv_31= 'Dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) otherlv_37= 'In' otherlv_38= 'Region' ( (lv_region_39_0= RULE_INT ) ) )
                    // InternalMycnl.g:717:4: otherlv_20= 'What' otherlv_21= 'Will' otherlv_22= 'Be' otherlv_23= 'The' otherlv_24= 'Temperature' otherlv_25= 'If' otherlv_26= 'We' otherlv_27= 'Build' ( (lv_no_of_buildings_28_0= RULE_INT ) ) otherlv_29= 'Buildings' otherlv_30= 'Of' otherlv_31= 'Dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) otherlv_37= 'In' otherlv_38= 'Region' ( (lv_region_39_0= RULE_INT ) )
                    {
                    otherlv_20=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getFindtempBuilActionAccess().getWhatKeyword_1_0());
                      			
                    }
                    otherlv_21=(Token)match(input,38,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_21, grammarAccess.getFindtempBuilActionAccess().getWillKeyword_1_1());
                      			
                    }
                    otherlv_22=(Token)match(input,39,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getFindtempBuilActionAccess().getBeKeyword_1_2());
                      			
                    }
                    otherlv_23=(Token)match(input,40,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getFindtempBuilActionAccess().getTheKeyword_1_3());
                      			
                    }
                    otherlv_24=(Token)match(input,41,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_24, grammarAccess.getFindtempBuilActionAccess().getTemperatureKeyword_1_4());
                      			
                    }
                    otherlv_25=(Token)match(input,42,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getFindtempBuilActionAccess().getIfKeyword_1_5());
                      			
                    }
                    otherlv_26=(Token)match(input,43,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getFindtempBuilActionAccess().getWeKeyword_1_6());
                      			
                    }
                    otherlv_27=(Token)match(input,44,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_27, grammarAccess.getFindtempBuilActionAccess().getBuildKeyword_1_7());
                      			
                    }
                    // InternalMycnl.g:749:4: ( (lv_no_of_buildings_28_0= RULE_INT ) )
                    // InternalMycnl.g:750:5: (lv_no_of_buildings_28_0= RULE_INT )
                    {
                    // InternalMycnl.g:750:5: (lv_no_of_buildings_28_0= RULE_INT )
                    // InternalMycnl.g:751:6: lv_no_of_buildings_28_0= RULE_INT
                    {
                    lv_no_of_buildings_28_0=(Token)match(input,RULE_INT,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_buildings_28_0, grammarAccess.getFindtempBuilActionAccess().getNo_of_buildingsINTTerminalRuleCall_1_8_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_buildings",
                      							lv_no_of_buildings_28_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_29=(Token)match(input,45,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_29, grammarAccess.getFindtempBuilActionAccess().getBuildingsKeyword_1_9());
                      			
                    }
                    otherlv_30=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_30, grammarAccess.getFindtempBuilActionAccess().getOfKeyword_1_10());
                      			
                    }
                    otherlv_31=(Token)match(input,46,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getFindtempBuilActionAccess().getDimensionsKeyword_1_11());
                      			
                    }
                    // InternalMycnl.g:779:4: ( (lv_length_32_0= RULE_INT ) )
                    // InternalMycnl.g:780:5: (lv_length_32_0= RULE_INT )
                    {
                    // InternalMycnl.g:780:5: (lv_length_32_0= RULE_INT )
                    // InternalMycnl.g:781:6: lv_length_32_0= RULE_INT
                    {
                    lv_length_32_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_length_32_0, grammarAccess.getFindtempBuilActionAccess().getLengthINTTerminalRuleCall_1_12_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"length",
                      							lv_length_32_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_33=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_33, grammarAccess.getFindtempBuilActionAccess().getXKeyword_1_13());
                      			
                    }
                    // InternalMycnl.g:801:4: ( (lv_breadth_34_0= RULE_INT ) )
                    // InternalMycnl.g:802:5: (lv_breadth_34_0= RULE_INT )
                    {
                    // InternalMycnl.g:802:5: (lv_breadth_34_0= RULE_INT )
                    // InternalMycnl.g:803:6: lv_breadth_34_0= RULE_INT
                    {
                    lv_breadth_34_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_breadth_34_0, grammarAccess.getFindtempBuilActionAccess().getBreadthINTTerminalRuleCall_1_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"breadth",
                      							lv_breadth_34_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_35=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_35, grammarAccess.getFindtempBuilActionAccess().getXKeyword_1_15());
                      			
                    }
                    // InternalMycnl.g:823:4: ( (lv_height_36_0= RULE_INT ) )
                    // InternalMycnl.g:824:5: (lv_height_36_0= RULE_INT )
                    {
                    // InternalMycnl.g:824:5: (lv_height_36_0= RULE_INT )
                    // InternalMycnl.g:825:6: lv_height_36_0= RULE_INT
                    {
                    lv_height_36_0=(Token)match(input,RULE_INT,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_height_36_0, grammarAccess.getFindtempBuilActionAccess().getHeightINTTerminalRuleCall_1_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"height",
                      							lv_height_36_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_37=(Token)match(input,47,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_37, grammarAccess.getFindtempBuilActionAccess().getInKeyword_1_17());
                      			
                    }
                    otherlv_38=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_38, grammarAccess.getFindtempBuilActionAccess().getRegionKeyword_1_18());
                      			
                    }
                    // InternalMycnl.g:849:4: ( (lv_region_39_0= RULE_INT ) )
                    // InternalMycnl.g:850:5: (lv_region_39_0= RULE_INT )
                    {
                    // InternalMycnl.g:850:5: (lv_region_39_0= RULE_INT )
                    // InternalMycnl.g:851:6: lv_region_39_0= RULE_INT
                    {
                    lv_region_39_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_39_0, grammarAccess.getFindtempBuilActionAccess().getRegionINTTerminalRuleCall_1_19_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_39_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalMycnl.g:869:3: (otherlv_40= 'What' otherlv_41= 'will' otherlv_42= 'be' otherlv_43= 'the' otherlv_44= 'temperature' otherlv_45= 'if' otherlv_46= 'we' otherlv_47= 'build' ( (lv_no_of_buildings_48_0= RULE_INT ) ) otherlv_49= 'buildings' otherlv_50= 'of' otherlv_51= 'dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) otherlv_57= 'in' otherlv_58= 'region' ( (lv_region_59_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:869:3: (otherlv_40= 'What' otherlv_41= 'will' otherlv_42= 'be' otherlv_43= 'the' otherlv_44= 'temperature' otherlv_45= 'if' otherlv_46= 'we' otherlv_47= 'build' ( (lv_no_of_buildings_48_0= RULE_INT ) ) otherlv_49= 'buildings' otherlv_50= 'of' otherlv_51= 'dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) otherlv_57= 'in' otherlv_58= 'region' ( (lv_region_59_0= RULE_INT ) ) )
                    // InternalMycnl.g:870:4: otherlv_40= 'What' otherlv_41= 'will' otherlv_42= 'be' otherlv_43= 'the' otherlv_44= 'temperature' otherlv_45= 'if' otherlv_46= 'we' otherlv_47= 'build' ( (lv_no_of_buildings_48_0= RULE_INT ) ) otherlv_49= 'buildings' otherlv_50= 'of' otherlv_51= 'dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) otherlv_57= 'in' otherlv_58= 'region' ( (lv_region_59_0= RULE_INT ) )
                    {
                    otherlv_40=(Token)match(input,37,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_40, grammarAccess.getFindtempBuilActionAccess().getWhatKeyword_2_0());
                      			
                    }
                    otherlv_41=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_41, grammarAccess.getFindtempBuilActionAccess().getWillKeyword_2_1());
                      			
                    }
                    otherlv_42=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getFindtempBuilActionAccess().getBeKeyword_2_2());
                      			
                    }
                    otherlv_43=(Token)match(input,28,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_43, grammarAccess.getFindtempBuilActionAccess().getTheKeyword_2_3());
                      			
                    }
                    otherlv_44=(Token)match(input,29,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_44, grammarAccess.getFindtempBuilActionAccess().getTemperatureKeyword_2_4());
                      			
                    }
                    otherlv_45=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_45, grammarAccess.getFindtempBuilActionAccess().getIfKeyword_2_5());
                      			
                    }
                    otherlv_46=(Token)match(input,31,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_46, grammarAccess.getFindtempBuilActionAccess().getWeKeyword_2_6());
                      			
                    }
                    otherlv_47=(Token)match(input,32,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_47, grammarAccess.getFindtempBuilActionAccess().getBuildKeyword_2_7());
                      			
                    }
                    // InternalMycnl.g:902:4: ( (lv_no_of_buildings_48_0= RULE_INT ) )
                    // InternalMycnl.g:903:5: (lv_no_of_buildings_48_0= RULE_INT )
                    {
                    // InternalMycnl.g:903:5: (lv_no_of_buildings_48_0= RULE_INT )
                    // InternalMycnl.g:904:6: lv_no_of_buildings_48_0= RULE_INT
                    {
                    lv_no_of_buildings_48_0=(Token)match(input,RULE_INT,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_buildings_48_0, grammarAccess.getFindtempBuilActionAccess().getNo_of_buildingsINTTerminalRuleCall_2_8_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_buildings",
                      							lv_no_of_buildings_48_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_49=(Token)match(input,33,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_49, grammarAccess.getFindtempBuilActionAccess().getBuildingsKeyword_2_9());
                      			
                    }
                    otherlv_50=(Token)match(input,15,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_50, grammarAccess.getFindtempBuilActionAccess().getOfKeyword_2_10());
                      			
                    }
                    otherlv_51=(Token)match(input,34,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_51, grammarAccess.getFindtempBuilActionAccess().getDimensionsKeyword_2_11());
                      			
                    }
                    // InternalMycnl.g:932:4: ( (lv_length_52_0= RULE_INT ) )
                    // InternalMycnl.g:933:5: (lv_length_52_0= RULE_INT )
                    {
                    // InternalMycnl.g:933:5: (lv_length_52_0= RULE_INT )
                    // InternalMycnl.g:934:6: lv_length_52_0= RULE_INT
                    {
                    lv_length_52_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_length_52_0, grammarAccess.getFindtempBuilActionAccess().getLengthINTTerminalRuleCall_2_12_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"length",
                      							lv_length_52_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_53=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_53, grammarAccess.getFindtempBuilActionAccess().getXKeyword_2_13());
                      			
                    }
                    // InternalMycnl.g:954:4: ( (lv_breadth_54_0= RULE_INT ) )
                    // InternalMycnl.g:955:5: (lv_breadth_54_0= RULE_INT )
                    {
                    // InternalMycnl.g:955:5: (lv_breadth_54_0= RULE_INT )
                    // InternalMycnl.g:956:6: lv_breadth_54_0= RULE_INT
                    {
                    lv_breadth_54_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_breadth_54_0, grammarAccess.getFindtempBuilActionAccess().getBreadthINTTerminalRuleCall_2_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"breadth",
                      							lv_breadth_54_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_55=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_55, grammarAccess.getFindtempBuilActionAccess().getXKeyword_2_15());
                      			
                    }
                    // InternalMycnl.g:976:4: ( (lv_height_56_0= RULE_INT ) )
                    // InternalMycnl.g:977:5: (lv_height_56_0= RULE_INT )
                    {
                    // InternalMycnl.g:977:5: (lv_height_56_0= RULE_INT )
                    // InternalMycnl.g:978:6: lv_height_56_0= RULE_INT
                    {
                    lv_height_56_0=(Token)match(input,RULE_INT,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_height_56_0, grammarAccess.getFindtempBuilActionAccess().getHeightINTTerminalRuleCall_2_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"height",
                      							lv_height_56_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_57=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_57, grammarAccess.getFindtempBuilActionAccess().getInKeyword_2_17());
                      			
                    }
                    otherlv_58=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_58, grammarAccess.getFindtempBuilActionAccess().getRegionKeyword_2_18());
                      			
                    }
                    // InternalMycnl.g:1002:4: ( (lv_region_59_0= RULE_INT ) )
                    // InternalMycnl.g:1003:5: (lv_region_59_0= RULE_INT )
                    {
                    // InternalMycnl.g:1003:5: (lv_region_59_0= RULE_INT )
                    // InternalMycnl.g:1004:6: lv_region_59_0= RULE_INT
                    {
                    lv_region_59_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_59_0, grammarAccess.getFindtempBuilActionAccess().getRegionINTTerminalRuleCall_2_19_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_59_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalMycnl.g:1022:3: (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'TEMPERATURE' otherlv_65= 'IF' otherlv_66= 'WE' otherlv_67= 'BUILD' ( (lv_no_of_buildings_68_0= RULE_INT ) ) otherlv_69= 'BUILDINGS' otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) otherlv_77= 'IN' otherlv_78= 'REGION' ( (lv_region_79_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:1022:3: (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'TEMPERATURE' otherlv_65= 'IF' otherlv_66= 'WE' otherlv_67= 'BUILD' ( (lv_no_of_buildings_68_0= RULE_INT ) ) otherlv_69= 'BUILDINGS' otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) otherlv_77= 'IN' otherlv_78= 'REGION' ( (lv_region_79_0= RULE_INT ) ) )
                    // InternalMycnl.g:1023:4: otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'TEMPERATURE' otherlv_65= 'IF' otherlv_66= 'WE' otherlv_67= 'BUILD' ( (lv_no_of_buildings_68_0= RULE_INT ) ) otherlv_69= 'BUILDINGS' otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) otherlv_77= 'IN' otherlv_78= 'REGION' ( (lv_region_79_0= RULE_INT ) )
                    {
                    otherlv_60=(Token)match(input,48,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_60, grammarAccess.getFindtempBuilActionAccess().getWHATKeyword_3_0());
                      			
                    }
                    otherlv_61=(Token)match(input,49,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_61, grammarAccess.getFindtempBuilActionAccess().getWILLKeyword_3_1());
                      			
                    }
                    otherlv_62=(Token)match(input,50,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_62, grammarAccess.getFindtempBuilActionAccess().getBEKeyword_3_2());
                      			
                    }
                    otherlv_63=(Token)match(input,51,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_63, grammarAccess.getFindtempBuilActionAccess().getTHEKeyword_3_3());
                      			
                    }
                    otherlv_64=(Token)match(input,52,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_64, grammarAccess.getFindtempBuilActionAccess().getTEMPERATUREKeyword_3_4());
                      			
                    }
                    otherlv_65=(Token)match(input,53,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_65, grammarAccess.getFindtempBuilActionAccess().getIFKeyword_3_5());
                      			
                    }
                    otherlv_66=(Token)match(input,54,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_66, grammarAccess.getFindtempBuilActionAccess().getWEKeyword_3_6());
                      			
                    }
                    otherlv_67=(Token)match(input,55,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_67, grammarAccess.getFindtempBuilActionAccess().getBUILDKeyword_3_7());
                      			
                    }
                    // InternalMycnl.g:1055:4: ( (lv_no_of_buildings_68_0= RULE_INT ) )
                    // InternalMycnl.g:1056:5: (lv_no_of_buildings_68_0= RULE_INT )
                    {
                    // InternalMycnl.g:1056:5: (lv_no_of_buildings_68_0= RULE_INT )
                    // InternalMycnl.g:1057:6: lv_no_of_buildings_68_0= RULE_INT
                    {
                    lv_no_of_buildings_68_0=(Token)match(input,RULE_INT,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_buildings_68_0, grammarAccess.getFindtempBuilActionAccess().getNo_of_buildingsINTTerminalRuleCall_3_8_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_buildings",
                      							lv_no_of_buildings_68_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_69=(Token)match(input,56,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_69, grammarAccess.getFindtempBuilActionAccess().getBUILDINGSKeyword_3_9());
                      			
                    }
                    otherlv_70=(Token)match(input,23,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_70, grammarAccess.getFindtempBuilActionAccess().getOFKeyword_3_10());
                      			
                    }
                    otherlv_71=(Token)match(input,57,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_71, grammarAccess.getFindtempBuilActionAccess().getDIMENSIONSKeyword_3_11());
                      			
                    }
                    // InternalMycnl.g:1085:4: ( (lv_length_72_0= RULE_INT ) )
                    // InternalMycnl.g:1086:5: (lv_length_72_0= RULE_INT )
                    {
                    // InternalMycnl.g:1086:5: (lv_length_72_0= RULE_INT )
                    // InternalMycnl.g:1087:6: lv_length_72_0= RULE_INT
                    {
                    lv_length_72_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_length_72_0, grammarAccess.getFindtempBuilActionAccess().getLengthINTTerminalRuleCall_3_12_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"length",
                      							lv_length_72_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_73=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_73, grammarAccess.getFindtempBuilActionAccess().getXKeyword_3_13());
                      			
                    }
                    // InternalMycnl.g:1107:4: ( (lv_breadth_74_0= RULE_INT ) )
                    // InternalMycnl.g:1108:5: (lv_breadth_74_0= RULE_INT )
                    {
                    // InternalMycnl.g:1108:5: (lv_breadth_74_0= RULE_INT )
                    // InternalMycnl.g:1109:6: lv_breadth_74_0= RULE_INT
                    {
                    lv_breadth_74_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_breadth_74_0, grammarAccess.getFindtempBuilActionAccess().getBreadthINTTerminalRuleCall_3_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"breadth",
                      							lv_breadth_74_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_75=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_75, grammarAccess.getFindtempBuilActionAccess().getXKeyword_3_15());
                      			
                    }
                    // InternalMycnl.g:1129:4: ( (lv_height_76_0= RULE_INT ) )
                    // InternalMycnl.g:1130:5: (lv_height_76_0= RULE_INT )
                    {
                    // InternalMycnl.g:1130:5: (lv_height_76_0= RULE_INT )
                    // InternalMycnl.g:1131:6: lv_height_76_0= RULE_INT
                    {
                    lv_height_76_0=(Token)match(input,RULE_INT,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_height_76_0, grammarAccess.getFindtempBuilActionAccess().getHeightINTTerminalRuleCall_3_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"height",
                      							lv_height_76_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_77=(Token)match(input,58,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_77, grammarAccess.getFindtempBuilActionAccess().getINKeyword_3_17());
                      			
                    }
                    otherlv_78=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_78, grammarAccess.getFindtempBuilActionAccess().getREGIONKeyword_3_18());
                      			
                    }
                    // InternalMycnl.g:1155:4: ( (lv_region_79_0= RULE_INT ) )
                    // InternalMycnl.g:1156:5: (lv_region_79_0= RULE_INT )
                    {
                    // InternalMycnl.g:1156:5: (lv_region_79_0= RULE_INT )
                    // InternalMycnl.g:1157:6: lv_region_79_0= RULE_INT
                    {
                    lv_region_79_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_79_0, grammarAccess.getFindtempBuilActionAccess().getRegionINTTerminalRuleCall_3_19_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_79_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalMycnl.g:1175:3: (otherlv_80= 'What' otherlv_81= 'Will' otherlv_82= 'be' otherlv_83= 'the' otherlv_84= 'Temperature' otherlv_85= 'if' otherlv_86= 'we' otherlv_87= 'Build' ( (lv_no_of_buildings_88_0= RULE_INT ) ) otherlv_89= 'Buildings' otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) otherlv_97= 'in' otherlv_98= 'Region' ( (lv_region_99_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:1175:3: (otherlv_80= 'What' otherlv_81= 'Will' otherlv_82= 'be' otherlv_83= 'the' otherlv_84= 'Temperature' otherlv_85= 'if' otherlv_86= 'we' otherlv_87= 'Build' ( (lv_no_of_buildings_88_0= RULE_INT ) ) otherlv_89= 'Buildings' otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) otherlv_97= 'in' otherlv_98= 'Region' ( (lv_region_99_0= RULE_INT ) ) )
                    // InternalMycnl.g:1176:4: otherlv_80= 'What' otherlv_81= 'Will' otherlv_82= 'be' otherlv_83= 'the' otherlv_84= 'Temperature' otherlv_85= 'if' otherlv_86= 'we' otherlv_87= 'Build' ( (lv_no_of_buildings_88_0= RULE_INT ) ) otherlv_89= 'Buildings' otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) otherlv_97= 'in' otherlv_98= 'Region' ( (lv_region_99_0= RULE_INT ) )
                    {
                    otherlv_80=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_80, grammarAccess.getFindtempBuilActionAccess().getWhatKeyword_4_0());
                      			
                    }
                    otherlv_81=(Token)match(input,38,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_81, grammarAccess.getFindtempBuilActionAccess().getWillKeyword_4_1());
                      			
                    }
                    otherlv_82=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_82, grammarAccess.getFindtempBuilActionAccess().getBeKeyword_4_2());
                      			
                    }
                    otherlv_83=(Token)match(input,28,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_83, grammarAccess.getFindtempBuilActionAccess().getTheKeyword_4_3());
                      			
                    }
                    otherlv_84=(Token)match(input,41,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_84, grammarAccess.getFindtempBuilActionAccess().getTemperatureKeyword_4_4());
                      			
                    }
                    otherlv_85=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_85, grammarAccess.getFindtempBuilActionAccess().getIfKeyword_4_5());
                      			
                    }
                    otherlv_86=(Token)match(input,31,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_86, grammarAccess.getFindtempBuilActionAccess().getWeKeyword_4_6());
                      			
                    }
                    otherlv_87=(Token)match(input,44,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_87, grammarAccess.getFindtempBuilActionAccess().getBuildKeyword_4_7());
                      			
                    }
                    // InternalMycnl.g:1208:4: ( (lv_no_of_buildings_88_0= RULE_INT ) )
                    // InternalMycnl.g:1209:5: (lv_no_of_buildings_88_0= RULE_INT )
                    {
                    // InternalMycnl.g:1209:5: (lv_no_of_buildings_88_0= RULE_INT )
                    // InternalMycnl.g:1210:6: lv_no_of_buildings_88_0= RULE_INT
                    {
                    lv_no_of_buildings_88_0=(Token)match(input,RULE_INT,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_buildings_88_0, grammarAccess.getFindtempBuilActionAccess().getNo_of_buildingsINTTerminalRuleCall_4_8_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_buildings",
                      							lv_no_of_buildings_88_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_89=(Token)match(input,45,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_89, grammarAccess.getFindtempBuilActionAccess().getBuildingsKeyword_4_9());
                      			
                    }
                    otherlv_90=(Token)match(input,15,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_90, grammarAccess.getFindtempBuilActionAccess().getOfKeyword_4_10());
                      			
                    }
                    otherlv_91=(Token)match(input,46,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_91, grammarAccess.getFindtempBuilActionAccess().getDimensionsKeyword_4_11());
                      			
                    }
                    // InternalMycnl.g:1238:4: ( (lv_length_92_0= RULE_INT ) )
                    // InternalMycnl.g:1239:5: (lv_length_92_0= RULE_INT )
                    {
                    // InternalMycnl.g:1239:5: (lv_length_92_0= RULE_INT )
                    // InternalMycnl.g:1240:6: lv_length_92_0= RULE_INT
                    {
                    lv_length_92_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_length_92_0, grammarAccess.getFindtempBuilActionAccess().getLengthINTTerminalRuleCall_4_12_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"length",
                      							lv_length_92_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_93=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_93, grammarAccess.getFindtempBuilActionAccess().getXKeyword_4_13());
                      			
                    }
                    // InternalMycnl.g:1260:4: ( (lv_breadth_94_0= RULE_INT ) )
                    // InternalMycnl.g:1261:5: (lv_breadth_94_0= RULE_INT )
                    {
                    // InternalMycnl.g:1261:5: (lv_breadth_94_0= RULE_INT )
                    // InternalMycnl.g:1262:6: lv_breadth_94_0= RULE_INT
                    {
                    lv_breadth_94_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_breadth_94_0, grammarAccess.getFindtempBuilActionAccess().getBreadthINTTerminalRuleCall_4_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"breadth",
                      							lv_breadth_94_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_95=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_95, grammarAccess.getFindtempBuilActionAccess().getXKeyword_4_15());
                      			
                    }
                    // InternalMycnl.g:1282:4: ( (lv_height_96_0= RULE_INT ) )
                    // InternalMycnl.g:1283:5: (lv_height_96_0= RULE_INT )
                    {
                    // InternalMycnl.g:1283:5: (lv_height_96_0= RULE_INT )
                    // InternalMycnl.g:1284:6: lv_height_96_0= RULE_INT
                    {
                    lv_height_96_0=(Token)match(input,RULE_INT,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_height_96_0, grammarAccess.getFindtempBuilActionAccess().getHeightINTTerminalRuleCall_4_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"height",
                      							lv_height_96_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_97=(Token)match(input,36,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_97, grammarAccess.getFindtempBuilActionAccess().getInKeyword_4_17());
                      			
                    }
                    otherlv_98=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_98, grammarAccess.getFindtempBuilActionAccess().getRegionKeyword_4_18());
                      			
                    }
                    // InternalMycnl.g:1308:4: ( (lv_region_99_0= RULE_INT ) )
                    // InternalMycnl.g:1309:5: (lv_region_99_0= RULE_INT )
                    {
                    // InternalMycnl.g:1309:5: (lv_region_99_0= RULE_INT )
                    // InternalMycnl.g:1310:6: lv_region_99_0= RULE_INT
                    {
                    lv_region_99_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_99_0, grammarAccess.getFindtempBuilActionAccess().getRegionINTTerminalRuleCall_4_19_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempBuilActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_99_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefindtempBuilAction"


    // $ANTLR start "entryRulecaltreesBuildAction"
    // InternalMycnl.g:1331:1: entryRulecaltreesBuildAction returns [EObject current=null] : iv_rulecaltreesBuildAction= rulecaltreesBuildAction EOF ;
    public final EObject entryRulecaltreesBuildAction() throws RecognitionException {
        EObject current = null;

        EObject iv_rulecaltreesBuildAction = null;


        try {
            // InternalMycnl.g:1331:60: (iv_rulecaltreesBuildAction= rulecaltreesBuildAction EOF )
            // InternalMycnl.g:1332:2: iv_rulecaltreesBuildAction= rulecaltreesBuildAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCaltreesBuildActionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulecaltreesBuildAction=rulecaltreesBuildAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecaltreesBuildAction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulecaltreesBuildAction"


    // $ANTLR start "rulecaltreesBuildAction"
    // InternalMycnl.g:1338:1: rulecaltreesBuildAction returns [EObject current=null] : ( (otherlv_0= 'how' otherlv_1= 'many' otherlv_2= 'trees' otherlv_3= 'to' otherlv_4= 'be' otherlv_5= 'planted' otherlv_6= 'if' otherlv_7= 'we' otherlv_8= 'build' ( (lv_no_of_buildings_9_0= RULE_INT ) ) otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) otherlv_17= 'in' otherlv_18= 'region' ( (lv_region_19_0= RULE_INT ) ) ) | (otherlv_20= 'How' otherlv_21= 'many' otherlv_22= 'trees' otherlv_23= 'to' otherlv_24= 'be' otherlv_25= 'planted' otherlv_26= 'if' otherlv_27= 'we' otherlv_28= 'build' ( (lv_no_of_buildings_29_0= RULE_INT ) ) otherlv_30= 'of' otherlv_31= 'dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) otherlv_37= 'in' otherlv_38= 'region' ( (lv_region_39_0= RULE_INT ) ) ) | (otherlv_40= 'How' otherlv_41= 'Many' otherlv_42= 'Trees' otherlv_43= 'To' otherlv_44= 'Be' otherlv_45= 'Planted' otherlv_46= 'If' otherlv_47= 'We' otherlv_48= 'Build' ( (lv_no_of_buildings_49_0= RULE_INT ) ) otherlv_50= 'Of' otherlv_51= 'Dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) otherlv_57= 'In' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'HOW' otherlv_61= 'MANY' otherlv_62= 'TREES' otherlv_63= 'TO' otherlv_64= 'BE' otherlv_65= 'PLANTED' otherlv_66= 'IF' otherlv_67= 'WE' otherlv_68= 'BUILD' ( (lv_no_of_buildings_69_0= RULE_INT ) ) otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) otherlv_77= 'IN' otherlv_78= 'REGION' ( (lv_region_79_0= RULE_INT ) ) ) | (otherlv_80= 'How' otherlv_81= 'Many' otherlv_82= 'Trees' otherlv_83= 'to' otherlv_84= 'be' otherlv_85= 'Planted' otherlv_86= 'if' otherlv_87= 'we' otherlv_88= 'Build' ( (lv_no_of_buildings_89_0= RULE_INT ) ) otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) otherlv_97= 'in' otherlv_98= 'Region' ( (lv_region_99_0= RULE_INT ) ) ) ) ;
    public final EObject rulecaltreesBuildAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_no_of_buildings_9_0=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token lv_length_12_0=null;
        Token otherlv_13=null;
        Token lv_breadth_14_0=null;
        Token otherlv_15=null;
        Token lv_height_16_0=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token lv_region_19_0=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_no_of_buildings_29_0=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token lv_length_32_0=null;
        Token otherlv_33=null;
        Token lv_breadth_34_0=null;
        Token otherlv_35=null;
        Token lv_height_36_0=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token lv_region_39_0=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token otherlv_47=null;
        Token otherlv_48=null;
        Token lv_no_of_buildings_49_0=null;
        Token otherlv_50=null;
        Token otherlv_51=null;
        Token lv_length_52_0=null;
        Token otherlv_53=null;
        Token lv_breadth_54_0=null;
        Token otherlv_55=null;
        Token lv_height_56_0=null;
        Token otherlv_57=null;
        Token otherlv_58=null;
        Token lv_region_59_0=null;
        Token otherlv_60=null;
        Token otherlv_61=null;
        Token otherlv_62=null;
        Token otherlv_63=null;
        Token otherlv_64=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token otherlv_67=null;
        Token otherlv_68=null;
        Token lv_no_of_buildings_69_0=null;
        Token otherlv_70=null;
        Token otherlv_71=null;
        Token lv_length_72_0=null;
        Token otherlv_73=null;
        Token lv_breadth_74_0=null;
        Token otherlv_75=null;
        Token lv_height_76_0=null;
        Token otherlv_77=null;
        Token otherlv_78=null;
        Token lv_region_79_0=null;
        Token otherlv_80=null;
        Token otherlv_81=null;
        Token otherlv_82=null;
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token otherlv_85=null;
        Token otherlv_86=null;
        Token otherlv_87=null;
        Token otherlv_88=null;
        Token lv_no_of_buildings_89_0=null;
        Token otherlv_90=null;
        Token otherlv_91=null;
        Token lv_length_92_0=null;
        Token otherlv_93=null;
        Token lv_breadth_94_0=null;
        Token otherlv_95=null;
        Token lv_height_96_0=null;
        Token otherlv_97=null;
        Token otherlv_98=null;
        Token lv_region_99_0=null;


        	enterRule();

        try {
            // InternalMycnl.g:1344:2: ( ( (otherlv_0= 'how' otherlv_1= 'many' otherlv_2= 'trees' otherlv_3= 'to' otherlv_4= 'be' otherlv_5= 'planted' otherlv_6= 'if' otherlv_7= 'we' otherlv_8= 'build' ( (lv_no_of_buildings_9_0= RULE_INT ) ) otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) otherlv_17= 'in' otherlv_18= 'region' ( (lv_region_19_0= RULE_INT ) ) ) | (otherlv_20= 'How' otherlv_21= 'many' otherlv_22= 'trees' otherlv_23= 'to' otherlv_24= 'be' otherlv_25= 'planted' otherlv_26= 'if' otherlv_27= 'we' otherlv_28= 'build' ( (lv_no_of_buildings_29_0= RULE_INT ) ) otherlv_30= 'of' otherlv_31= 'dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) otherlv_37= 'in' otherlv_38= 'region' ( (lv_region_39_0= RULE_INT ) ) ) | (otherlv_40= 'How' otherlv_41= 'Many' otherlv_42= 'Trees' otherlv_43= 'To' otherlv_44= 'Be' otherlv_45= 'Planted' otherlv_46= 'If' otherlv_47= 'We' otherlv_48= 'Build' ( (lv_no_of_buildings_49_0= RULE_INT ) ) otherlv_50= 'Of' otherlv_51= 'Dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) otherlv_57= 'In' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'HOW' otherlv_61= 'MANY' otherlv_62= 'TREES' otherlv_63= 'TO' otherlv_64= 'BE' otherlv_65= 'PLANTED' otherlv_66= 'IF' otherlv_67= 'WE' otherlv_68= 'BUILD' ( (lv_no_of_buildings_69_0= RULE_INT ) ) otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) otherlv_77= 'IN' otherlv_78= 'REGION' ( (lv_region_79_0= RULE_INT ) ) ) | (otherlv_80= 'How' otherlv_81= 'Many' otherlv_82= 'Trees' otherlv_83= 'to' otherlv_84= 'be' otherlv_85= 'Planted' otherlv_86= 'if' otherlv_87= 'we' otherlv_88= 'Build' ( (lv_no_of_buildings_89_0= RULE_INT ) ) otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) otherlv_97= 'in' otherlv_98= 'Region' ( (lv_region_99_0= RULE_INT ) ) ) ) )
            // InternalMycnl.g:1345:2: ( (otherlv_0= 'how' otherlv_1= 'many' otherlv_2= 'trees' otherlv_3= 'to' otherlv_4= 'be' otherlv_5= 'planted' otherlv_6= 'if' otherlv_7= 'we' otherlv_8= 'build' ( (lv_no_of_buildings_9_0= RULE_INT ) ) otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) otherlv_17= 'in' otherlv_18= 'region' ( (lv_region_19_0= RULE_INT ) ) ) | (otherlv_20= 'How' otherlv_21= 'many' otherlv_22= 'trees' otherlv_23= 'to' otherlv_24= 'be' otherlv_25= 'planted' otherlv_26= 'if' otherlv_27= 'we' otherlv_28= 'build' ( (lv_no_of_buildings_29_0= RULE_INT ) ) otherlv_30= 'of' otherlv_31= 'dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) otherlv_37= 'in' otherlv_38= 'region' ( (lv_region_39_0= RULE_INT ) ) ) | (otherlv_40= 'How' otherlv_41= 'Many' otherlv_42= 'Trees' otherlv_43= 'To' otherlv_44= 'Be' otherlv_45= 'Planted' otherlv_46= 'If' otherlv_47= 'We' otherlv_48= 'Build' ( (lv_no_of_buildings_49_0= RULE_INT ) ) otherlv_50= 'Of' otherlv_51= 'Dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) otherlv_57= 'In' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'HOW' otherlv_61= 'MANY' otherlv_62= 'TREES' otherlv_63= 'TO' otherlv_64= 'BE' otherlv_65= 'PLANTED' otherlv_66= 'IF' otherlv_67= 'WE' otherlv_68= 'BUILD' ( (lv_no_of_buildings_69_0= RULE_INT ) ) otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) otherlv_77= 'IN' otherlv_78= 'REGION' ( (lv_region_79_0= RULE_INT ) ) ) | (otherlv_80= 'How' otherlv_81= 'Many' otherlv_82= 'Trees' otherlv_83= 'to' otherlv_84= 'be' otherlv_85= 'Planted' otherlv_86= 'if' otherlv_87= 'we' otherlv_88= 'Build' ( (lv_no_of_buildings_89_0= RULE_INT ) ) otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) otherlv_97= 'in' otherlv_98= 'Region' ( (lv_region_99_0= RULE_INT ) ) ) )
            {
            // InternalMycnl.g:1345:2: ( (otherlv_0= 'how' otherlv_1= 'many' otherlv_2= 'trees' otherlv_3= 'to' otherlv_4= 'be' otherlv_5= 'planted' otherlv_6= 'if' otherlv_7= 'we' otherlv_8= 'build' ( (lv_no_of_buildings_9_0= RULE_INT ) ) otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) otherlv_17= 'in' otherlv_18= 'region' ( (lv_region_19_0= RULE_INT ) ) ) | (otherlv_20= 'How' otherlv_21= 'many' otherlv_22= 'trees' otherlv_23= 'to' otherlv_24= 'be' otherlv_25= 'planted' otherlv_26= 'if' otherlv_27= 'we' otherlv_28= 'build' ( (lv_no_of_buildings_29_0= RULE_INT ) ) otherlv_30= 'of' otherlv_31= 'dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) otherlv_37= 'in' otherlv_38= 'region' ( (lv_region_39_0= RULE_INT ) ) ) | (otherlv_40= 'How' otherlv_41= 'Many' otherlv_42= 'Trees' otherlv_43= 'To' otherlv_44= 'Be' otherlv_45= 'Planted' otherlv_46= 'If' otherlv_47= 'We' otherlv_48= 'Build' ( (lv_no_of_buildings_49_0= RULE_INT ) ) otherlv_50= 'Of' otherlv_51= 'Dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) otherlv_57= 'In' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'HOW' otherlv_61= 'MANY' otherlv_62= 'TREES' otherlv_63= 'TO' otherlv_64= 'BE' otherlv_65= 'PLANTED' otherlv_66= 'IF' otherlv_67= 'WE' otherlv_68= 'BUILD' ( (lv_no_of_buildings_69_0= RULE_INT ) ) otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) otherlv_77= 'IN' otherlv_78= 'REGION' ( (lv_region_79_0= RULE_INT ) ) ) | (otherlv_80= 'How' otherlv_81= 'Many' otherlv_82= 'Trees' otherlv_83= 'to' otherlv_84= 'be' otherlv_85= 'Planted' otherlv_86= 'if' otherlv_87= 'we' otherlv_88= 'Build' ( (lv_no_of_buildings_89_0= RULE_INT ) ) otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) otherlv_97= 'in' otherlv_98= 'Region' ( (lv_region_99_0= RULE_INT ) ) ) )
            int alt5=5;
            switch ( input.LA(1) ) {
            case 59:
                {
                alt5=1;
                }
                break;
            case 64:
                {
                int LA5_2 = input.LA(2);

                if ( (LA5_2==60) ) {
                    alt5=2;
                }
                else if ( (LA5_2==65) ) {
                    int LA5_5 = input.LA(3);

                    if ( (LA5_5==66) ) {
                        int LA5_6 = input.LA(4);

                        if ( (LA5_6==67) ) {
                            alt5=3;
                        }
                        else if ( (LA5_6==62) ) {
                            alt5=5;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 5, 6, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 5, 5, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 2, input);

                    throw nvae;
                }
                }
                break;
            case 69:
                {
                alt5=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalMycnl.g:1346:3: (otherlv_0= 'how' otherlv_1= 'many' otherlv_2= 'trees' otherlv_3= 'to' otherlv_4= 'be' otherlv_5= 'planted' otherlv_6= 'if' otherlv_7= 'we' otherlv_8= 'build' ( (lv_no_of_buildings_9_0= RULE_INT ) ) otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) otherlv_17= 'in' otherlv_18= 'region' ( (lv_region_19_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:1346:3: (otherlv_0= 'how' otherlv_1= 'many' otherlv_2= 'trees' otherlv_3= 'to' otherlv_4= 'be' otherlv_5= 'planted' otherlv_6= 'if' otherlv_7= 'we' otherlv_8= 'build' ( (lv_no_of_buildings_9_0= RULE_INT ) ) otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) otherlv_17= 'in' otherlv_18= 'region' ( (lv_region_19_0= RULE_INT ) ) )
                    // InternalMycnl.g:1347:4: otherlv_0= 'how' otherlv_1= 'many' otherlv_2= 'trees' otherlv_3= 'to' otherlv_4= 'be' otherlv_5= 'planted' otherlv_6= 'if' otherlv_7= 'we' otherlv_8= 'build' ( (lv_no_of_buildings_9_0= RULE_INT ) ) otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) otherlv_17= 'in' otherlv_18= 'region' ( (lv_region_19_0= RULE_INT ) )
                    {
                    otherlv_0=(Token)match(input,59,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getCaltreesBuildActionAccess().getHowKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,60,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getCaltreesBuildActionAccess().getManyKeyword_0_1());
                      			
                    }
                    otherlv_2=(Token)match(input,61,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getCaltreesBuildActionAccess().getTreesKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,62,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getCaltreesBuildActionAccess().getToKeyword_0_3());
                      			
                    }
                    otherlv_4=(Token)match(input,27,FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getCaltreesBuildActionAccess().getBeKeyword_0_4());
                      			
                    }
                    otherlv_5=(Token)match(input,63,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getCaltreesBuildActionAccess().getPlantedKeyword_0_5());
                      			
                    }
                    otherlv_6=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getCaltreesBuildActionAccess().getIfKeyword_0_6());
                      			
                    }
                    otherlv_7=(Token)match(input,31,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getCaltreesBuildActionAccess().getWeKeyword_0_7());
                      			
                    }
                    otherlv_8=(Token)match(input,32,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getCaltreesBuildActionAccess().getBuildKeyword_0_8());
                      			
                    }
                    // InternalMycnl.g:1383:4: ( (lv_no_of_buildings_9_0= RULE_INT ) )
                    // InternalMycnl.g:1384:5: (lv_no_of_buildings_9_0= RULE_INT )
                    {
                    // InternalMycnl.g:1384:5: (lv_no_of_buildings_9_0= RULE_INT )
                    // InternalMycnl.g:1385:6: lv_no_of_buildings_9_0= RULE_INT
                    {
                    lv_no_of_buildings_9_0=(Token)match(input,RULE_INT,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_buildings_9_0, grammarAccess.getCaltreesBuildActionAccess().getNo_of_buildingsINTTerminalRuleCall_0_9_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_buildings",
                      							lv_no_of_buildings_9_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_10=(Token)match(input,15,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getCaltreesBuildActionAccess().getOfKeyword_0_10());
                      			
                    }
                    otherlv_11=(Token)match(input,34,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getCaltreesBuildActionAccess().getDimensionsKeyword_0_11());
                      			
                    }
                    // InternalMycnl.g:1409:4: ( (lv_length_12_0= RULE_INT ) )
                    // InternalMycnl.g:1410:5: (lv_length_12_0= RULE_INT )
                    {
                    // InternalMycnl.g:1410:5: (lv_length_12_0= RULE_INT )
                    // InternalMycnl.g:1411:6: lv_length_12_0= RULE_INT
                    {
                    lv_length_12_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_length_12_0, grammarAccess.getCaltreesBuildActionAccess().getLengthINTTerminalRuleCall_0_12_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"length",
                      							lv_length_12_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_13=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getCaltreesBuildActionAccess().getXKeyword_0_13());
                      			
                    }
                    // InternalMycnl.g:1431:4: ( (lv_breadth_14_0= RULE_INT ) )
                    // InternalMycnl.g:1432:5: (lv_breadth_14_0= RULE_INT )
                    {
                    // InternalMycnl.g:1432:5: (lv_breadth_14_0= RULE_INT )
                    // InternalMycnl.g:1433:6: lv_breadth_14_0= RULE_INT
                    {
                    lv_breadth_14_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_breadth_14_0, grammarAccess.getCaltreesBuildActionAccess().getBreadthINTTerminalRuleCall_0_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"breadth",
                      							lv_breadth_14_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_15=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getCaltreesBuildActionAccess().getXKeyword_0_15());
                      			
                    }
                    // InternalMycnl.g:1453:4: ( (lv_height_16_0= RULE_INT ) )
                    // InternalMycnl.g:1454:5: (lv_height_16_0= RULE_INT )
                    {
                    // InternalMycnl.g:1454:5: (lv_height_16_0= RULE_INT )
                    // InternalMycnl.g:1455:6: lv_height_16_0= RULE_INT
                    {
                    lv_height_16_0=(Token)match(input,RULE_INT,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_height_16_0, grammarAccess.getCaltreesBuildActionAccess().getHeightINTTerminalRuleCall_0_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"height",
                      							lv_height_16_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_17=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getCaltreesBuildActionAccess().getInKeyword_0_17());
                      			
                    }
                    otherlv_18=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getCaltreesBuildActionAccess().getRegionKeyword_0_18());
                      			
                    }
                    // InternalMycnl.g:1479:4: ( (lv_region_19_0= RULE_INT ) )
                    // InternalMycnl.g:1480:5: (lv_region_19_0= RULE_INT )
                    {
                    // InternalMycnl.g:1480:5: (lv_region_19_0= RULE_INT )
                    // InternalMycnl.g:1481:6: lv_region_19_0= RULE_INT
                    {
                    lv_region_19_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_19_0, grammarAccess.getCaltreesBuildActionAccess().getRegionINTTerminalRuleCall_0_19_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_19_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:1499:3: (otherlv_20= 'How' otherlv_21= 'many' otherlv_22= 'trees' otherlv_23= 'to' otherlv_24= 'be' otherlv_25= 'planted' otherlv_26= 'if' otherlv_27= 'we' otherlv_28= 'build' ( (lv_no_of_buildings_29_0= RULE_INT ) ) otherlv_30= 'of' otherlv_31= 'dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) otherlv_37= 'in' otherlv_38= 'region' ( (lv_region_39_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:1499:3: (otherlv_20= 'How' otherlv_21= 'many' otherlv_22= 'trees' otherlv_23= 'to' otherlv_24= 'be' otherlv_25= 'planted' otherlv_26= 'if' otherlv_27= 'we' otherlv_28= 'build' ( (lv_no_of_buildings_29_0= RULE_INT ) ) otherlv_30= 'of' otherlv_31= 'dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) otherlv_37= 'in' otherlv_38= 'region' ( (lv_region_39_0= RULE_INT ) ) )
                    // InternalMycnl.g:1500:4: otherlv_20= 'How' otherlv_21= 'many' otherlv_22= 'trees' otherlv_23= 'to' otherlv_24= 'be' otherlv_25= 'planted' otherlv_26= 'if' otherlv_27= 'we' otherlv_28= 'build' ( (lv_no_of_buildings_29_0= RULE_INT ) ) otherlv_30= 'of' otherlv_31= 'dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) otherlv_37= 'in' otherlv_38= 'region' ( (lv_region_39_0= RULE_INT ) )
                    {
                    otherlv_20=(Token)match(input,64,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getCaltreesBuildActionAccess().getHowKeyword_1_0());
                      			
                    }
                    otherlv_21=(Token)match(input,60,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_21, grammarAccess.getCaltreesBuildActionAccess().getManyKeyword_1_1());
                      			
                    }
                    otherlv_22=(Token)match(input,61,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getCaltreesBuildActionAccess().getTreesKeyword_1_2());
                      			
                    }
                    otherlv_23=(Token)match(input,62,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getCaltreesBuildActionAccess().getToKeyword_1_3());
                      			
                    }
                    otherlv_24=(Token)match(input,27,FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_24, grammarAccess.getCaltreesBuildActionAccess().getBeKeyword_1_4());
                      			
                    }
                    otherlv_25=(Token)match(input,63,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getCaltreesBuildActionAccess().getPlantedKeyword_1_5());
                      			
                    }
                    otherlv_26=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getCaltreesBuildActionAccess().getIfKeyword_1_6());
                      			
                    }
                    otherlv_27=(Token)match(input,31,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_27, grammarAccess.getCaltreesBuildActionAccess().getWeKeyword_1_7());
                      			
                    }
                    otherlv_28=(Token)match(input,32,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getCaltreesBuildActionAccess().getBuildKeyword_1_8());
                      			
                    }
                    // InternalMycnl.g:1536:4: ( (lv_no_of_buildings_29_0= RULE_INT ) )
                    // InternalMycnl.g:1537:5: (lv_no_of_buildings_29_0= RULE_INT )
                    {
                    // InternalMycnl.g:1537:5: (lv_no_of_buildings_29_0= RULE_INT )
                    // InternalMycnl.g:1538:6: lv_no_of_buildings_29_0= RULE_INT
                    {
                    lv_no_of_buildings_29_0=(Token)match(input,RULE_INT,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_buildings_29_0, grammarAccess.getCaltreesBuildActionAccess().getNo_of_buildingsINTTerminalRuleCall_1_9_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_buildings",
                      							lv_no_of_buildings_29_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_30=(Token)match(input,15,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_30, grammarAccess.getCaltreesBuildActionAccess().getOfKeyword_1_10());
                      			
                    }
                    otherlv_31=(Token)match(input,34,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getCaltreesBuildActionAccess().getDimensionsKeyword_1_11());
                      			
                    }
                    // InternalMycnl.g:1562:4: ( (lv_length_32_0= RULE_INT ) )
                    // InternalMycnl.g:1563:5: (lv_length_32_0= RULE_INT )
                    {
                    // InternalMycnl.g:1563:5: (lv_length_32_0= RULE_INT )
                    // InternalMycnl.g:1564:6: lv_length_32_0= RULE_INT
                    {
                    lv_length_32_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_length_32_0, grammarAccess.getCaltreesBuildActionAccess().getLengthINTTerminalRuleCall_1_12_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"length",
                      							lv_length_32_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_33=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_33, grammarAccess.getCaltreesBuildActionAccess().getXKeyword_1_13());
                      			
                    }
                    // InternalMycnl.g:1584:4: ( (lv_breadth_34_0= RULE_INT ) )
                    // InternalMycnl.g:1585:5: (lv_breadth_34_0= RULE_INT )
                    {
                    // InternalMycnl.g:1585:5: (lv_breadth_34_0= RULE_INT )
                    // InternalMycnl.g:1586:6: lv_breadth_34_0= RULE_INT
                    {
                    lv_breadth_34_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_breadth_34_0, grammarAccess.getCaltreesBuildActionAccess().getBreadthINTTerminalRuleCall_1_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"breadth",
                      							lv_breadth_34_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_35=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_35, grammarAccess.getCaltreesBuildActionAccess().getXKeyword_1_15());
                      			
                    }
                    // InternalMycnl.g:1606:4: ( (lv_height_36_0= RULE_INT ) )
                    // InternalMycnl.g:1607:5: (lv_height_36_0= RULE_INT )
                    {
                    // InternalMycnl.g:1607:5: (lv_height_36_0= RULE_INT )
                    // InternalMycnl.g:1608:6: lv_height_36_0= RULE_INT
                    {
                    lv_height_36_0=(Token)match(input,RULE_INT,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_height_36_0, grammarAccess.getCaltreesBuildActionAccess().getHeightINTTerminalRuleCall_1_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"height",
                      							lv_height_36_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_37=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_37, grammarAccess.getCaltreesBuildActionAccess().getInKeyword_1_17());
                      			
                    }
                    otherlv_38=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_38, grammarAccess.getCaltreesBuildActionAccess().getRegionKeyword_1_18());
                      			
                    }
                    // InternalMycnl.g:1632:4: ( (lv_region_39_0= RULE_INT ) )
                    // InternalMycnl.g:1633:5: (lv_region_39_0= RULE_INT )
                    {
                    // InternalMycnl.g:1633:5: (lv_region_39_0= RULE_INT )
                    // InternalMycnl.g:1634:6: lv_region_39_0= RULE_INT
                    {
                    lv_region_39_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_39_0, grammarAccess.getCaltreesBuildActionAccess().getRegionINTTerminalRuleCall_1_19_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_39_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalMycnl.g:1652:3: (otherlv_40= 'How' otherlv_41= 'Many' otherlv_42= 'Trees' otherlv_43= 'To' otherlv_44= 'Be' otherlv_45= 'Planted' otherlv_46= 'If' otherlv_47= 'We' otherlv_48= 'Build' ( (lv_no_of_buildings_49_0= RULE_INT ) ) otherlv_50= 'Of' otherlv_51= 'Dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) otherlv_57= 'In' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:1652:3: (otherlv_40= 'How' otherlv_41= 'Many' otherlv_42= 'Trees' otherlv_43= 'To' otherlv_44= 'Be' otherlv_45= 'Planted' otherlv_46= 'If' otherlv_47= 'We' otherlv_48= 'Build' ( (lv_no_of_buildings_49_0= RULE_INT ) ) otherlv_50= 'Of' otherlv_51= 'Dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) otherlv_57= 'In' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) )
                    // InternalMycnl.g:1653:4: otherlv_40= 'How' otherlv_41= 'Many' otherlv_42= 'Trees' otherlv_43= 'To' otherlv_44= 'Be' otherlv_45= 'Planted' otherlv_46= 'If' otherlv_47= 'We' otherlv_48= 'Build' ( (lv_no_of_buildings_49_0= RULE_INT ) ) otherlv_50= 'Of' otherlv_51= 'Dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) otherlv_57= 'In' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) )
                    {
                    otherlv_40=(Token)match(input,64,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_40, grammarAccess.getCaltreesBuildActionAccess().getHowKeyword_2_0());
                      			
                    }
                    otherlv_41=(Token)match(input,65,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_41, grammarAccess.getCaltreesBuildActionAccess().getManyKeyword_2_1());
                      			
                    }
                    otherlv_42=(Token)match(input,66,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getCaltreesBuildActionAccess().getTreesKeyword_2_2());
                      			
                    }
                    otherlv_43=(Token)match(input,67,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_43, grammarAccess.getCaltreesBuildActionAccess().getToKeyword_2_3());
                      			
                    }
                    otherlv_44=(Token)match(input,39,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_44, grammarAccess.getCaltreesBuildActionAccess().getBeKeyword_2_4());
                      			
                    }
                    otherlv_45=(Token)match(input,68,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_45, grammarAccess.getCaltreesBuildActionAccess().getPlantedKeyword_2_5());
                      			
                    }
                    otherlv_46=(Token)match(input,42,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_46, grammarAccess.getCaltreesBuildActionAccess().getIfKeyword_2_6());
                      			
                    }
                    otherlv_47=(Token)match(input,43,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_47, grammarAccess.getCaltreesBuildActionAccess().getWeKeyword_2_7());
                      			
                    }
                    otherlv_48=(Token)match(input,44,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getCaltreesBuildActionAccess().getBuildKeyword_2_8());
                      			
                    }
                    // InternalMycnl.g:1689:4: ( (lv_no_of_buildings_49_0= RULE_INT ) )
                    // InternalMycnl.g:1690:5: (lv_no_of_buildings_49_0= RULE_INT )
                    {
                    // InternalMycnl.g:1690:5: (lv_no_of_buildings_49_0= RULE_INT )
                    // InternalMycnl.g:1691:6: lv_no_of_buildings_49_0= RULE_INT
                    {
                    lv_no_of_buildings_49_0=(Token)match(input,RULE_INT,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_buildings_49_0, grammarAccess.getCaltreesBuildActionAccess().getNo_of_buildingsINTTerminalRuleCall_2_9_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_buildings",
                      							lv_no_of_buildings_49_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_50=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_50, grammarAccess.getCaltreesBuildActionAccess().getOfKeyword_2_10());
                      			
                    }
                    otherlv_51=(Token)match(input,46,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_51, grammarAccess.getCaltreesBuildActionAccess().getDimensionsKeyword_2_11());
                      			
                    }
                    // InternalMycnl.g:1715:4: ( (lv_length_52_0= RULE_INT ) )
                    // InternalMycnl.g:1716:5: (lv_length_52_0= RULE_INT )
                    {
                    // InternalMycnl.g:1716:5: (lv_length_52_0= RULE_INT )
                    // InternalMycnl.g:1717:6: lv_length_52_0= RULE_INT
                    {
                    lv_length_52_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_length_52_0, grammarAccess.getCaltreesBuildActionAccess().getLengthINTTerminalRuleCall_2_12_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"length",
                      							lv_length_52_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_53=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_53, grammarAccess.getCaltreesBuildActionAccess().getXKeyword_2_13());
                      			
                    }
                    // InternalMycnl.g:1737:4: ( (lv_breadth_54_0= RULE_INT ) )
                    // InternalMycnl.g:1738:5: (lv_breadth_54_0= RULE_INT )
                    {
                    // InternalMycnl.g:1738:5: (lv_breadth_54_0= RULE_INT )
                    // InternalMycnl.g:1739:6: lv_breadth_54_0= RULE_INT
                    {
                    lv_breadth_54_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_breadth_54_0, grammarAccess.getCaltreesBuildActionAccess().getBreadthINTTerminalRuleCall_2_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"breadth",
                      							lv_breadth_54_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_55=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_55, grammarAccess.getCaltreesBuildActionAccess().getXKeyword_2_15());
                      			
                    }
                    // InternalMycnl.g:1759:4: ( (lv_height_56_0= RULE_INT ) )
                    // InternalMycnl.g:1760:5: (lv_height_56_0= RULE_INT )
                    {
                    // InternalMycnl.g:1760:5: (lv_height_56_0= RULE_INT )
                    // InternalMycnl.g:1761:6: lv_height_56_0= RULE_INT
                    {
                    lv_height_56_0=(Token)match(input,RULE_INT,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_height_56_0, grammarAccess.getCaltreesBuildActionAccess().getHeightINTTerminalRuleCall_2_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"height",
                      							lv_height_56_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_57=(Token)match(input,47,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_57, grammarAccess.getCaltreesBuildActionAccess().getInKeyword_2_17());
                      			
                    }
                    otherlv_58=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_58, grammarAccess.getCaltreesBuildActionAccess().getRegionKeyword_2_18());
                      			
                    }
                    // InternalMycnl.g:1785:4: ( (lv_region_59_0= RULE_INT ) )
                    // InternalMycnl.g:1786:5: (lv_region_59_0= RULE_INT )
                    {
                    // InternalMycnl.g:1786:5: (lv_region_59_0= RULE_INT )
                    // InternalMycnl.g:1787:6: lv_region_59_0= RULE_INT
                    {
                    lv_region_59_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_59_0, grammarAccess.getCaltreesBuildActionAccess().getRegionINTTerminalRuleCall_2_19_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_59_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalMycnl.g:1805:3: (otherlv_60= 'HOW' otherlv_61= 'MANY' otherlv_62= 'TREES' otherlv_63= 'TO' otherlv_64= 'BE' otherlv_65= 'PLANTED' otherlv_66= 'IF' otherlv_67= 'WE' otherlv_68= 'BUILD' ( (lv_no_of_buildings_69_0= RULE_INT ) ) otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) otherlv_77= 'IN' otherlv_78= 'REGION' ( (lv_region_79_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:1805:3: (otherlv_60= 'HOW' otherlv_61= 'MANY' otherlv_62= 'TREES' otherlv_63= 'TO' otherlv_64= 'BE' otherlv_65= 'PLANTED' otherlv_66= 'IF' otherlv_67= 'WE' otherlv_68= 'BUILD' ( (lv_no_of_buildings_69_0= RULE_INT ) ) otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) otherlv_77= 'IN' otherlv_78= 'REGION' ( (lv_region_79_0= RULE_INT ) ) )
                    // InternalMycnl.g:1806:4: otherlv_60= 'HOW' otherlv_61= 'MANY' otherlv_62= 'TREES' otherlv_63= 'TO' otherlv_64= 'BE' otherlv_65= 'PLANTED' otherlv_66= 'IF' otherlv_67= 'WE' otherlv_68= 'BUILD' ( (lv_no_of_buildings_69_0= RULE_INT ) ) otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) otherlv_77= 'IN' otherlv_78= 'REGION' ( (lv_region_79_0= RULE_INT ) )
                    {
                    otherlv_60=(Token)match(input,69,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_60, grammarAccess.getCaltreesBuildActionAccess().getHOWKeyword_3_0());
                      			
                    }
                    otherlv_61=(Token)match(input,70,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_61, grammarAccess.getCaltreesBuildActionAccess().getMANYKeyword_3_1());
                      			
                    }
                    otherlv_62=(Token)match(input,71,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_62, grammarAccess.getCaltreesBuildActionAccess().getTREESKeyword_3_2());
                      			
                    }
                    otherlv_63=(Token)match(input,72,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_63, grammarAccess.getCaltreesBuildActionAccess().getTOKeyword_3_3());
                      			
                    }
                    otherlv_64=(Token)match(input,50,FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_64, grammarAccess.getCaltreesBuildActionAccess().getBEKeyword_3_4());
                      			
                    }
                    otherlv_65=(Token)match(input,73,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_65, grammarAccess.getCaltreesBuildActionAccess().getPLANTEDKeyword_3_5());
                      			
                    }
                    otherlv_66=(Token)match(input,53,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_66, grammarAccess.getCaltreesBuildActionAccess().getIFKeyword_3_6());
                      			
                    }
                    otherlv_67=(Token)match(input,54,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_67, grammarAccess.getCaltreesBuildActionAccess().getWEKeyword_3_7());
                      			
                    }
                    otherlv_68=(Token)match(input,55,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_68, grammarAccess.getCaltreesBuildActionAccess().getBUILDKeyword_3_8());
                      			
                    }
                    // InternalMycnl.g:1842:4: ( (lv_no_of_buildings_69_0= RULE_INT ) )
                    // InternalMycnl.g:1843:5: (lv_no_of_buildings_69_0= RULE_INT )
                    {
                    // InternalMycnl.g:1843:5: (lv_no_of_buildings_69_0= RULE_INT )
                    // InternalMycnl.g:1844:6: lv_no_of_buildings_69_0= RULE_INT
                    {
                    lv_no_of_buildings_69_0=(Token)match(input,RULE_INT,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_buildings_69_0, grammarAccess.getCaltreesBuildActionAccess().getNo_of_buildingsINTTerminalRuleCall_3_9_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_buildings",
                      							lv_no_of_buildings_69_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_70=(Token)match(input,23,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_70, grammarAccess.getCaltreesBuildActionAccess().getOFKeyword_3_10());
                      			
                    }
                    otherlv_71=(Token)match(input,57,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_71, grammarAccess.getCaltreesBuildActionAccess().getDIMENSIONSKeyword_3_11());
                      			
                    }
                    // InternalMycnl.g:1868:4: ( (lv_length_72_0= RULE_INT ) )
                    // InternalMycnl.g:1869:5: (lv_length_72_0= RULE_INT )
                    {
                    // InternalMycnl.g:1869:5: (lv_length_72_0= RULE_INT )
                    // InternalMycnl.g:1870:6: lv_length_72_0= RULE_INT
                    {
                    lv_length_72_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_length_72_0, grammarAccess.getCaltreesBuildActionAccess().getLengthINTTerminalRuleCall_3_12_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"length",
                      							lv_length_72_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_73=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_73, grammarAccess.getCaltreesBuildActionAccess().getXKeyword_3_13());
                      			
                    }
                    // InternalMycnl.g:1890:4: ( (lv_breadth_74_0= RULE_INT ) )
                    // InternalMycnl.g:1891:5: (lv_breadth_74_0= RULE_INT )
                    {
                    // InternalMycnl.g:1891:5: (lv_breadth_74_0= RULE_INT )
                    // InternalMycnl.g:1892:6: lv_breadth_74_0= RULE_INT
                    {
                    lv_breadth_74_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_breadth_74_0, grammarAccess.getCaltreesBuildActionAccess().getBreadthINTTerminalRuleCall_3_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"breadth",
                      							lv_breadth_74_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_75=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_75, grammarAccess.getCaltreesBuildActionAccess().getXKeyword_3_15());
                      			
                    }
                    // InternalMycnl.g:1912:4: ( (lv_height_76_0= RULE_INT ) )
                    // InternalMycnl.g:1913:5: (lv_height_76_0= RULE_INT )
                    {
                    // InternalMycnl.g:1913:5: (lv_height_76_0= RULE_INT )
                    // InternalMycnl.g:1914:6: lv_height_76_0= RULE_INT
                    {
                    lv_height_76_0=(Token)match(input,RULE_INT,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_height_76_0, grammarAccess.getCaltreesBuildActionAccess().getHeightINTTerminalRuleCall_3_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"height",
                      							lv_height_76_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_77=(Token)match(input,58,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_77, grammarAccess.getCaltreesBuildActionAccess().getINKeyword_3_17());
                      			
                    }
                    otherlv_78=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_78, grammarAccess.getCaltreesBuildActionAccess().getREGIONKeyword_3_18());
                      			
                    }
                    // InternalMycnl.g:1938:4: ( (lv_region_79_0= RULE_INT ) )
                    // InternalMycnl.g:1939:5: (lv_region_79_0= RULE_INT )
                    {
                    // InternalMycnl.g:1939:5: (lv_region_79_0= RULE_INT )
                    // InternalMycnl.g:1940:6: lv_region_79_0= RULE_INT
                    {
                    lv_region_79_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_79_0, grammarAccess.getCaltreesBuildActionAccess().getRegionINTTerminalRuleCall_3_19_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_79_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalMycnl.g:1958:3: (otherlv_80= 'How' otherlv_81= 'Many' otherlv_82= 'Trees' otherlv_83= 'to' otherlv_84= 'be' otherlv_85= 'Planted' otherlv_86= 'if' otherlv_87= 'we' otherlv_88= 'Build' ( (lv_no_of_buildings_89_0= RULE_INT ) ) otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) otherlv_97= 'in' otherlv_98= 'Region' ( (lv_region_99_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:1958:3: (otherlv_80= 'How' otherlv_81= 'Many' otherlv_82= 'Trees' otherlv_83= 'to' otherlv_84= 'be' otherlv_85= 'Planted' otherlv_86= 'if' otherlv_87= 'we' otherlv_88= 'Build' ( (lv_no_of_buildings_89_0= RULE_INT ) ) otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) otherlv_97= 'in' otherlv_98= 'Region' ( (lv_region_99_0= RULE_INT ) ) )
                    // InternalMycnl.g:1959:4: otherlv_80= 'How' otherlv_81= 'Many' otherlv_82= 'Trees' otherlv_83= 'to' otherlv_84= 'be' otherlv_85= 'Planted' otherlv_86= 'if' otherlv_87= 'we' otherlv_88= 'Build' ( (lv_no_of_buildings_89_0= RULE_INT ) ) otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) otherlv_97= 'in' otherlv_98= 'Region' ( (lv_region_99_0= RULE_INT ) )
                    {
                    otherlv_80=(Token)match(input,64,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_80, grammarAccess.getCaltreesBuildActionAccess().getHowKeyword_4_0());
                      			
                    }
                    otherlv_81=(Token)match(input,65,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_81, grammarAccess.getCaltreesBuildActionAccess().getManyKeyword_4_1());
                      			
                    }
                    otherlv_82=(Token)match(input,66,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_82, grammarAccess.getCaltreesBuildActionAccess().getTreesKeyword_4_2());
                      			
                    }
                    otherlv_83=(Token)match(input,62,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_83, grammarAccess.getCaltreesBuildActionAccess().getToKeyword_4_3());
                      			
                    }
                    otherlv_84=(Token)match(input,27,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_84, grammarAccess.getCaltreesBuildActionAccess().getBeKeyword_4_4());
                      			
                    }
                    otherlv_85=(Token)match(input,68,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_85, grammarAccess.getCaltreesBuildActionAccess().getPlantedKeyword_4_5());
                      			
                    }
                    otherlv_86=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_86, grammarAccess.getCaltreesBuildActionAccess().getIfKeyword_4_6());
                      			
                    }
                    otherlv_87=(Token)match(input,31,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_87, grammarAccess.getCaltreesBuildActionAccess().getWeKeyword_4_7());
                      			
                    }
                    otherlv_88=(Token)match(input,44,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_88, grammarAccess.getCaltreesBuildActionAccess().getBuildKeyword_4_8());
                      			
                    }
                    // InternalMycnl.g:1995:4: ( (lv_no_of_buildings_89_0= RULE_INT ) )
                    // InternalMycnl.g:1996:5: (lv_no_of_buildings_89_0= RULE_INT )
                    {
                    // InternalMycnl.g:1996:5: (lv_no_of_buildings_89_0= RULE_INT )
                    // InternalMycnl.g:1997:6: lv_no_of_buildings_89_0= RULE_INT
                    {
                    lv_no_of_buildings_89_0=(Token)match(input,RULE_INT,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_buildings_89_0, grammarAccess.getCaltreesBuildActionAccess().getNo_of_buildingsINTTerminalRuleCall_4_9_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_buildings",
                      							lv_no_of_buildings_89_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_90=(Token)match(input,15,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_90, grammarAccess.getCaltreesBuildActionAccess().getOfKeyword_4_10());
                      			
                    }
                    otherlv_91=(Token)match(input,46,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_91, grammarAccess.getCaltreesBuildActionAccess().getDimensionsKeyword_4_11());
                      			
                    }
                    // InternalMycnl.g:2021:4: ( (lv_length_92_0= RULE_INT ) )
                    // InternalMycnl.g:2022:5: (lv_length_92_0= RULE_INT )
                    {
                    // InternalMycnl.g:2022:5: (lv_length_92_0= RULE_INT )
                    // InternalMycnl.g:2023:6: lv_length_92_0= RULE_INT
                    {
                    lv_length_92_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_length_92_0, grammarAccess.getCaltreesBuildActionAccess().getLengthINTTerminalRuleCall_4_12_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"length",
                      							lv_length_92_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_93=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_93, grammarAccess.getCaltreesBuildActionAccess().getXKeyword_4_13());
                      			
                    }
                    // InternalMycnl.g:2043:4: ( (lv_breadth_94_0= RULE_INT ) )
                    // InternalMycnl.g:2044:5: (lv_breadth_94_0= RULE_INT )
                    {
                    // InternalMycnl.g:2044:5: (lv_breadth_94_0= RULE_INT )
                    // InternalMycnl.g:2045:6: lv_breadth_94_0= RULE_INT
                    {
                    lv_breadth_94_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_breadth_94_0, grammarAccess.getCaltreesBuildActionAccess().getBreadthINTTerminalRuleCall_4_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"breadth",
                      							lv_breadth_94_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_95=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_95, grammarAccess.getCaltreesBuildActionAccess().getXKeyword_4_15());
                      			
                    }
                    // InternalMycnl.g:2065:4: ( (lv_height_96_0= RULE_INT ) )
                    // InternalMycnl.g:2066:5: (lv_height_96_0= RULE_INT )
                    {
                    // InternalMycnl.g:2066:5: (lv_height_96_0= RULE_INT )
                    // InternalMycnl.g:2067:6: lv_height_96_0= RULE_INT
                    {
                    lv_height_96_0=(Token)match(input,RULE_INT,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_height_96_0, grammarAccess.getCaltreesBuildActionAccess().getHeightINTTerminalRuleCall_4_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"height",
                      							lv_height_96_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_97=(Token)match(input,36,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_97, grammarAccess.getCaltreesBuildActionAccess().getInKeyword_4_17());
                      			
                    }
                    otherlv_98=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_98, grammarAccess.getCaltreesBuildActionAccess().getRegionKeyword_4_18());
                      			
                    }
                    // InternalMycnl.g:2091:4: ( (lv_region_99_0= RULE_INT ) )
                    // InternalMycnl.g:2092:5: (lv_region_99_0= RULE_INT )
                    {
                    // InternalMycnl.g:2092:5: (lv_region_99_0= RULE_INT )
                    // InternalMycnl.g:2093:6: lv_region_99_0= RULE_INT
                    {
                    lv_region_99_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_99_0, grammarAccess.getCaltreesBuildActionAccess().getRegionINTTerminalRuleCall_4_19_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_99_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulecaltreesBuildAction"


    // $ANTLR start "entryRuleDesignResidential"
    // InternalMycnl.g:2114:1: entryRuleDesignResidential returns [EObject current=null] : iv_ruleDesignResidential= ruleDesignResidential EOF ;
    public final EObject entryRuleDesignResidential() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDesignResidential = null;


        try {
            // InternalMycnl.g:2114:58: (iv_ruleDesignResidential= ruleDesignResidential EOF )
            // InternalMycnl.g:2115:2: iv_ruleDesignResidential= ruleDesignResidential EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDesignResidentialRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDesignResidential=ruleDesignResidential();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDesignResidential; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDesignResidential"


    // $ANTLR start "ruleDesignResidential"
    // InternalMycnl.g:2121:1: ruleDesignResidential returns [EObject current=null] : ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'design' otherlv_5= 'plan' otherlv_6= 'for' otherlv_7= 'residential' otherlv_8= 'area' otherlv_9= 'for' ( (lv_no_of_people_10_0= RULE_INT ) ) otherlv_11= 'people' otherlv_12= 'in' otherlv_13= 'region' ( (lv_region_14_0= RULE_INT ) ) ) | (otherlv_15= 'What' otherlv_16= 'Will' otherlv_17= 'Be' otherlv_18= 'The' otherlv_19= 'Design' otherlv_20= 'Plan' otherlv_21= 'For' otherlv_22= 'Residential' otherlv_23= 'Area' otherlv_24= 'For' ( (lv_no_of_people_25_0= RULE_INT ) ) otherlv_26= 'People' otherlv_27= 'In' otherlv_28= 'Region' ( (lv_region_29_0= RULE_INT ) ) ) | (otherlv_30= 'What' otherlv_31= 'will' otherlv_32= 'be' otherlv_33= 'the' otherlv_34= 'design' otherlv_35= 'plan' otherlv_36= 'for' otherlv_37= 'residential' otherlv_38= 'area' otherlv_39= 'for' ( (lv_no_of_people_40_0= RULE_INT ) ) otherlv_41= 'people' otherlv_42= 'in' otherlv_43= 'region' ( (lv_region_44_0= RULE_INT ) ) ) | (otherlv_45= 'WHAT' otherlv_46= 'WILL' otherlv_47= 'BE' otherlv_48= 'THE' otherlv_49= 'DESIGN' otherlv_50= 'PLAN' otherlv_51= 'FOR' otherlv_52= 'RESIDENTIAL' otherlv_53= 'AREA' otherlv_54= 'FOR' ( (lv_no_of_people_55_0= RULE_INT ) ) otherlv_56= 'PEOPLE' otherlv_57= 'IN' otherlv_58= 'REGION' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'What' otherlv_61= 'Will' otherlv_62= 'be' otherlv_63= 'the' otherlv_64= 'Design' otherlv_65= 'Plan' otherlv_66= 'for' otherlv_67= 'Residential' otherlv_68= 'Area' otherlv_69= 'For' ( (lv_no_of_people_70_0= RULE_INT ) ) otherlv_71= 'People' otherlv_72= 'in' otherlv_73= 'Region' ( (lv_region_74_0= RULE_INT ) ) ) ) ;
    public final EObject ruleDesignResidential() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token lv_no_of_people_10_0=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_region_14_0=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token lv_no_of_people_25_0=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_region_29_0=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token lv_no_of_people_40_0=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token lv_region_44_0=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token otherlv_47=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token otherlv_50=null;
        Token otherlv_51=null;
        Token otherlv_52=null;
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token lv_no_of_people_55_0=null;
        Token otherlv_56=null;
        Token otherlv_57=null;
        Token otherlv_58=null;
        Token lv_region_59_0=null;
        Token otherlv_60=null;
        Token otherlv_61=null;
        Token otherlv_62=null;
        Token otherlv_63=null;
        Token otherlv_64=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token otherlv_67=null;
        Token otherlv_68=null;
        Token otherlv_69=null;
        Token lv_no_of_people_70_0=null;
        Token otherlv_71=null;
        Token otherlv_72=null;
        Token otherlv_73=null;
        Token lv_region_74_0=null;


        	enterRule();

        try {
            // InternalMycnl.g:2127:2: ( ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'design' otherlv_5= 'plan' otherlv_6= 'for' otherlv_7= 'residential' otherlv_8= 'area' otherlv_9= 'for' ( (lv_no_of_people_10_0= RULE_INT ) ) otherlv_11= 'people' otherlv_12= 'in' otherlv_13= 'region' ( (lv_region_14_0= RULE_INT ) ) ) | (otherlv_15= 'What' otherlv_16= 'Will' otherlv_17= 'Be' otherlv_18= 'The' otherlv_19= 'Design' otherlv_20= 'Plan' otherlv_21= 'For' otherlv_22= 'Residential' otherlv_23= 'Area' otherlv_24= 'For' ( (lv_no_of_people_25_0= RULE_INT ) ) otherlv_26= 'People' otherlv_27= 'In' otherlv_28= 'Region' ( (lv_region_29_0= RULE_INT ) ) ) | (otherlv_30= 'What' otherlv_31= 'will' otherlv_32= 'be' otherlv_33= 'the' otherlv_34= 'design' otherlv_35= 'plan' otherlv_36= 'for' otherlv_37= 'residential' otherlv_38= 'area' otherlv_39= 'for' ( (lv_no_of_people_40_0= RULE_INT ) ) otherlv_41= 'people' otherlv_42= 'in' otherlv_43= 'region' ( (lv_region_44_0= RULE_INT ) ) ) | (otherlv_45= 'WHAT' otherlv_46= 'WILL' otherlv_47= 'BE' otherlv_48= 'THE' otherlv_49= 'DESIGN' otherlv_50= 'PLAN' otherlv_51= 'FOR' otherlv_52= 'RESIDENTIAL' otherlv_53= 'AREA' otherlv_54= 'FOR' ( (lv_no_of_people_55_0= RULE_INT ) ) otherlv_56= 'PEOPLE' otherlv_57= 'IN' otherlv_58= 'REGION' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'What' otherlv_61= 'Will' otherlv_62= 'be' otherlv_63= 'the' otherlv_64= 'Design' otherlv_65= 'Plan' otherlv_66= 'for' otherlv_67= 'Residential' otherlv_68= 'Area' otherlv_69= 'For' ( (lv_no_of_people_70_0= RULE_INT ) ) otherlv_71= 'People' otherlv_72= 'in' otherlv_73= 'Region' ( (lv_region_74_0= RULE_INT ) ) ) ) )
            // InternalMycnl.g:2128:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'design' otherlv_5= 'plan' otherlv_6= 'for' otherlv_7= 'residential' otherlv_8= 'area' otherlv_9= 'for' ( (lv_no_of_people_10_0= RULE_INT ) ) otherlv_11= 'people' otherlv_12= 'in' otherlv_13= 'region' ( (lv_region_14_0= RULE_INT ) ) ) | (otherlv_15= 'What' otherlv_16= 'Will' otherlv_17= 'Be' otherlv_18= 'The' otherlv_19= 'Design' otherlv_20= 'Plan' otherlv_21= 'For' otherlv_22= 'Residential' otherlv_23= 'Area' otherlv_24= 'For' ( (lv_no_of_people_25_0= RULE_INT ) ) otherlv_26= 'People' otherlv_27= 'In' otherlv_28= 'Region' ( (lv_region_29_0= RULE_INT ) ) ) | (otherlv_30= 'What' otherlv_31= 'will' otherlv_32= 'be' otherlv_33= 'the' otherlv_34= 'design' otherlv_35= 'plan' otherlv_36= 'for' otherlv_37= 'residential' otherlv_38= 'area' otherlv_39= 'for' ( (lv_no_of_people_40_0= RULE_INT ) ) otherlv_41= 'people' otherlv_42= 'in' otherlv_43= 'region' ( (lv_region_44_0= RULE_INT ) ) ) | (otherlv_45= 'WHAT' otherlv_46= 'WILL' otherlv_47= 'BE' otherlv_48= 'THE' otherlv_49= 'DESIGN' otherlv_50= 'PLAN' otherlv_51= 'FOR' otherlv_52= 'RESIDENTIAL' otherlv_53= 'AREA' otherlv_54= 'FOR' ( (lv_no_of_people_55_0= RULE_INT ) ) otherlv_56= 'PEOPLE' otherlv_57= 'IN' otherlv_58= 'REGION' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'What' otherlv_61= 'Will' otherlv_62= 'be' otherlv_63= 'the' otherlv_64= 'Design' otherlv_65= 'Plan' otherlv_66= 'for' otherlv_67= 'Residential' otherlv_68= 'Area' otherlv_69= 'For' ( (lv_no_of_people_70_0= RULE_INT ) ) otherlv_71= 'People' otherlv_72= 'in' otherlv_73= 'Region' ( (lv_region_74_0= RULE_INT ) ) ) )
            {
            // InternalMycnl.g:2128:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'design' otherlv_5= 'plan' otherlv_6= 'for' otherlv_7= 'residential' otherlv_8= 'area' otherlv_9= 'for' ( (lv_no_of_people_10_0= RULE_INT ) ) otherlv_11= 'people' otherlv_12= 'in' otherlv_13= 'region' ( (lv_region_14_0= RULE_INT ) ) ) | (otherlv_15= 'What' otherlv_16= 'Will' otherlv_17= 'Be' otherlv_18= 'The' otherlv_19= 'Design' otherlv_20= 'Plan' otherlv_21= 'For' otherlv_22= 'Residential' otherlv_23= 'Area' otherlv_24= 'For' ( (lv_no_of_people_25_0= RULE_INT ) ) otherlv_26= 'People' otherlv_27= 'In' otherlv_28= 'Region' ( (lv_region_29_0= RULE_INT ) ) ) | (otherlv_30= 'What' otherlv_31= 'will' otherlv_32= 'be' otherlv_33= 'the' otherlv_34= 'design' otherlv_35= 'plan' otherlv_36= 'for' otherlv_37= 'residential' otherlv_38= 'area' otherlv_39= 'for' ( (lv_no_of_people_40_0= RULE_INT ) ) otherlv_41= 'people' otherlv_42= 'in' otherlv_43= 'region' ( (lv_region_44_0= RULE_INT ) ) ) | (otherlv_45= 'WHAT' otherlv_46= 'WILL' otherlv_47= 'BE' otherlv_48= 'THE' otherlv_49= 'DESIGN' otherlv_50= 'PLAN' otherlv_51= 'FOR' otherlv_52= 'RESIDENTIAL' otherlv_53= 'AREA' otherlv_54= 'FOR' ( (lv_no_of_people_55_0= RULE_INT ) ) otherlv_56= 'PEOPLE' otherlv_57= 'IN' otherlv_58= 'REGION' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'What' otherlv_61= 'Will' otherlv_62= 'be' otherlv_63= 'the' otherlv_64= 'Design' otherlv_65= 'Plan' otherlv_66= 'for' otherlv_67= 'Residential' otherlv_68= 'Area' otherlv_69= 'For' ( (lv_no_of_people_70_0= RULE_INT ) ) otherlv_71= 'People' otherlv_72= 'in' otherlv_73= 'Region' ( (lv_region_74_0= RULE_INT ) ) ) )
            int alt6=5;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt6=1;
                }
                break;
            case 37:
                {
                int LA6_2 = input.LA(2);

                if ( (LA6_2==38) ) {
                    int LA6_4 = input.LA(3);

                    if ( (LA6_4==39) ) {
                        alt6=2;
                    }
                    else if ( (LA6_4==27) ) {
                        alt6=5;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 6, 4, input);

                        throw nvae;
                    }
                }
                else if ( (LA6_2==26) ) {
                    alt6=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 6, 2, input);

                    throw nvae;
                }
                }
                break;
            case 48:
                {
                alt6=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalMycnl.g:2129:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'design' otherlv_5= 'plan' otherlv_6= 'for' otherlv_7= 'residential' otherlv_8= 'area' otherlv_9= 'for' ( (lv_no_of_people_10_0= RULE_INT ) ) otherlv_11= 'people' otherlv_12= 'in' otherlv_13= 'region' ( (lv_region_14_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:2129:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'design' otherlv_5= 'plan' otherlv_6= 'for' otherlv_7= 'residential' otherlv_8= 'area' otherlv_9= 'for' ( (lv_no_of_people_10_0= RULE_INT ) ) otherlv_11= 'people' otherlv_12= 'in' otherlv_13= 'region' ( (lv_region_14_0= RULE_INT ) ) )
                    // InternalMycnl.g:2130:4: otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'design' otherlv_5= 'plan' otherlv_6= 'for' otherlv_7= 'residential' otherlv_8= 'area' otherlv_9= 'for' ( (lv_no_of_people_10_0= RULE_INT ) ) otherlv_11= 'people' otherlv_12= 'in' otherlv_13= 'region' ( (lv_region_14_0= RULE_INT ) )
                    {
                    otherlv_0=(Token)match(input,25,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getDesignResidentialAccess().getWhatKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDesignResidentialAccess().getWillKeyword_0_1());
                      			
                    }
                    otherlv_2=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDesignResidentialAccess().getBeKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,28,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDesignResidentialAccess().getTheKeyword_0_3());
                      			
                    }
                    otherlv_4=(Token)match(input,74,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDesignResidentialAccess().getDesignKeyword_0_4());
                      			
                    }
                    otherlv_5=(Token)match(input,75,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getDesignResidentialAccess().getPlanKeyword_0_5());
                      			
                    }
                    otherlv_6=(Token)match(input,76,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getDesignResidentialAccess().getForKeyword_0_6());
                      			
                    }
                    otherlv_7=(Token)match(input,77,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getDesignResidentialAccess().getResidentialKeyword_0_7());
                      			
                    }
                    otherlv_8=(Token)match(input,78,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getDesignResidentialAccess().getAreaKeyword_0_8());
                      			
                    }
                    otherlv_9=(Token)match(input,76,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getDesignResidentialAccess().getForKeyword_0_9());
                      			
                    }
                    // InternalMycnl.g:2170:4: ( (lv_no_of_people_10_0= RULE_INT ) )
                    // InternalMycnl.g:2171:5: (lv_no_of_people_10_0= RULE_INT )
                    {
                    // InternalMycnl.g:2171:5: (lv_no_of_people_10_0= RULE_INT )
                    // InternalMycnl.g:2172:6: lv_no_of_people_10_0= RULE_INT
                    {
                    lv_no_of_people_10_0=(Token)match(input,RULE_INT,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_people_10_0, grammarAccess.getDesignResidentialAccess().getNo_of_peopleINTTerminalRuleCall_0_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignResidentialRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_people",
                      							lv_no_of_people_10_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_11=(Token)match(input,79,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getDesignResidentialAccess().getPeopleKeyword_0_11());
                      			
                    }
                    otherlv_12=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getDesignResidentialAccess().getInKeyword_0_12());
                      			
                    }
                    otherlv_13=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getDesignResidentialAccess().getRegionKeyword_0_13());
                      			
                    }
                    // InternalMycnl.g:2200:4: ( (lv_region_14_0= RULE_INT ) )
                    // InternalMycnl.g:2201:5: (lv_region_14_0= RULE_INT )
                    {
                    // InternalMycnl.g:2201:5: (lv_region_14_0= RULE_INT )
                    // InternalMycnl.g:2202:6: lv_region_14_0= RULE_INT
                    {
                    lv_region_14_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_14_0, grammarAccess.getDesignResidentialAccess().getRegionINTTerminalRuleCall_0_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignResidentialRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_14_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:2220:3: (otherlv_15= 'What' otherlv_16= 'Will' otherlv_17= 'Be' otherlv_18= 'The' otherlv_19= 'Design' otherlv_20= 'Plan' otherlv_21= 'For' otherlv_22= 'Residential' otherlv_23= 'Area' otherlv_24= 'For' ( (lv_no_of_people_25_0= RULE_INT ) ) otherlv_26= 'People' otherlv_27= 'In' otherlv_28= 'Region' ( (lv_region_29_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:2220:3: (otherlv_15= 'What' otherlv_16= 'Will' otherlv_17= 'Be' otherlv_18= 'The' otherlv_19= 'Design' otherlv_20= 'Plan' otherlv_21= 'For' otherlv_22= 'Residential' otherlv_23= 'Area' otherlv_24= 'For' ( (lv_no_of_people_25_0= RULE_INT ) ) otherlv_26= 'People' otherlv_27= 'In' otherlv_28= 'Region' ( (lv_region_29_0= RULE_INT ) ) )
                    // InternalMycnl.g:2221:4: otherlv_15= 'What' otherlv_16= 'Will' otherlv_17= 'Be' otherlv_18= 'The' otherlv_19= 'Design' otherlv_20= 'Plan' otherlv_21= 'For' otherlv_22= 'Residential' otherlv_23= 'Area' otherlv_24= 'For' ( (lv_no_of_people_25_0= RULE_INT ) ) otherlv_26= 'People' otherlv_27= 'In' otherlv_28= 'Region' ( (lv_region_29_0= RULE_INT ) )
                    {
                    otherlv_15=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getDesignResidentialAccess().getWhatKeyword_1_0());
                      			
                    }
                    otherlv_16=(Token)match(input,38,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getDesignResidentialAccess().getWillKeyword_1_1());
                      			
                    }
                    otherlv_17=(Token)match(input,39,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getDesignResidentialAccess().getBeKeyword_1_2());
                      			
                    }
                    otherlv_18=(Token)match(input,40,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getDesignResidentialAccess().getTheKeyword_1_3());
                      			
                    }
                    otherlv_19=(Token)match(input,80,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getDesignResidentialAccess().getDesignKeyword_1_4());
                      			
                    }
                    otherlv_20=(Token)match(input,81,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getDesignResidentialAccess().getPlanKeyword_1_5());
                      			
                    }
                    otherlv_21=(Token)match(input,82,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_21, grammarAccess.getDesignResidentialAccess().getForKeyword_1_6());
                      			
                    }
                    otherlv_22=(Token)match(input,83,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getDesignResidentialAccess().getResidentialKeyword_1_7());
                      			
                    }
                    otherlv_23=(Token)match(input,84,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getDesignResidentialAccess().getAreaKeyword_1_8());
                      			
                    }
                    otherlv_24=(Token)match(input,82,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_24, grammarAccess.getDesignResidentialAccess().getForKeyword_1_9());
                      			
                    }
                    // InternalMycnl.g:2261:4: ( (lv_no_of_people_25_0= RULE_INT ) )
                    // InternalMycnl.g:2262:5: (lv_no_of_people_25_0= RULE_INT )
                    {
                    // InternalMycnl.g:2262:5: (lv_no_of_people_25_0= RULE_INT )
                    // InternalMycnl.g:2263:6: lv_no_of_people_25_0= RULE_INT
                    {
                    lv_no_of_people_25_0=(Token)match(input,RULE_INT,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_people_25_0, grammarAccess.getDesignResidentialAccess().getNo_of_peopleINTTerminalRuleCall_1_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignResidentialRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_people",
                      							lv_no_of_people_25_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_26=(Token)match(input,85,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getDesignResidentialAccess().getPeopleKeyword_1_11());
                      			
                    }
                    otherlv_27=(Token)match(input,47,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_27, grammarAccess.getDesignResidentialAccess().getInKeyword_1_12());
                      			
                    }
                    otherlv_28=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getDesignResidentialAccess().getRegionKeyword_1_13());
                      			
                    }
                    // InternalMycnl.g:2291:4: ( (lv_region_29_0= RULE_INT ) )
                    // InternalMycnl.g:2292:5: (lv_region_29_0= RULE_INT )
                    {
                    // InternalMycnl.g:2292:5: (lv_region_29_0= RULE_INT )
                    // InternalMycnl.g:2293:6: lv_region_29_0= RULE_INT
                    {
                    lv_region_29_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_29_0, grammarAccess.getDesignResidentialAccess().getRegionINTTerminalRuleCall_1_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignResidentialRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_29_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalMycnl.g:2311:3: (otherlv_30= 'What' otherlv_31= 'will' otherlv_32= 'be' otherlv_33= 'the' otherlv_34= 'design' otherlv_35= 'plan' otherlv_36= 'for' otherlv_37= 'residential' otherlv_38= 'area' otherlv_39= 'for' ( (lv_no_of_people_40_0= RULE_INT ) ) otherlv_41= 'people' otherlv_42= 'in' otherlv_43= 'region' ( (lv_region_44_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:2311:3: (otherlv_30= 'What' otherlv_31= 'will' otherlv_32= 'be' otherlv_33= 'the' otherlv_34= 'design' otherlv_35= 'plan' otherlv_36= 'for' otherlv_37= 'residential' otherlv_38= 'area' otherlv_39= 'for' ( (lv_no_of_people_40_0= RULE_INT ) ) otherlv_41= 'people' otherlv_42= 'in' otherlv_43= 'region' ( (lv_region_44_0= RULE_INT ) ) )
                    // InternalMycnl.g:2312:4: otherlv_30= 'What' otherlv_31= 'will' otherlv_32= 'be' otherlv_33= 'the' otherlv_34= 'design' otherlv_35= 'plan' otherlv_36= 'for' otherlv_37= 'residential' otherlv_38= 'area' otherlv_39= 'for' ( (lv_no_of_people_40_0= RULE_INT ) ) otherlv_41= 'people' otherlv_42= 'in' otherlv_43= 'region' ( (lv_region_44_0= RULE_INT ) )
                    {
                    otherlv_30=(Token)match(input,37,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_30, grammarAccess.getDesignResidentialAccess().getWhatKeyword_2_0());
                      			
                    }
                    otherlv_31=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getDesignResidentialAccess().getWillKeyword_2_1());
                      			
                    }
                    otherlv_32=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_32, grammarAccess.getDesignResidentialAccess().getBeKeyword_2_2());
                      			
                    }
                    otherlv_33=(Token)match(input,28,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_33, grammarAccess.getDesignResidentialAccess().getTheKeyword_2_3());
                      			
                    }
                    otherlv_34=(Token)match(input,74,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_34, grammarAccess.getDesignResidentialAccess().getDesignKeyword_2_4());
                      			
                    }
                    otherlv_35=(Token)match(input,75,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_35, grammarAccess.getDesignResidentialAccess().getPlanKeyword_2_5());
                      			
                    }
                    otherlv_36=(Token)match(input,76,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_36, grammarAccess.getDesignResidentialAccess().getForKeyword_2_6());
                      			
                    }
                    otherlv_37=(Token)match(input,77,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_37, grammarAccess.getDesignResidentialAccess().getResidentialKeyword_2_7());
                      			
                    }
                    otherlv_38=(Token)match(input,78,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_38, grammarAccess.getDesignResidentialAccess().getAreaKeyword_2_8());
                      			
                    }
                    otherlv_39=(Token)match(input,76,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_39, grammarAccess.getDesignResidentialAccess().getForKeyword_2_9());
                      			
                    }
                    // InternalMycnl.g:2352:4: ( (lv_no_of_people_40_0= RULE_INT ) )
                    // InternalMycnl.g:2353:5: (lv_no_of_people_40_0= RULE_INT )
                    {
                    // InternalMycnl.g:2353:5: (lv_no_of_people_40_0= RULE_INT )
                    // InternalMycnl.g:2354:6: lv_no_of_people_40_0= RULE_INT
                    {
                    lv_no_of_people_40_0=(Token)match(input,RULE_INT,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_people_40_0, grammarAccess.getDesignResidentialAccess().getNo_of_peopleINTTerminalRuleCall_2_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignResidentialRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_people",
                      							lv_no_of_people_40_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_41=(Token)match(input,79,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_41, grammarAccess.getDesignResidentialAccess().getPeopleKeyword_2_11());
                      			
                    }
                    otherlv_42=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getDesignResidentialAccess().getInKeyword_2_12());
                      			
                    }
                    otherlv_43=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_43, grammarAccess.getDesignResidentialAccess().getRegionKeyword_2_13());
                      			
                    }
                    // InternalMycnl.g:2382:4: ( (lv_region_44_0= RULE_INT ) )
                    // InternalMycnl.g:2383:5: (lv_region_44_0= RULE_INT )
                    {
                    // InternalMycnl.g:2383:5: (lv_region_44_0= RULE_INT )
                    // InternalMycnl.g:2384:6: lv_region_44_0= RULE_INT
                    {
                    lv_region_44_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_44_0, grammarAccess.getDesignResidentialAccess().getRegionINTTerminalRuleCall_2_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignResidentialRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_44_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalMycnl.g:2402:3: (otherlv_45= 'WHAT' otherlv_46= 'WILL' otherlv_47= 'BE' otherlv_48= 'THE' otherlv_49= 'DESIGN' otherlv_50= 'PLAN' otherlv_51= 'FOR' otherlv_52= 'RESIDENTIAL' otherlv_53= 'AREA' otherlv_54= 'FOR' ( (lv_no_of_people_55_0= RULE_INT ) ) otherlv_56= 'PEOPLE' otherlv_57= 'IN' otherlv_58= 'REGION' ( (lv_region_59_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:2402:3: (otherlv_45= 'WHAT' otherlv_46= 'WILL' otherlv_47= 'BE' otherlv_48= 'THE' otherlv_49= 'DESIGN' otherlv_50= 'PLAN' otherlv_51= 'FOR' otherlv_52= 'RESIDENTIAL' otherlv_53= 'AREA' otherlv_54= 'FOR' ( (lv_no_of_people_55_0= RULE_INT ) ) otherlv_56= 'PEOPLE' otherlv_57= 'IN' otherlv_58= 'REGION' ( (lv_region_59_0= RULE_INT ) ) )
                    // InternalMycnl.g:2403:4: otherlv_45= 'WHAT' otherlv_46= 'WILL' otherlv_47= 'BE' otherlv_48= 'THE' otherlv_49= 'DESIGN' otherlv_50= 'PLAN' otherlv_51= 'FOR' otherlv_52= 'RESIDENTIAL' otherlv_53= 'AREA' otherlv_54= 'FOR' ( (lv_no_of_people_55_0= RULE_INT ) ) otherlv_56= 'PEOPLE' otherlv_57= 'IN' otherlv_58= 'REGION' ( (lv_region_59_0= RULE_INT ) )
                    {
                    otherlv_45=(Token)match(input,48,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_45, grammarAccess.getDesignResidentialAccess().getWHATKeyword_3_0());
                      			
                    }
                    otherlv_46=(Token)match(input,49,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_46, grammarAccess.getDesignResidentialAccess().getWILLKeyword_3_1());
                      			
                    }
                    otherlv_47=(Token)match(input,50,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_47, grammarAccess.getDesignResidentialAccess().getBEKeyword_3_2());
                      			
                    }
                    otherlv_48=(Token)match(input,51,FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getDesignResidentialAccess().getTHEKeyword_3_3());
                      			
                    }
                    otherlv_49=(Token)match(input,86,FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_49, grammarAccess.getDesignResidentialAccess().getDESIGNKeyword_3_4());
                      			
                    }
                    otherlv_50=(Token)match(input,87,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_50, grammarAccess.getDesignResidentialAccess().getPLANKeyword_3_5());
                      			
                    }
                    otherlv_51=(Token)match(input,88,FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_51, grammarAccess.getDesignResidentialAccess().getFORKeyword_3_6());
                      			
                    }
                    otherlv_52=(Token)match(input,89,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_52, grammarAccess.getDesignResidentialAccess().getRESIDENTIALKeyword_3_7());
                      			
                    }
                    otherlv_53=(Token)match(input,90,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_53, grammarAccess.getDesignResidentialAccess().getAREAKeyword_3_8());
                      			
                    }
                    otherlv_54=(Token)match(input,88,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_54, grammarAccess.getDesignResidentialAccess().getFORKeyword_3_9());
                      			
                    }
                    // InternalMycnl.g:2443:4: ( (lv_no_of_people_55_0= RULE_INT ) )
                    // InternalMycnl.g:2444:5: (lv_no_of_people_55_0= RULE_INT )
                    {
                    // InternalMycnl.g:2444:5: (lv_no_of_people_55_0= RULE_INT )
                    // InternalMycnl.g:2445:6: lv_no_of_people_55_0= RULE_INT
                    {
                    lv_no_of_people_55_0=(Token)match(input,RULE_INT,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_people_55_0, grammarAccess.getDesignResidentialAccess().getNo_of_peopleINTTerminalRuleCall_3_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignResidentialRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_people",
                      							lv_no_of_people_55_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_56=(Token)match(input,91,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_56, grammarAccess.getDesignResidentialAccess().getPEOPLEKeyword_3_11());
                      			
                    }
                    otherlv_57=(Token)match(input,58,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_57, grammarAccess.getDesignResidentialAccess().getINKeyword_3_12());
                      			
                    }
                    otherlv_58=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_58, grammarAccess.getDesignResidentialAccess().getREGIONKeyword_3_13());
                      			
                    }
                    // InternalMycnl.g:2473:4: ( (lv_region_59_0= RULE_INT ) )
                    // InternalMycnl.g:2474:5: (lv_region_59_0= RULE_INT )
                    {
                    // InternalMycnl.g:2474:5: (lv_region_59_0= RULE_INT )
                    // InternalMycnl.g:2475:6: lv_region_59_0= RULE_INT
                    {
                    lv_region_59_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_59_0, grammarAccess.getDesignResidentialAccess().getRegionINTTerminalRuleCall_3_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignResidentialRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_59_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalMycnl.g:2493:3: (otherlv_60= 'What' otherlv_61= 'Will' otherlv_62= 'be' otherlv_63= 'the' otherlv_64= 'Design' otherlv_65= 'Plan' otherlv_66= 'for' otherlv_67= 'Residential' otherlv_68= 'Area' otherlv_69= 'For' ( (lv_no_of_people_70_0= RULE_INT ) ) otherlv_71= 'People' otherlv_72= 'in' otherlv_73= 'Region' ( (lv_region_74_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:2493:3: (otherlv_60= 'What' otherlv_61= 'Will' otherlv_62= 'be' otherlv_63= 'the' otherlv_64= 'Design' otherlv_65= 'Plan' otherlv_66= 'for' otherlv_67= 'Residential' otherlv_68= 'Area' otherlv_69= 'For' ( (lv_no_of_people_70_0= RULE_INT ) ) otherlv_71= 'People' otherlv_72= 'in' otherlv_73= 'Region' ( (lv_region_74_0= RULE_INT ) ) )
                    // InternalMycnl.g:2494:4: otherlv_60= 'What' otherlv_61= 'Will' otherlv_62= 'be' otherlv_63= 'the' otherlv_64= 'Design' otherlv_65= 'Plan' otherlv_66= 'for' otherlv_67= 'Residential' otherlv_68= 'Area' otherlv_69= 'For' ( (lv_no_of_people_70_0= RULE_INT ) ) otherlv_71= 'People' otherlv_72= 'in' otherlv_73= 'Region' ( (lv_region_74_0= RULE_INT ) )
                    {
                    otherlv_60=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_60, grammarAccess.getDesignResidentialAccess().getWhatKeyword_4_0());
                      			
                    }
                    otherlv_61=(Token)match(input,38,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_61, grammarAccess.getDesignResidentialAccess().getWillKeyword_4_1());
                      			
                    }
                    otherlv_62=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_62, grammarAccess.getDesignResidentialAccess().getBeKeyword_4_2());
                      			
                    }
                    otherlv_63=(Token)match(input,28,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_63, grammarAccess.getDesignResidentialAccess().getTheKeyword_4_3());
                      			
                    }
                    otherlv_64=(Token)match(input,80,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_64, grammarAccess.getDesignResidentialAccess().getDesignKeyword_4_4());
                      			
                    }
                    otherlv_65=(Token)match(input,81,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_65, grammarAccess.getDesignResidentialAccess().getPlanKeyword_4_5());
                      			
                    }
                    otherlv_66=(Token)match(input,76,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_66, grammarAccess.getDesignResidentialAccess().getForKeyword_4_6());
                      			
                    }
                    otherlv_67=(Token)match(input,83,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_67, grammarAccess.getDesignResidentialAccess().getResidentialKeyword_4_7());
                      			
                    }
                    otherlv_68=(Token)match(input,84,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_68, grammarAccess.getDesignResidentialAccess().getAreaKeyword_4_8());
                      			
                    }
                    otherlv_69=(Token)match(input,82,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_69, grammarAccess.getDesignResidentialAccess().getForKeyword_4_9());
                      			
                    }
                    // InternalMycnl.g:2534:4: ( (lv_no_of_people_70_0= RULE_INT ) )
                    // InternalMycnl.g:2535:5: (lv_no_of_people_70_0= RULE_INT )
                    {
                    // InternalMycnl.g:2535:5: (lv_no_of_people_70_0= RULE_INT )
                    // InternalMycnl.g:2536:6: lv_no_of_people_70_0= RULE_INT
                    {
                    lv_no_of_people_70_0=(Token)match(input,RULE_INT,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_people_70_0, grammarAccess.getDesignResidentialAccess().getNo_of_peopleINTTerminalRuleCall_4_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignResidentialRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_people",
                      							lv_no_of_people_70_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_71=(Token)match(input,85,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_71, grammarAccess.getDesignResidentialAccess().getPeopleKeyword_4_11());
                      			
                    }
                    otherlv_72=(Token)match(input,36,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_72, grammarAccess.getDesignResidentialAccess().getInKeyword_4_12());
                      			
                    }
                    otherlv_73=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_73, grammarAccess.getDesignResidentialAccess().getRegionKeyword_4_13());
                      			
                    }
                    // InternalMycnl.g:2564:4: ( (lv_region_74_0= RULE_INT ) )
                    // InternalMycnl.g:2565:5: (lv_region_74_0= RULE_INT )
                    {
                    // InternalMycnl.g:2565:5: (lv_region_74_0= RULE_INT )
                    // InternalMycnl.g:2566:6: lv_region_74_0= RULE_INT
                    {
                    lv_region_74_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_74_0, grammarAccess.getDesignResidentialAccess().getRegionINTTerminalRuleCall_4_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignResidentialRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_74_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDesignResidential"


    // $ANTLR start "entryRulefindtempDemolish"
    // InternalMycnl.g:2587:1: entryRulefindtempDemolish returns [EObject current=null] : iv_rulefindtempDemolish= rulefindtempDemolish EOF ;
    public final EObject entryRulefindtempDemolish() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefindtempDemolish = null;


        try {
            // InternalMycnl.g:2587:57: (iv_rulefindtempDemolish= rulefindtempDemolish EOF )
            // InternalMycnl.g:2588:2: iv_rulefindtempDemolish= rulefindtempDemolish EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFindtempDemolishRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefindtempDemolish=rulefindtempDemolish();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefindtempDemolish; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefindtempDemolish"


    // $ANTLR start "rulefindtempDemolish"
    // InternalMycnl.g:2594:1: rulefindtempDemolish returns [EObject current=null] : ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'demolish' ( (lv_no_of_buildings_8_0= RULE_INT ) ) otherlv_9= 'buildings' (otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) )? otherlv_17= 'in' otherlv_18= 'region' ( (lv_region_19_0= RULE_INT ) ) ) | (otherlv_20= 'What' otherlv_21= 'will' otherlv_22= 'be' otherlv_23= 'the' otherlv_24= 'temperature' otherlv_25= 'if' otherlv_26= 'we' otherlv_27= 'demolish' ( (lv_no_of_buildings_28_0= RULE_INT ) ) otherlv_29= 'buildings' (otherlv_30= 'of' otherlv_31= 'dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) )? otherlv_37= 'in' otherlv_38= 'region' ( (lv_region_39_0= RULE_INT ) ) ) | (otherlv_40= 'What' otherlv_41= 'Will' otherlv_42= 'Be' otherlv_43= 'The' otherlv_44= 'Temperature' otherlv_45= 'If' otherlv_46= 'We' otherlv_47= 'Demolish' ( (lv_no_of_buildings_48_0= RULE_INT ) ) otherlv_49= 'Buildings' (otherlv_50= 'Of' otherlv_51= 'Dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) )? otherlv_57= 'In' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'TEMPERATURE' otherlv_65= 'IF' otherlv_66= 'WE' otherlv_67= 'DEMOLISH' ( (lv_no_of_buildings_68_0= RULE_INT ) ) otherlv_69= 'BUILDINGS' (otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) )? otherlv_77= 'IN' otherlv_78= 'REGION' ( (lv_region_79_0= RULE_INT ) ) ) | (otherlv_80= 'What' otherlv_81= 'Will' otherlv_82= 'be' otherlv_83= 'the' otherlv_84= 'Temperature' otherlv_85= 'if' otherlv_86= 'we' otherlv_87= 'Demolish' ( (lv_no_of_buildings_88_0= RULE_INT ) ) otherlv_89= 'Buildings' (otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) )? otherlv_97= 'in' otherlv_98= 'Region' ( (lv_region_99_0= RULE_INT ) ) ) ) ;
    public final EObject rulefindtempDemolish() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token lv_no_of_buildings_8_0=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token lv_length_12_0=null;
        Token otherlv_13=null;
        Token lv_breadth_14_0=null;
        Token otherlv_15=null;
        Token lv_height_16_0=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token lv_region_19_0=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token lv_no_of_buildings_28_0=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token lv_length_32_0=null;
        Token otherlv_33=null;
        Token lv_breadth_34_0=null;
        Token otherlv_35=null;
        Token lv_height_36_0=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token lv_region_39_0=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token otherlv_47=null;
        Token lv_no_of_buildings_48_0=null;
        Token otherlv_49=null;
        Token otherlv_50=null;
        Token otherlv_51=null;
        Token lv_length_52_0=null;
        Token otherlv_53=null;
        Token lv_breadth_54_0=null;
        Token otherlv_55=null;
        Token lv_height_56_0=null;
        Token otherlv_57=null;
        Token otherlv_58=null;
        Token lv_region_59_0=null;
        Token otherlv_60=null;
        Token otherlv_61=null;
        Token otherlv_62=null;
        Token otherlv_63=null;
        Token otherlv_64=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token otherlv_67=null;
        Token lv_no_of_buildings_68_0=null;
        Token otherlv_69=null;
        Token otherlv_70=null;
        Token otherlv_71=null;
        Token lv_length_72_0=null;
        Token otherlv_73=null;
        Token lv_breadth_74_0=null;
        Token otherlv_75=null;
        Token lv_height_76_0=null;
        Token otherlv_77=null;
        Token otherlv_78=null;
        Token lv_region_79_0=null;
        Token otherlv_80=null;
        Token otherlv_81=null;
        Token otherlv_82=null;
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token otherlv_85=null;
        Token otherlv_86=null;
        Token otherlv_87=null;
        Token lv_no_of_buildings_88_0=null;
        Token otherlv_89=null;
        Token otherlv_90=null;
        Token otherlv_91=null;
        Token lv_length_92_0=null;
        Token otherlv_93=null;
        Token lv_breadth_94_0=null;
        Token otherlv_95=null;
        Token lv_height_96_0=null;
        Token otherlv_97=null;
        Token otherlv_98=null;
        Token lv_region_99_0=null;


        	enterRule();

        try {
            // InternalMycnl.g:2600:2: ( ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'demolish' ( (lv_no_of_buildings_8_0= RULE_INT ) ) otherlv_9= 'buildings' (otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) )? otherlv_17= 'in' otherlv_18= 'region' ( (lv_region_19_0= RULE_INT ) ) ) | (otherlv_20= 'What' otherlv_21= 'will' otherlv_22= 'be' otherlv_23= 'the' otherlv_24= 'temperature' otherlv_25= 'if' otherlv_26= 'we' otherlv_27= 'demolish' ( (lv_no_of_buildings_28_0= RULE_INT ) ) otherlv_29= 'buildings' (otherlv_30= 'of' otherlv_31= 'dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) )? otherlv_37= 'in' otherlv_38= 'region' ( (lv_region_39_0= RULE_INT ) ) ) | (otherlv_40= 'What' otherlv_41= 'Will' otherlv_42= 'Be' otherlv_43= 'The' otherlv_44= 'Temperature' otherlv_45= 'If' otherlv_46= 'We' otherlv_47= 'Demolish' ( (lv_no_of_buildings_48_0= RULE_INT ) ) otherlv_49= 'Buildings' (otherlv_50= 'Of' otherlv_51= 'Dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) )? otherlv_57= 'In' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'TEMPERATURE' otherlv_65= 'IF' otherlv_66= 'WE' otherlv_67= 'DEMOLISH' ( (lv_no_of_buildings_68_0= RULE_INT ) ) otherlv_69= 'BUILDINGS' (otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) )? otherlv_77= 'IN' otherlv_78= 'REGION' ( (lv_region_79_0= RULE_INT ) ) ) | (otherlv_80= 'What' otherlv_81= 'Will' otherlv_82= 'be' otherlv_83= 'the' otherlv_84= 'Temperature' otherlv_85= 'if' otherlv_86= 'we' otherlv_87= 'Demolish' ( (lv_no_of_buildings_88_0= RULE_INT ) ) otherlv_89= 'Buildings' (otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) )? otherlv_97= 'in' otherlv_98= 'Region' ( (lv_region_99_0= RULE_INT ) ) ) ) )
            // InternalMycnl.g:2601:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'demolish' ( (lv_no_of_buildings_8_0= RULE_INT ) ) otherlv_9= 'buildings' (otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) )? otherlv_17= 'in' otherlv_18= 'region' ( (lv_region_19_0= RULE_INT ) ) ) | (otherlv_20= 'What' otherlv_21= 'will' otherlv_22= 'be' otherlv_23= 'the' otherlv_24= 'temperature' otherlv_25= 'if' otherlv_26= 'we' otherlv_27= 'demolish' ( (lv_no_of_buildings_28_0= RULE_INT ) ) otherlv_29= 'buildings' (otherlv_30= 'of' otherlv_31= 'dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) )? otherlv_37= 'in' otherlv_38= 'region' ( (lv_region_39_0= RULE_INT ) ) ) | (otherlv_40= 'What' otherlv_41= 'Will' otherlv_42= 'Be' otherlv_43= 'The' otherlv_44= 'Temperature' otherlv_45= 'If' otherlv_46= 'We' otherlv_47= 'Demolish' ( (lv_no_of_buildings_48_0= RULE_INT ) ) otherlv_49= 'Buildings' (otherlv_50= 'Of' otherlv_51= 'Dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) )? otherlv_57= 'In' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'TEMPERATURE' otherlv_65= 'IF' otherlv_66= 'WE' otherlv_67= 'DEMOLISH' ( (lv_no_of_buildings_68_0= RULE_INT ) ) otherlv_69= 'BUILDINGS' (otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) )? otherlv_77= 'IN' otherlv_78= 'REGION' ( (lv_region_79_0= RULE_INT ) ) ) | (otherlv_80= 'What' otherlv_81= 'Will' otherlv_82= 'be' otherlv_83= 'the' otherlv_84= 'Temperature' otherlv_85= 'if' otherlv_86= 'we' otherlv_87= 'Demolish' ( (lv_no_of_buildings_88_0= RULE_INT ) ) otherlv_89= 'Buildings' (otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) )? otherlv_97= 'in' otherlv_98= 'Region' ( (lv_region_99_0= RULE_INT ) ) ) )
            {
            // InternalMycnl.g:2601:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'demolish' ( (lv_no_of_buildings_8_0= RULE_INT ) ) otherlv_9= 'buildings' (otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) )? otherlv_17= 'in' otherlv_18= 'region' ( (lv_region_19_0= RULE_INT ) ) ) | (otherlv_20= 'What' otherlv_21= 'will' otherlv_22= 'be' otherlv_23= 'the' otherlv_24= 'temperature' otherlv_25= 'if' otherlv_26= 'we' otherlv_27= 'demolish' ( (lv_no_of_buildings_28_0= RULE_INT ) ) otherlv_29= 'buildings' (otherlv_30= 'of' otherlv_31= 'dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) )? otherlv_37= 'in' otherlv_38= 'region' ( (lv_region_39_0= RULE_INT ) ) ) | (otherlv_40= 'What' otherlv_41= 'Will' otherlv_42= 'Be' otherlv_43= 'The' otherlv_44= 'Temperature' otherlv_45= 'If' otherlv_46= 'We' otherlv_47= 'Demolish' ( (lv_no_of_buildings_48_0= RULE_INT ) ) otherlv_49= 'Buildings' (otherlv_50= 'Of' otherlv_51= 'Dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) )? otherlv_57= 'In' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'TEMPERATURE' otherlv_65= 'IF' otherlv_66= 'WE' otherlv_67= 'DEMOLISH' ( (lv_no_of_buildings_68_0= RULE_INT ) ) otherlv_69= 'BUILDINGS' (otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) )? otherlv_77= 'IN' otherlv_78= 'REGION' ( (lv_region_79_0= RULE_INT ) ) ) | (otherlv_80= 'What' otherlv_81= 'Will' otherlv_82= 'be' otherlv_83= 'the' otherlv_84= 'Temperature' otherlv_85= 'if' otherlv_86= 'we' otherlv_87= 'Demolish' ( (lv_no_of_buildings_88_0= RULE_INT ) ) otherlv_89= 'Buildings' (otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) )? otherlv_97= 'in' otherlv_98= 'Region' ( (lv_region_99_0= RULE_INT ) ) ) )
            int alt12=5;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt12=1;
                }
                break;
            case 37:
                {
                int LA12_2 = input.LA(2);

                if ( (LA12_2==38) ) {
                    int LA12_4 = input.LA(3);

                    if ( (LA12_4==39) ) {
                        alt12=3;
                    }
                    else if ( (LA12_4==27) ) {
                        alt12=5;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 12, 4, input);

                        throw nvae;
                    }
                }
                else if ( (LA12_2==26) ) {
                    alt12=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 2, input);

                    throw nvae;
                }
                }
                break;
            case 48:
                {
                alt12=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalMycnl.g:2602:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'demolish' ( (lv_no_of_buildings_8_0= RULE_INT ) ) otherlv_9= 'buildings' (otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) )? otherlv_17= 'in' otherlv_18= 'region' ( (lv_region_19_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:2602:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'demolish' ( (lv_no_of_buildings_8_0= RULE_INT ) ) otherlv_9= 'buildings' (otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) )? otherlv_17= 'in' otherlv_18= 'region' ( (lv_region_19_0= RULE_INT ) ) )
                    // InternalMycnl.g:2603:4: otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'demolish' ( (lv_no_of_buildings_8_0= RULE_INT ) ) otherlv_9= 'buildings' (otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) )? otherlv_17= 'in' otherlv_18= 'region' ( (lv_region_19_0= RULE_INT ) )
                    {
                    otherlv_0=(Token)match(input,25,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFindtempDemolishAccess().getWhatKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getFindtempDemolishAccess().getWillKeyword_0_1());
                      			
                    }
                    otherlv_2=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getFindtempDemolishAccess().getBeKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,28,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getFindtempDemolishAccess().getTheKeyword_0_3());
                      			
                    }
                    otherlv_4=(Token)match(input,29,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getFindtempDemolishAccess().getTemperatureKeyword_0_4());
                      			
                    }
                    otherlv_5=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getFindtempDemolishAccess().getIfKeyword_0_5());
                      			
                    }
                    otherlv_6=(Token)match(input,31,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getFindtempDemolishAccess().getWeKeyword_0_6());
                      			
                    }
                    otherlv_7=(Token)match(input,92,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getFindtempDemolishAccess().getDemolishKeyword_0_7());
                      			
                    }
                    // InternalMycnl.g:2635:4: ( (lv_no_of_buildings_8_0= RULE_INT ) )
                    // InternalMycnl.g:2636:5: (lv_no_of_buildings_8_0= RULE_INT )
                    {
                    // InternalMycnl.g:2636:5: (lv_no_of_buildings_8_0= RULE_INT )
                    // InternalMycnl.g:2637:6: lv_no_of_buildings_8_0= RULE_INT
                    {
                    lv_no_of_buildings_8_0=(Token)match(input,RULE_INT,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_buildings_8_0, grammarAccess.getFindtempDemolishAccess().getNo_of_buildingsINTTerminalRuleCall_0_8_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempDemolishRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_buildings",
                      							lv_no_of_buildings_8_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,33,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getFindtempDemolishAccess().getBuildingsKeyword_0_9());
                      			
                    }
                    // InternalMycnl.g:2657:4: (otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) ) )?
                    int alt7=2;
                    int LA7_0 = input.LA(1);

                    if ( (LA7_0==15) ) {
                        alt7=1;
                    }
                    switch (alt7) {
                        case 1 :
                            // InternalMycnl.g:2658:5: otherlv_10= 'of' otherlv_11= 'dimensions' ( (lv_length_12_0= RULE_INT ) ) otherlv_13= 'x' ( (lv_breadth_14_0= RULE_INT ) ) otherlv_15= 'x' ( (lv_height_16_0= RULE_INT ) )
                            {
                            otherlv_10=(Token)match(input,15,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_10, grammarAccess.getFindtempDemolishAccess().getOfKeyword_0_10_0());
                              				
                            }
                            otherlv_11=(Token)match(input,34,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_11, grammarAccess.getFindtempDemolishAccess().getDimensionsKeyword_0_10_1());
                              				
                            }
                            // InternalMycnl.g:2666:5: ( (lv_length_12_0= RULE_INT ) )
                            // InternalMycnl.g:2667:6: (lv_length_12_0= RULE_INT )
                            {
                            // InternalMycnl.g:2667:6: (lv_length_12_0= RULE_INT )
                            // InternalMycnl.g:2668:7: lv_length_12_0= RULE_INT
                            {
                            lv_length_12_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_length_12_0, grammarAccess.getFindtempDemolishAccess().getLengthINTTerminalRuleCall_0_10_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getFindtempDemolishRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"length",
                              								lv_length_12_0,
                              								"org.eclipse.xtext.xbase.Xbase.INT");
                              						
                            }

                            }


                            }

                            otherlv_13=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_13, grammarAccess.getFindtempDemolishAccess().getXKeyword_0_10_3());
                              				
                            }
                            // InternalMycnl.g:2688:5: ( (lv_breadth_14_0= RULE_INT ) )
                            // InternalMycnl.g:2689:6: (lv_breadth_14_0= RULE_INT )
                            {
                            // InternalMycnl.g:2689:6: (lv_breadth_14_0= RULE_INT )
                            // InternalMycnl.g:2690:7: lv_breadth_14_0= RULE_INT
                            {
                            lv_breadth_14_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_breadth_14_0, grammarAccess.getFindtempDemolishAccess().getBreadthINTTerminalRuleCall_0_10_4_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getFindtempDemolishRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"breadth",
                              								lv_breadth_14_0,
                              								"org.eclipse.xtext.xbase.Xbase.INT");
                              						
                            }

                            }


                            }

                            otherlv_15=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_15, grammarAccess.getFindtempDemolishAccess().getXKeyword_0_10_5());
                              				
                            }
                            // InternalMycnl.g:2710:5: ( (lv_height_16_0= RULE_INT ) )
                            // InternalMycnl.g:2711:6: (lv_height_16_0= RULE_INT )
                            {
                            // InternalMycnl.g:2711:6: (lv_height_16_0= RULE_INT )
                            // InternalMycnl.g:2712:7: lv_height_16_0= RULE_INT
                            {
                            lv_height_16_0=(Token)match(input,RULE_INT,FOLLOW_24); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_height_16_0, grammarAccess.getFindtempDemolishAccess().getHeightINTTerminalRuleCall_0_10_6_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getFindtempDemolishRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"height",
                              								lv_height_16_0,
                              								"org.eclipse.xtext.xbase.Xbase.INT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_17=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getFindtempDemolishAccess().getInKeyword_0_11());
                      			
                    }
                    otherlv_18=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getFindtempDemolishAccess().getRegionKeyword_0_12());
                      			
                    }
                    // InternalMycnl.g:2737:4: ( (lv_region_19_0= RULE_INT ) )
                    // InternalMycnl.g:2738:5: (lv_region_19_0= RULE_INT )
                    {
                    // InternalMycnl.g:2738:5: (lv_region_19_0= RULE_INT )
                    // InternalMycnl.g:2739:6: lv_region_19_0= RULE_INT
                    {
                    lv_region_19_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_19_0, grammarAccess.getFindtempDemolishAccess().getRegionINTTerminalRuleCall_0_13_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempDemolishRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_19_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:2757:3: (otherlv_20= 'What' otherlv_21= 'will' otherlv_22= 'be' otherlv_23= 'the' otherlv_24= 'temperature' otherlv_25= 'if' otherlv_26= 'we' otherlv_27= 'demolish' ( (lv_no_of_buildings_28_0= RULE_INT ) ) otherlv_29= 'buildings' (otherlv_30= 'of' otherlv_31= 'dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) )? otherlv_37= 'in' otherlv_38= 'region' ( (lv_region_39_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:2757:3: (otherlv_20= 'What' otherlv_21= 'will' otherlv_22= 'be' otherlv_23= 'the' otherlv_24= 'temperature' otherlv_25= 'if' otherlv_26= 'we' otherlv_27= 'demolish' ( (lv_no_of_buildings_28_0= RULE_INT ) ) otherlv_29= 'buildings' (otherlv_30= 'of' otherlv_31= 'dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) )? otherlv_37= 'in' otherlv_38= 'region' ( (lv_region_39_0= RULE_INT ) ) )
                    // InternalMycnl.g:2758:4: otherlv_20= 'What' otherlv_21= 'will' otherlv_22= 'be' otherlv_23= 'the' otherlv_24= 'temperature' otherlv_25= 'if' otherlv_26= 'we' otherlv_27= 'demolish' ( (lv_no_of_buildings_28_0= RULE_INT ) ) otherlv_29= 'buildings' (otherlv_30= 'of' otherlv_31= 'dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) )? otherlv_37= 'in' otherlv_38= 'region' ( (lv_region_39_0= RULE_INT ) )
                    {
                    otherlv_20=(Token)match(input,37,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getFindtempDemolishAccess().getWhatKeyword_1_0());
                      			
                    }
                    otherlv_21=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_21, grammarAccess.getFindtempDemolishAccess().getWillKeyword_1_1());
                      			
                    }
                    otherlv_22=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getFindtempDemolishAccess().getBeKeyword_1_2());
                      			
                    }
                    otherlv_23=(Token)match(input,28,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getFindtempDemolishAccess().getTheKeyword_1_3());
                      			
                    }
                    otherlv_24=(Token)match(input,29,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_24, grammarAccess.getFindtempDemolishAccess().getTemperatureKeyword_1_4());
                      			
                    }
                    otherlv_25=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getFindtempDemolishAccess().getIfKeyword_1_5());
                      			
                    }
                    otherlv_26=(Token)match(input,31,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getFindtempDemolishAccess().getWeKeyword_1_6());
                      			
                    }
                    otherlv_27=(Token)match(input,92,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_27, grammarAccess.getFindtempDemolishAccess().getDemolishKeyword_1_7());
                      			
                    }
                    // InternalMycnl.g:2790:4: ( (lv_no_of_buildings_28_0= RULE_INT ) )
                    // InternalMycnl.g:2791:5: (lv_no_of_buildings_28_0= RULE_INT )
                    {
                    // InternalMycnl.g:2791:5: (lv_no_of_buildings_28_0= RULE_INT )
                    // InternalMycnl.g:2792:6: lv_no_of_buildings_28_0= RULE_INT
                    {
                    lv_no_of_buildings_28_0=(Token)match(input,RULE_INT,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_buildings_28_0, grammarAccess.getFindtempDemolishAccess().getNo_of_buildingsINTTerminalRuleCall_1_8_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempDemolishRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_buildings",
                      							lv_no_of_buildings_28_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_29=(Token)match(input,33,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_29, grammarAccess.getFindtempDemolishAccess().getBuildingsKeyword_1_9());
                      			
                    }
                    // InternalMycnl.g:2812:4: (otherlv_30= 'of' otherlv_31= 'dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) ) )?
                    int alt8=2;
                    int LA8_0 = input.LA(1);

                    if ( (LA8_0==15) ) {
                        alt8=1;
                    }
                    switch (alt8) {
                        case 1 :
                            // InternalMycnl.g:2813:5: otherlv_30= 'of' otherlv_31= 'dimensions' ( (lv_length_32_0= RULE_INT ) ) otherlv_33= 'x' ( (lv_breadth_34_0= RULE_INT ) ) otherlv_35= 'x' ( (lv_height_36_0= RULE_INT ) )
                            {
                            otherlv_30=(Token)match(input,15,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_30, grammarAccess.getFindtempDemolishAccess().getOfKeyword_1_10_0());
                              				
                            }
                            otherlv_31=(Token)match(input,34,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_31, grammarAccess.getFindtempDemolishAccess().getDimensionsKeyword_1_10_1());
                              				
                            }
                            // InternalMycnl.g:2821:5: ( (lv_length_32_0= RULE_INT ) )
                            // InternalMycnl.g:2822:6: (lv_length_32_0= RULE_INT )
                            {
                            // InternalMycnl.g:2822:6: (lv_length_32_0= RULE_INT )
                            // InternalMycnl.g:2823:7: lv_length_32_0= RULE_INT
                            {
                            lv_length_32_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_length_32_0, grammarAccess.getFindtempDemolishAccess().getLengthINTTerminalRuleCall_1_10_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getFindtempDemolishRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"length",
                              								lv_length_32_0,
                              								"org.eclipse.xtext.xbase.Xbase.INT");
                              						
                            }

                            }


                            }

                            otherlv_33=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_33, grammarAccess.getFindtempDemolishAccess().getXKeyword_1_10_3());
                              				
                            }
                            // InternalMycnl.g:2843:5: ( (lv_breadth_34_0= RULE_INT ) )
                            // InternalMycnl.g:2844:6: (lv_breadth_34_0= RULE_INT )
                            {
                            // InternalMycnl.g:2844:6: (lv_breadth_34_0= RULE_INT )
                            // InternalMycnl.g:2845:7: lv_breadth_34_0= RULE_INT
                            {
                            lv_breadth_34_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_breadth_34_0, grammarAccess.getFindtempDemolishAccess().getBreadthINTTerminalRuleCall_1_10_4_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getFindtempDemolishRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"breadth",
                              								lv_breadth_34_0,
                              								"org.eclipse.xtext.xbase.Xbase.INT");
                              						
                            }

                            }


                            }

                            otherlv_35=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_35, grammarAccess.getFindtempDemolishAccess().getXKeyword_1_10_5());
                              				
                            }
                            // InternalMycnl.g:2865:5: ( (lv_height_36_0= RULE_INT ) )
                            // InternalMycnl.g:2866:6: (lv_height_36_0= RULE_INT )
                            {
                            // InternalMycnl.g:2866:6: (lv_height_36_0= RULE_INT )
                            // InternalMycnl.g:2867:7: lv_height_36_0= RULE_INT
                            {
                            lv_height_36_0=(Token)match(input,RULE_INT,FOLLOW_24); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_height_36_0, grammarAccess.getFindtempDemolishAccess().getHeightINTTerminalRuleCall_1_10_6_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getFindtempDemolishRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"height",
                              								lv_height_36_0,
                              								"org.eclipse.xtext.xbase.Xbase.INT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_37=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_37, grammarAccess.getFindtempDemolishAccess().getInKeyword_1_11());
                      			
                    }
                    otherlv_38=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_38, grammarAccess.getFindtempDemolishAccess().getRegionKeyword_1_12());
                      			
                    }
                    // InternalMycnl.g:2892:4: ( (lv_region_39_0= RULE_INT ) )
                    // InternalMycnl.g:2893:5: (lv_region_39_0= RULE_INT )
                    {
                    // InternalMycnl.g:2893:5: (lv_region_39_0= RULE_INT )
                    // InternalMycnl.g:2894:6: lv_region_39_0= RULE_INT
                    {
                    lv_region_39_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_39_0, grammarAccess.getFindtempDemolishAccess().getRegionINTTerminalRuleCall_1_13_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempDemolishRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_39_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalMycnl.g:2912:3: (otherlv_40= 'What' otherlv_41= 'Will' otherlv_42= 'Be' otherlv_43= 'The' otherlv_44= 'Temperature' otherlv_45= 'If' otherlv_46= 'We' otherlv_47= 'Demolish' ( (lv_no_of_buildings_48_0= RULE_INT ) ) otherlv_49= 'Buildings' (otherlv_50= 'Of' otherlv_51= 'Dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) )? otherlv_57= 'In' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:2912:3: (otherlv_40= 'What' otherlv_41= 'Will' otherlv_42= 'Be' otherlv_43= 'The' otherlv_44= 'Temperature' otherlv_45= 'If' otherlv_46= 'We' otherlv_47= 'Demolish' ( (lv_no_of_buildings_48_0= RULE_INT ) ) otherlv_49= 'Buildings' (otherlv_50= 'Of' otherlv_51= 'Dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) )? otherlv_57= 'In' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) )
                    // InternalMycnl.g:2913:4: otherlv_40= 'What' otherlv_41= 'Will' otherlv_42= 'Be' otherlv_43= 'The' otherlv_44= 'Temperature' otherlv_45= 'If' otherlv_46= 'We' otherlv_47= 'Demolish' ( (lv_no_of_buildings_48_0= RULE_INT ) ) otherlv_49= 'Buildings' (otherlv_50= 'Of' otherlv_51= 'Dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) )? otherlv_57= 'In' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) )
                    {
                    otherlv_40=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_40, grammarAccess.getFindtempDemolishAccess().getWhatKeyword_2_0());
                      			
                    }
                    otherlv_41=(Token)match(input,38,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_41, grammarAccess.getFindtempDemolishAccess().getWillKeyword_2_1());
                      			
                    }
                    otherlv_42=(Token)match(input,39,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getFindtempDemolishAccess().getBeKeyword_2_2());
                      			
                    }
                    otherlv_43=(Token)match(input,40,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_43, grammarAccess.getFindtempDemolishAccess().getTheKeyword_2_3());
                      			
                    }
                    otherlv_44=(Token)match(input,41,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_44, grammarAccess.getFindtempDemolishAccess().getTemperatureKeyword_2_4());
                      			
                    }
                    otherlv_45=(Token)match(input,42,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_45, grammarAccess.getFindtempDemolishAccess().getIfKeyword_2_5());
                      			
                    }
                    otherlv_46=(Token)match(input,43,FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_46, grammarAccess.getFindtempDemolishAccess().getWeKeyword_2_6());
                      			
                    }
                    otherlv_47=(Token)match(input,93,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_47, grammarAccess.getFindtempDemolishAccess().getDemolishKeyword_2_7());
                      			
                    }
                    // InternalMycnl.g:2945:4: ( (lv_no_of_buildings_48_0= RULE_INT ) )
                    // InternalMycnl.g:2946:5: (lv_no_of_buildings_48_0= RULE_INT )
                    {
                    // InternalMycnl.g:2946:5: (lv_no_of_buildings_48_0= RULE_INT )
                    // InternalMycnl.g:2947:6: lv_no_of_buildings_48_0= RULE_INT
                    {
                    lv_no_of_buildings_48_0=(Token)match(input,RULE_INT,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_buildings_48_0, grammarAccess.getFindtempDemolishAccess().getNo_of_buildingsINTTerminalRuleCall_2_8_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempDemolishRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_buildings",
                      							lv_no_of_buildings_48_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_49=(Token)match(input,45,FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_49, grammarAccess.getFindtempDemolishAccess().getBuildingsKeyword_2_9());
                      			
                    }
                    // InternalMycnl.g:2967:4: (otherlv_50= 'Of' otherlv_51= 'Dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) ) )?
                    int alt9=2;
                    int LA9_0 = input.LA(1);

                    if ( (LA9_0==19) ) {
                        alt9=1;
                    }
                    switch (alt9) {
                        case 1 :
                            // InternalMycnl.g:2968:5: otherlv_50= 'Of' otherlv_51= 'Dimensions' ( (lv_length_52_0= RULE_INT ) ) otherlv_53= 'x' ( (lv_breadth_54_0= RULE_INT ) ) otherlv_55= 'x' ( (lv_height_56_0= RULE_INT ) )
                            {
                            otherlv_50=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_50, grammarAccess.getFindtempDemolishAccess().getOfKeyword_2_10_0());
                              				
                            }
                            otherlv_51=(Token)match(input,46,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_51, grammarAccess.getFindtempDemolishAccess().getDimensionsKeyword_2_10_1());
                              				
                            }
                            // InternalMycnl.g:2976:5: ( (lv_length_52_0= RULE_INT ) )
                            // InternalMycnl.g:2977:6: (lv_length_52_0= RULE_INT )
                            {
                            // InternalMycnl.g:2977:6: (lv_length_52_0= RULE_INT )
                            // InternalMycnl.g:2978:7: lv_length_52_0= RULE_INT
                            {
                            lv_length_52_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_length_52_0, grammarAccess.getFindtempDemolishAccess().getLengthINTTerminalRuleCall_2_10_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getFindtempDemolishRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"length",
                              								lv_length_52_0,
                              								"org.eclipse.xtext.xbase.Xbase.INT");
                              						
                            }

                            }


                            }

                            otherlv_53=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_53, grammarAccess.getFindtempDemolishAccess().getXKeyword_2_10_3());
                              				
                            }
                            // InternalMycnl.g:2998:5: ( (lv_breadth_54_0= RULE_INT ) )
                            // InternalMycnl.g:2999:6: (lv_breadth_54_0= RULE_INT )
                            {
                            // InternalMycnl.g:2999:6: (lv_breadth_54_0= RULE_INT )
                            // InternalMycnl.g:3000:7: lv_breadth_54_0= RULE_INT
                            {
                            lv_breadth_54_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_breadth_54_0, grammarAccess.getFindtempDemolishAccess().getBreadthINTTerminalRuleCall_2_10_4_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getFindtempDemolishRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"breadth",
                              								lv_breadth_54_0,
                              								"org.eclipse.xtext.xbase.Xbase.INT");
                              						
                            }

                            }


                            }

                            otherlv_55=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_55, grammarAccess.getFindtempDemolishAccess().getXKeyword_2_10_5());
                              				
                            }
                            // InternalMycnl.g:3020:5: ( (lv_height_56_0= RULE_INT ) )
                            // InternalMycnl.g:3021:6: (lv_height_56_0= RULE_INT )
                            {
                            // InternalMycnl.g:3021:6: (lv_height_56_0= RULE_INT )
                            // InternalMycnl.g:3022:7: lv_height_56_0= RULE_INT
                            {
                            lv_height_56_0=(Token)match(input,RULE_INT,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_height_56_0, grammarAccess.getFindtempDemolishAccess().getHeightINTTerminalRuleCall_2_10_6_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getFindtempDemolishRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"height",
                              								lv_height_56_0,
                              								"org.eclipse.xtext.xbase.Xbase.INT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_57=(Token)match(input,47,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_57, grammarAccess.getFindtempDemolishAccess().getInKeyword_2_11());
                      			
                    }
                    otherlv_58=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_58, grammarAccess.getFindtempDemolishAccess().getRegionKeyword_2_12());
                      			
                    }
                    // InternalMycnl.g:3047:4: ( (lv_region_59_0= RULE_INT ) )
                    // InternalMycnl.g:3048:5: (lv_region_59_0= RULE_INT )
                    {
                    // InternalMycnl.g:3048:5: (lv_region_59_0= RULE_INT )
                    // InternalMycnl.g:3049:6: lv_region_59_0= RULE_INT
                    {
                    lv_region_59_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_59_0, grammarAccess.getFindtempDemolishAccess().getRegionINTTerminalRuleCall_2_13_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempDemolishRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_59_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalMycnl.g:3067:3: (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'TEMPERATURE' otherlv_65= 'IF' otherlv_66= 'WE' otherlv_67= 'DEMOLISH' ( (lv_no_of_buildings_68_0= RULE_INT ) ) otherlv_69= 'BUILDINGS' (otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) )? otherlv_77= 'IN' otherlv_78= 'REGION' ( (lv_region_79_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:3067:3: (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'TEMPERATURE' otherlv_65= 'IF' otherlv_66= 'WE' otherlv_67= 'DEMOLISH' ( (lv_no_of_buildings_68_0= RULE_INT ) ) otherlv_69= 'BUILDINGS' (otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) )? otherlv_77= 'IN' otherlv_78= 'REGION' ( (lv_region_79_0= RULE_INT ) ) )
                    // InternalMycnl.g:3068:4: otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'TEMPERATURE' otherlv_65= 'IF' otherlv_66= 'WE' otherlv_67= 'DEMOLISH' ( (lv_no_of_buildings_68_0= RULE_INT ) ) otherlv_69= 'BUILDINGS' (otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) )? otherlv_77= 'IN' otherlv_78= 'REGION' ( (lv_region_79_0= RULE_INT ) )
                    {
                    otherlv_60=(Token)match(input,48,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_60, grammarAccess.getFindtempDemolishAccess().getWHATKeyword_3_0());
                      			
                    }
                    otherlv_61=(Token)match(input,49,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_61, grammarAccess.getFindtempDemolishAccess().getWILLKeyword_3_1());
                      			
                    }
                    otherlv_62=(Token)match(input,50,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_62, grammarAccess.getFindtempDemolishAccess().getBEKeyword_3_2());
                      			
                    }
                    otherlv_63=(Token)match(input,51,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_63, grammarAccess.getFindtempDemolishAccess().getTHEKeyword_3_3());
                      			
                    }
                    otherlv_64=(Token)match(input,52,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_64, grammarAccess.getFindtempDemolishAccess().getTEMPERATUREKeyword_3_4());
                      			
                    }
                    otherlv_65=(Token)match(input,53,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_65, grammarAccess.getFindtempDemolishAccess().getIFKeyword_3_5());
                      			
                    }
                    otherlv_66=(Token)match(input,54,FOLLOW_79); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_66, grammarAccess.getFindtempDemolishAccess().getWEKeyword_3_6());
                      			
                    }
                    otherlv_67=(Token)match(input,94,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_67, grammarAccess.getFindtempDemolishAccess().getDEMOLISHKeyword_3_7());
                      			
                    }
                    // InternalMycnl.g:3100:4: ( (lv_no_of_buildings_68_0= RULE_INT ) )
                    // InternalMycnl.g:3101:5: (lv_no_of_buildings_68_0= RULE_INT )
                    {
                    // InternalMycnl.g:3101:5: (lv_no_of_buildings_68_0= RULE_INT )
                    // InternalMycnl.g:3102:6: lv_no_of_buildings_68_0= RULE_INT
                    {
                    lv_no_of_buildings_68_0=(Token)match(input,RULE_INT,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_buildings_68_0, grammarAccess.getFindtempDemolishAccess().getNo_of_buildingsINTTerminalRuleCall_3_8_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempDemolishRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_buildings",
                      							lv_no_of_buildings_68_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_69=(Token)match(input,56,FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_69, grammarAccess.getFindtempDemolishAccess().getBUILDINGSKeyword_3_9());
                      			
                    }
                    // InternalMycnl.g:3122:4: (otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) ) )?
                    int alt10=2;
                    int LA10_0 = input.LA(1);

                    if ( (LA10_0==23) ) {
                        alt10=1;
                    }
                    switch (alt10) {
                        case 1 :
                            // InternalMycnl.g:3123:5: otherlv_70= 'OF' otherlv_71= 'DIMENSIONS' ( (lv_length_72_0= RULE_INT ) ) otherlv_73= 'x' ( (lv_breadth_74_0= RULE_INT ) ) otherlv_75= 'x' ( (lv_height_76_0= RULE_INT ) )
                            {
                            otherlv_70=(Token)match(input,23,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_70, grammarAccess.getFindtempDemolishAccess().getOFKeyword_3_10_0());
                              				
                            }
                            otherlv_71=(Token)match(input,57,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_71, grammarAccess.getFindtempDemolishAccess().getDIMENSIONSKeyword_3_10_1());
                              				
                            }
                            // InternalMycnl.g:3131:5: ( (lv_length_72_0= RULE_INT ) )
                            // InternalMycnl.g:3132:6: (lv_length_72_0= RULE_INT )
                            {
                            // InternalMycnl.g:3132:6: (lv_length_72_0= RULE_INT )
                            // InternalMycnl.g:3133:7: lv_length_72_0= RULE_INT
                            {
                            lv_length_72_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_length_72_0, grammarAccess.getFindtempDemolishAccess().getLengthINTTerminalRuleCall_3_10_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getFindtempDemolishRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"length",
                              								lv_length_72_0,
                              								"org.eclipse.xtext.xbase.Xbase.INT");
                              						
                            }

                            }


                            }

                            otherlv_73=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_73, grammarAccess.getFindtempDemolishAccess().getXKeyword_3_10_3());
                              				
                            }
                            // InternalMycnl.g:3153:5: ( (lv_breadth_74_0= RULE_INT ) )
                            // InternalMycnl.g:3154:6: (lv_breadth_74_0= RULE_INT )
                            {
                            // InternalMycnl.g:3154:6: (lv_breadth_74_0= RULE_INT )
                            // InternalMycnl.g:3155:7: lv_breadth_74_0= RULE_INT
                            {
                            lv_breadth_74_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_breadth_74_0, grammarAccess.getFindtempDemolishAccess().getBreadthINTTerminalRuleCall_3_10_4_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getFindtempDemolishRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"breadth",
                              								lv_breadth_74_0,
                              								"org.eclipse.xtext.xbase.Xbase.INT");
                              						
                            }

                            }


                            }

                            otherlv_75=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_75, grammarAccess.getFindtempDemolishAccess().getXKeyword_3_10_5());
                              				
                            }
                            // InternalMycnl.g:3175:5: ( (lv_height_76_0= RULE_INT ) )
                            // InternalMycnl.g:3176:6: (lv_height_76_0= RULE_INT )
                            {
                            // InternalMycnl.g:3176:6: (lv_height_76_0= RULE_INT )
                            // InternalMycnl.g:3177:7: lv_height_76_0= RULE_INT
                            {
                            lv_height_76_0=(Token)match(input,RULE_INT,FOLLOW_44); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_height_76_0, grammarAccess.getFindtempDemolishAccess().getHeightINTTerminalRuleCall_3_10_6_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getFindtempDemolishRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"height",
                              								lv_height_76_0,
                              								"org.eclipse.xtext.xbase.Xbase.INT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_77=(Token)match(input,58,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_77, grammarAccess.getFindtempDemolishAccess().getINKeyword_3_11());
                      			
                    }
                    otherlv_78=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_78, grammarAccess.getFindtempDemolishAccess().getREGIONKeyword_3_12());
                      			
                    }
                    // InternalMycnl.g:3202:4: ( (lv_region_79_0= RULE_INT ) )
                    // InternalMycnl.g:3203:5: (lv_region_79_0= RULE_INT )
                    {
                    // InternalMycnl.g:3203:5: (lv_region_79_0= RULE_INT )
                    // InternalMycnl.g:3204:6: lv_region_79_0= RULE_INT
                    {
                    lv_region_79_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_79_0, grammarAccess.getFindtempDemolishAccess().getRegionINTTerminalRuleCall_3_13_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempDemolishRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_79_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalMycnl.g:3222:3: (otherlv_80= 'What' otherlv_81= 'Will' otherlv_82= 'be' otherlv_83= 'the' otherlv_84= 'Temperature' otherlv_85= 'if' otherlv_86= 'we' otherlv_87= 'Demolish' ( (lv_no_of_buildings_88_0= RULE_INT ) ) otherlv_89= 'Buildings' (otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) )? otherlv_97= 'in' otherlv_98= 'Region' ( (lv_region_99_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:3222:3: (otherlv_80= 'What' otherlv_81= 'Will' otherlv_82= 'be' otherlv_83= 'the' otherlv_84= 'Temperature' otherlv_85= 'if' otherlv_86= 'we' otherlv_87= 'Demolish' ( (lv_no_of_buildings_88_0= RULE_INT ) ) otherlv_89= 'Buildings' (otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) )? otherlv_97= 'in' otherlv_98= 'Region' ( (lv_region_99_0= RULE_INT ) ) )
                    // InternalMycnl.g:3223:4: otherlv_80= 'What' otherlv_81= 'Will' otherlv_82= 'be' otherlv_83= 'the' otherlv_84= 'Temperature' otherlv_85= 'if' otherlv_86= 'we' otherlv_87= 'Demolish' ( (lv_no_of_buildings_88_0= RULE_INT ) ) otherlv_89= 'Buildings' (otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) )? otherlv_97= 'in' otherlv_98= 'Region' ( (lv_region_99_0= RULE_INT ) )
                    {
                    otherlv_80=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_80, grammarAccess.getFindtempDemolishAccess().getWhatKeyword_4_0());
                      			
                    }
                    otherlv_81=(Token)match(input,38,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_81, grammarAccess.getFindtempDemolishAccess().getWillKeyword_4_1());
                      			
                    }
                    otherlv_82=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_82, grammarAccess.getFindtempDemolishAccess().getBeKeyword_4_2());
                      			
                    }
                    otherlv_83=(Token)match(input,28,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_83, grammarAccess.getFindtempDemolishAccess().getTheKeyword_4_3());
                      			
                    }
                    otherlv_84=(Token)match(input,41,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_84, grammarAccess.getFindtempDemolishAccess().getTemperatureKeyword_4_4());
                      			
                    }
                    otherlv_85=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_85, grammarAccess.getFindtempDemolishAccess().getIfKeyword_4_5());
                      			
                    }
                    otherlv_86=(Token)match(input,31,FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_86, grammarAccess.getFindtempDemolishAccess().getWeKeyword_4_6());
                      			
                    }
                    otherlv_87=(Token)match(input,93,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_87, grammarAccess.getFindtempDemolishAccess().getDemolishKeyword_4_7());
                      			
                    }
                    // InternalMycnl.g:3255:4: ( (lv_no_of_buildings_88_0= RULE_INT ) )
                    // InternalMycnl.g:3256:5: (lv_no_of_buildings_88_0= RULE_INT )
                    {
                    // InternalMycnl.g:3256:5: (lv_no_of_buildings_88_0= RULE_INT )
                    // InternalMycnl.g:3257:6: lv_no_of_buildings_88_0= RULE_INT
                    {
                    lv_no_of_buildings_88_0=(Token)match(input,RULE_INT,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_buildings_88_0, grammarAccess.getFindtempDemolishAccess().getNo_of_buildingsINTTerminalRuleCall_4_8_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempDemolishRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_buildings",
                      							lv_no_of_buildings_88_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_89=(Token)match(input,45,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_89, grammarAccess.getFindtempDemolishAccess().getBuildingsKeyword_4_9());
                      			
                    }
                    // InternalMycnl.g:3277:4: (otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) ) )?
                    int alt11=2;
                    int LA11_0 = input.LA(1);

                    if ( (LA11_0==15) ) {
                        alt11=1;
                    }
                    switch (alt11) {
                        case 1 :
                            // InternalMycnl.g:3278:5: otherlv_90= 'of' otherlv_91= 'Dimensions' ( (lv_length_92_0= RULE_INT ) ) otherlv_93= 'x' ( (lv_breadth_94_0= RULE_INT ) ) otherlv_95= 'x' ( (lv_height_96_0= RULE_INT ) )
                            {
                            otherlv_90=(Token)match(input,15,FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_90, grammarAccess.getFindtempDemolishAccess().getOfKeyword_4_10_0());
                              				
                            }
                            otherlv_91=(Token)match(input,46,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_91, grammarAccess.getFindtempDemolishAccess().getDimensionsKeyword_4_10_1());
                              				
                            }
                            // InternalMycnl.g:3286:5: ( (lv_length_92_0= RULE_INT ) )
                            // InternalMycnl.g:3287:6: (lv_length_92_0= RULE_INT )
                            {
                            // InternalMycnl.g:3287:6: (lv_length_92_0= RULE_INT )
                            // InternalMycnl.g:3288:7: lv_length_92_0= RULE_INT
                            {
                            lv_length_92_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_length_92_0, grammarAccess.getFindtempDemolishAccess().getLengthINTTerminalRuleCall_4_10_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getFindtempDemolishRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"length",
                              								lv_length_92_0,
                              								"org.eclipse.xtext.xbase.Xbase.INT");
                              						
                            }

                            }


                            }

                            otherlv_93=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_93, grammarAccess.getFindtempDemolishAccess().getXKeyword_4_10_3());
                              				
                            }
                            // InternalMycnl.g:3308:5: ( (lv_breadth_94_0= RULE_INT ) )
                            // InternalMycnl.g:3309:6: (lv_breadth_94_0= RULE_INT )
                            {
                            // InternalMycnl.g:3309:6: (lv_breadth_94_0= RULE_INT )
                            // InternalMycnl.g:3310:7: lv_breadth_94_0= RULE_INT
                            {
                            lv_breadth_94_0=(Token)match(input,RULE_INT,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_breadth_94_0, grammarAccess.getFindtempDemolishAccess().getBreadthINTTerminalRuleCall_4_10_4_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getFindtempDemolishRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"breadth",
                              								lv_breadth_94_0,
                              								"org.eclipse.xtext.xbase.Xbase.INT");
                              						
                            }

                            }


                            }

                            otherlv_95=(Token)match(input,35,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_95, grammarAccess.getFindtempDemolishAccess().getXKeyword_4_10_5());
                              				
                            }
                            // InternalMycnl.g:3330:5: ( (lv_height_96_0= RULE_INT ) )
                            // InternalMycnl.g:3331:6: (lv_height_96_0= RULE_INT )
                            {
                            // InternalMycnl.g:3331:6: (lv_height_96_0= RULE_INT )
                            // InternalMycnl.g:3332:7: lv_height_96_0= RULE_INT
                            {
                            lv_height_96_0=(Token)match(input,RULE_INT,FOLLOW_24); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_height_96_0, grammarAccess.getFindtempDemolishAccess().getHeightINTTerminalRuleCall_4_10_6_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getFindtempDemolishRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"height",
                              								lv_height_96_0,
                              								"org.eclipse.xtext.xbase.Xbase.INT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_97=(Token)match(input,36,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_97, grammarAccess.getFindtempDemolishAccess().getInKeyword_4_11());
                      			
                    }
                    otherlv_98=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_98, grammarAccess.getFindtempDemolishAccess().getRegionKeyword_4_12());
                      			
                    }
                    // InternalMycnl.g:3357:4: ( (lv_region_99_0= RULE_INT ) )
                    // InternalMycnl.g:3358:5: (lv_region_99_0= RULE_INT )
                    {
                    // InternalMycnl.g:3358:5: (lv_region_99_0= RULE_INT )
                    // InternalMycnl.g:3359:6: lv_region_99_0= RULE_INT
                    {
                    lv_region_99_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_99_0, grammarAccess.getFindtempDemolishAccess().getRegionINTTerminalRuleCall_4_13_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempDemolishRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_99_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefindtempDemolish"


    // $ANTLR start "entryRulefindtempPlantTrees"
    // InternalMycnl.g:3380:1: entryRulefindtempPlantTrees returns [EObject current=null] : iv_rulefindtempPlantTrees= rulefindtempPlantTrees EOF ;
    public final EObject entryRulefindtempPlantTrees() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefindtempPlantTrees = null;


        try {
            // InternalMycnl.g:3380:59: (iv_rulefindtempPlantTrees= rulefindtempPlantTrees EOF )
            // InternalMycnl.g:3381:2: iv_rulefindtempPlantTrees= rulefindtempPlantTrees EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFindtempPlantTreesRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefindtempPlantTrees=rulefindtempPlantTrees();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefindtempPlantTrees; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefindtempPlantTrees"


    // $ANTLR start "rulefindtempPlantTrees"
    // InternalMycnl.g:3387:1: rulefindtempPlantTrees returns [EObject current=null] : ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'plant' ( (lv_no_of_trees_8_0= RULE_INT ) ) otherlv_9= 'trees' otherlv_10= 'in' otherlv_11= 'region' ( (lv_region_12_0= RULE_INT ) ) ) | (otherlv_13= 'What' otherlv_14= 'will' otherlv_15= 'be' otherlv_16= 'the' otherlv_17= 'temperature' otherlv_18= 'if' otherlv_19= 'we' otherlv_20= 'plant' ( (lv_no_of_trees_21_0= RULE_INT ) ) otherlv_22= 'trees' otherlv_23= 'in' otherlv_24= 'region' ( (lv_region_25_0= RULE_INT ) ) ) | (otherlv_26= 'What' otherlv_27= 'Will' otherlv_28= 'Be' otherlv_29= 'The' otherlv_30= 'Temperature' otherlv_31= 'If' otherlv_32= 'We' otherlv_33= 'Plant' ( (lv_no_of_trees_34_0= RULE_INT ) ) otherlv_35= 'Trees' otherlv_36= 'In' otherlv_37= 'Region' ( (lv_region_38_0= RULE_INT ) ) ) | (otherlv_39= 'WHAT' otherlv_40= 'WILL' otherlv_41= 'BE' otherlv_42= 'THE' otherlv_43= 'TEMPERATURE' otherlv_44= 'IF' otherlv_45= 'WE' otherlv_46= 'PLANT' ( (lv_no_of_trees_47_0= RULE_INT ) ) otherlv_48= 'TREES' otherlv_49= 'IN' otherlv_50= 'REGION' ( (lv_region_51_0= RULE_INT ) ) ) | (otherlv_52= 'What' otherlv_53= 'Will' otherlv_54= 'be' otherlv_55= 'the' otherlv_56= 'Temperature' otherlv_57= 'if' otherlv_58= 'we' otherlv_59= 'Plant' ( (lv_no_of_trees_60_0= RULE_INT ) ) otherlv_61= 'Trees' otherlv_62= 'in' otherlv_63= 'Region' ( (lv_region_64_0= RULE_INT ) ) ) ) ;
    public final EObject rulefindtempPlantTrees() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token lv_no_of_trees_8_0=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token lv_region_12_0=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token lv_no_of_trees_21_0=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token lv_region_25_0=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token lv_no_of_trees_34_0=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token lv_region_38_0=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token lv_no_of_trees_47_0=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token otherlv_50=null;
        Token lv_region_51_0=null;
        Token otherlv_52=null;
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_55=null;
        Token otherlv_56=null;
        Token otherlv_57=null;
        Token otherlv_58=null;
        Token otherlv_59=null;
        Token lv_no_of_trees_60_0=null;
        Token otherlv_61=null;
        Token otherlv_62=null;
        Token otherlv_63=null;
        Token lv_region_64_0=null;


        	enterRule();

        try {
            // InternalMycnl.g:3393:2: ( ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'plant' ( (lv_no_of_trees_8_0= RULE_INT ) ) otherlv_9= 'trees' otherlv_10= 'in' otherlv_11= 'region' ( (lv_region_12_0= RULE_INT ) ) ) | (otherlv_13= 'What' otherlv_14= 'will' otherlv_15= 'be' otherlv_16= 'the' otherlv_17= 'temperature' otherlv_18= 'if' otherlv_19= 'we' otherlv_20= 'plant' ( (lv_no_of_trees_21_0= RULE_INT ) ) otherlv_22= 'trees' otherlv_23= 'in' otherlv_24= 'region' ( (lv_region_25_0= RULE_INT ) ) ) | (otherlv_26= 'What' otherlv_27= 'Will' otherlv_28= 'Be' otherlv_29= 'The' otherlv_30= 'Temperature' otherlv_31= 'If' otherlv_32= 'We' otherlv_33= 'Plant' ( (lv_no_of_trees_34_0= RULE_INT ) ) otherlv_35= 'Trees' otherlv_36= 'In' otherlv_37= 'Region' ( (lv_region_38_0= RULE_INT ) ) ) | (otherlv_39= 'WHAT' otherlv_40= 'WILL' otherlv_41= 'BE' otherlv_42= 'THE' otherlv_43= 'TEMPERATURE' otherlv_44= 'IF' otherlv_45= 'WE' otherlv_46= 'PLANT' ( (lv_no_of_trees_47_0= RULE_INT ) ) otherlv_48= 'TREES' otherlv_49= 'IN' otherlv_50= 'REGION' ( (lv_region_51_0= RULE_INT ) ) ) | (otherlv_52= 'What' otherlv_53= 'Will' otherlv_54= 'be' otherlv_55= 'the' otherlv_56= 'Temperature' otherlv_57= 'if' otherlv_58= 'we' otherlv_59= 'Plant' ( (lv_no_of_trees_60_0= RULE_INT ) ) otherlv_61= 'Trees' otherlv_62= 'in' otherlv_63= 'Region' ( (lv_region_64_0= RULE_INT ) ) ) ) )
            // InternalMycnl.g:3394:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'plant' ( (lv_no_of_trees_8_0= RULE_INT ) ) otherlv_9= 'trees' otherlv_10= 'in' otherlv_11= 'region' ( (lv_region_12_0= RULE_INT ) ) ) | (otherlv_13= 'What' otherlv_14= 'will' otherlv_15= 'be' otherlv_16= 'the' otherlv_17= 'temperature' otherlv_18= 'if' otherlv_19= 'we' otherlv_20= 'plant' ( (lv_no_of_trees_21_0= RULE_INT ) ) otherlv_22= 'trees' otherlv_23= 'in' otherlv_24= 'region' ( (lv_region_25_0= RULE_INT ) ) ) | (otherlv_26= 'What' otherlv_27= 'Will' otherlv_28= 'Be' otherlv_29= 'The' otherlv_30= 'Temperature' otherlv_31= 'If' otherlv_32= 'We' otherlv_33= 'Plant' ( (lv_no_of_trees_34_0= RULE_INT ) ) otherlv_35= 'Trees' otherlv_36= 'In' otherlv_37= 'Region' ( (lv_region_38_0= RULE_INT ) ) ) | (otherlv_39= 'WHAT' otherlv_40= 'WILL' otherlv_41= 'BE' otherlv_42= 'THE' otherlv_43= 'TEMPERATURE' otherlv_44= 'IF' otherlv_45= 'WE' otherlv_46= 'PLANT' ( (lv_no_of_trees_47_0= RULE_INT ) ) otherlv_48= 'TREES' otherlv_49= 'IN' otherlv_50= 'REGION' ( (lv_region_51_0= RULE_INT ) ) ) | (otherlv_52= 'What' otherlv_53= 'Will' otherlv_54= 'be' otherlv_55= 'the' otherlv_56= 'Temperature' otherlv_57= 'if' otherlv_58= 'we' otherlv_59= 'Plant' ( (lv_no_of_trees_60_0= RULE_INT ) ) otherlv_61= 'Trees' otherlv_62= 'in' otherlv_63= 'Region' ( (lv_region_64_0= RULE_INT ) ) ) )
            {
            // InternalMycnl.g:3394:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'plant' ( (lv_no_of_trees_8_0= RULE_INT ) ) otherlv_9= 'trees' otherlv_10= 'in' otherlv_11= 'region' ( (lv_region_12_0= RULE_INT ) ) ) | (otherlv_13= 'What' otherlv_14= 'will' otherlv_15= 'be' otherlv_16= 'the' otherlv_17= 'temperature' otherlv_18= 'if' otherlv_19= 'we' otherlv_20= 'plant' ( (lv_no_of_trees_21_0= RULE_INT ) ) otherlv_22= 'trees' otherlv_23= 'in' otherlv_24= 'region' ( (lv_region_25_0= RULE_INT ) ) ) | (otherlv_26= 'What' otherlv_27= 'Will' otherlv_28= 'Be' otherlv_29= 'The' otherlv_30= 'Temperature' otherlv_31= 'If' otherlv_32= 'We' otherlv_33= 'Plant' ( (lv_no_of_trees_34_0= RULE_INT ) ) otherlv_35= 'Trees' otherlv_36= 'In' otherlv_37= 'Region' ( (lv_region_38_0= RULE_INT ) ) ) | (otherlv_39= 'WHAT' otherlv_40= 'WILL' otherlv_41= 'BE' otherlv_42= 'THE' otherlv_43= 'TEMPERATURE' otherlv_44= 'IF' otherlv_45= 'WE' otherlv_46= 'PLANT' ( (lv_no_of_trees_47_0= RULE_INT ) ) otherlv_48= 'TREES' otherlv_49= 'IN' otherlv_50= 'REGION' ( (lv_region_51_0= RULE_INT ) ) ) | (otherlv_52= 'What' otherlv_53= 'Will' otherlv_54= 'be' otherlv_55= 'the' otherlv_56= 'Temperature' otherlv_57= 'if' otherlv_58= 'we' otherlv_59= 'Plant' ( (lv_no_of_trees_60_0= RULE_INT ) ) otherlv_61= 'Trees' otherlv_62= 'in' otherlv_63= 'Region' ( (lv_region_64_0= RULE_INT ) ) ) )
            int alt13=5;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt13=1;
                }
                break;
            case 37:
                {
                int LA13_2 = input.LA(2);

                if ( (LA13_2==38) ) {
                    int LA13_4 = input.LA(3);

                    if ( (LA13_4==27) ) {
                        alt13=5;
                    }
                    else if ( (LA13_4==39) ) {
                        alt13=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 13, 4, input);

                        throw nvae;
                    }
                }
                else if ( (LA13_2==26) ) {
                    alt13=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 13, 2, input);

                    throw nvae;
                }
                }
                break;
            case 48:
                {
                alt13=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalMycnl.g:3395:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'plant' ( (lv_no_of_trees_8_0= RULE_INT ) ) otherlv_9= 'trees' otherlv_10= 'in' otherlv_11= 'region' ( (lv_region_12_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:3395:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'plant' ( (lv_no_of_trees_8_0= RULE_INT ) ) otherlv_9= 'trees' otherlv_10= 'in' otherlv_11= 'region' ( (lv_region_12_0= RULE_INT ) ) )
                    // InternalMycnl.g:3396:4: otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'plant' ( (lv_no_of_trees_8_0= RULE_INT ) ) otherlv_9= 'trees' otherlv_10= 'in' otherlv_11= 'region' ( (lv_region_12_0= RULE_INT ) )
                    {
                    otherlv_0=(Token)match(input,25,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFindtempPlantTreesAccess().getWhatKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getFindtempPlantTreesAccess().getWillKeyword_0_1());
                      			
                    }
                    otherlv_2=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getFindtempPlantTreesAccess().getBeKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,28,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getFindtempPlantTreesAccess().getTheKeyword_0_3());
                      			
                    }
                    otherlv_4=(Token)match(input,29,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getFindtempPlantTreesAccess().getTemperatureKeyword_0_4());
                      			
                    }
                    otherlv_5=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getFindtempPlantTreesAccess().getIfKeyword_0_5());
                      			
                    }
                    otherlv_6=(Token)match(input,31,FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getFindtempPlantTreesAccess().getWeKeyword_0_6());
                      			
                    }
                    otherlv_7=(Token)match(input,95,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getFindtempPlantTreesAccess().getPlantKeyword_0_7());
                      			
                    }
                    // InternalMycnl.g:3428:4: ( (lv_no_of_trees_8_0= RULE_INT ) )
                    // InternalMycnl.g:3429:5: (lv_no_of_trees_8_0= RULE_INT )
                    {
                    // InternalMycnl.g:3429:5: (lv_no_of_trees_8_0= RULE_INT )
                    // InternalMycnl.g:3430:6: lv_no_of_trees_8_0= RULE_INT
                    {
                    lv_no_of_trees_8_0=(Token)match(input,RULE_INT,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_trees_8_0, grammarAccess.getFindtempPlantTreesAccess().getNo_of_treesINTTerminalRuleCall_0_8_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempPlantTreesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_trees",
                      							lv_no_of_trees_8_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,61,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getFindtempPlantTreesAccess().getTreesKeyword_0_9());
                      			
                    }
                    otherlv_10=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getFindtempPlantTreesAccess().getInKeyword_0_10());
                      			
                    }
                    otherlv_11=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getFindtempPlantTreesAccess().getRegionKeyword_0_11());
                      			
                    }
                    // InternalMycnl.g:3458:4: ( (lv_region_12_0= RULE_INT ) )
                    // InternalMycnl.g:3459:5: (lv_region_12_0= RULE_INT )
                    {
                    // InternalMycnl.g:3459:5: (lv_region_12_0= RULE_INT )
                    // InternalMycnl.g:3460:6: lv_region_12_0= RULE_INT
                    {
                    lv_region_12_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_12_0, grammarAccess.getFindtempPlantTreesAccess().getRegionINTTerminalRuleCall_0_12_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempPlantTreesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_12_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:3478:3: (otherlv_13= 'What' otherlv_14= 'will' otherlv_15= 'be' otherlv_16= 'the' otherlv_17= 'temperature' otherlv_18= 'if' otherlv_19= 'we' otherlv_20= 'plant' ( (lv_no_of_trees_21_0= RULE_INT ) ) otherlv_22= 'trees' otherlv_23= 'in' otherlv_24= 'region' ( (lv_region_25_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:3478:3: (otherlv_13= 'What' otherlv_14= 'will' otherlv_15= 'be' otherlv_16= 'the' otherlv_17= 'temperature' otherlv_18= 'if' otherlv_19= 'we' otherlv_20= 'plant' ( (lv_no_of_trees_21_0= RULE_INT ) ) otherlv_22= 'trees' otherlv_23= 'in' otherlv_24= 'region' ( (lv_region_25_0= RULE_INT ) ) )
                    // InternalMycnl.g:3479:4: otherlv_13= 'What' otherlv_14= 'will' otherlv_15= 'be' otherlv_16= 'the' otherlv_17= 'temperature' otherlv_18= 'if' otherlv_19= 'we' otherlv_20= 'plant' ( (lv_no_of_trees_21_0= RULE_INT ) ) otherlv_22= 'trees' otherlv_23= 'in' otherlv_24= 'region' ( (lv_region_25_0= RULE_INT ) )
                    {
                    otherlv_13=(Token)match(input,37,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getFindtempPlantTreesAccess().getWhatKeyword_1_0());
                      			
                    }
                    otherlv_14=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getFindtempPlantTreesAccess().getWillKeyword_1_1());
                      			
                    }
                    otherlv_15=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getFindtempPlantTreesAccess().getBeKeyword_1_2());
                      			
                    }
                    otherlv_16=(Token)match(input,28,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getFindtempPlantTreesAccess().getTheKeyword_1_3());
                      			
                    }
                    otherlv_17=(Token)match(input,29,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getFindtempPlantTreesAccess().getTemperatureKeyword_1_4());
                      			
                    }
                    otherlv_18=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getFindtempPlantTreesAccess().getIfKeyword_1_5());
                      			
                    }
                    otherlv_19=(Token)match(input,31,FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getFindtempPlantTreesAccess().getWeKeyword_1_6());
                      			
                    }
                    otherlv_20=(Token)match(input,95,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getFindtempPlantTreesAccess().getPlantKeyword_1_7());
                      			
                    }
                    // InternalMycnl.g:3511:4: ( (lv_no_of_trees_21_0= RULE_INT ) )
                    // InternalMycnl.g:3512:5: (lv_no_of_trees_21_0= RULE_INT )
                    {
                    // InternalMycnl.g:3512:5: (lv_no_of_trees_21_0= RULE_INT )
                    // InternalMycnl.g:3513:6: lv_no_of_trees_21_0= RULE_INT
                    {
                    lv_no_of_trees_21_0=(Token)match(input,RULE_INT,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_trees_21_0, grammarAccess.getFindtempPlantTreesAccess().getNo_of_treesINTTerminalRuleCall_1_8_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempPlantTreesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_trees",
                      							lv_no_of_trees_21_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_22=(Token)match(input,61,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getFindtempPlantTreesAccess().getTreesKeyword_1_9());
                      			
                    }
                    otherlv_23=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getFindtempPlantTreesAccess().getInKeyword_1_10());
                      			
                    }
                    otherlv_24=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_24, grammarAccess.getFindtempPlantTreesAccess().getRegionKeyword_1_11());
                      			
                    }
                    // InternalMycnl.g:3541:4: ( (lv_region_25_0= RULE_INT ) )
                    // InternalMycnl.g:3542:5: (lv_region_25_0= RULE_INT )
                    {
                    // InternalMycnl.g:3542:5: (lv_region_25_0= RULE_INT )
                    // InternalMycnl.g:3543:6: lv_region_25_0= RULE_INT
                    {
                    lv_region_25_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_25_0, grammarAccess.getFindtempPlantTreesAccess().getRegionINTTerminalRuleCall_1_12_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempPlantTreesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_25_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalMycnl.g:3561:3: (otherlv_26= 'What' otherlv_27= 'Will' otherlv_28= 'Be' otherlv_29= 'The' otherlv_30= 'Temperature' otherlv_31= 'If' otherlv_32= 'We' otherlv_33= 'Plant' ( (lv_no_of_trees_34_0= RULE_INT ) ) otherlv_35= 'Trees' otherlv_36= 'In' otherlv_37= 'Region' ( (lv_region_38_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:3561:3: (otherlv_26= 'What' otherlv_27= 'Will' otherlv_28= 'Be' otherlv_29= 'The' otherlv_30= 'Temperature' otherlv_31= 'If' otherlv_32= 'We' otherlv_33= 'Plant' ( (lv_no_of_trees_34_0= RULE_INT ) ) otherlv_35= 'Trees' otherlv_36= 'In' otherlv_37= 'Region' ( (lv_region_38_0= RULE_INT ) ) )
                    // InternalMycnl.g:3562:4: otherlv_26= 'What' otherlv_27= 'Will' otherlv_28= 'Be' otherlv_29= 'The' otherlv_30= 'Temperature' otherlv_31= 'If' otherlv_32= 'We' otherlv_33= 'Plant' ( (lv_no_of_trees_34_0= RULE_INT ) ) otherlv_35= 'Trees' otherlv_36= 'In' otherlv_37= 'Region' ( (lv_region_38_0= RULE_INT ) )
                    {
                    otherlv_26=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getFindtempPlantTreesAccess().getWhatKeyword_2_0());
                      			
                    }
                    otherlv_27=(Token)match(input,38,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_27, grammarAccess.getFindtempPlantTreesAccess().getWillKeyword_2_1());
                      			
                    }
                    otherlv_28=(Token)match(input,39,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getFindtempPlantTreesAccess().getBeKeyword_2_2());
                      			
                    }
                    otherlv_29=(Token)match(input,40,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_29, grammarAccess.getFindtempPlantTreesAccess().getTheKeyword_2_3());
                      			
                    }
                    otherlv_30=(Token)match(input,41,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_30, grammarAccess.getFindtempPlantTreesAccess().getTemperatureKeyword_2_4());
                      			
                    }
                    otherlv_31=(Token)match(input,42,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getFindtempPlantTreesAccess().getIfKeyword_2_5());
                      			
                    }
                    otherlv_32=(Token)match(input,43,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_32, grammarAccess.getFindtempPlantTreesAccess().getWeKeyword_2_6());
                      			
                    }
                    otherlv_33=(Token)match(input,96,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_33, grammarAccess.getFindtempPlantTreesAccess().getPlantKeyword_2_7());
                      			
                    }
                    // InternalMycnl.g:3594:4: ( (lv_no_of_trees_34_0= RULE_INT ) )
                    // InternalMycnl.g:3595:5: (lv_no_of_trees_34_0= RULE_INT )
                    {
                    // InternalMycnl.g:3595:5: (lv_no_of_trees_34_0= RULE_INT )
                    // InternalMycnl.g:3596:6: lv_no_of_trees_34_0= RULE_INT
                    {
                    lv_no_of_trees_34_0=(Token)match(input,RULE_INT,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_trees_34_0, grammarAccess.getFindtempPlantTreesAccess().getNo_of_treesINTTerminalRuleCall_2_8_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempPlantTreesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_trees",
                      							lv_no_of_trees_34_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_35=(Token)match(input,66,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_35, grammarAccess.getFindtempPlantTreesAccess().getTreesKeyword_2_9());
                      			
                    }
                    otherlv_36=(Token)match(input,47,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_36, grammarAccess.getFindtempPlantTreesAccess().getInKeyword_2_10());
                      			
                    }
                    otherlv_37=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_37, grammarAccess.getFindtempPlantTreesAccess().getRegionKeyword_2_11());
                      			
                    }
                    // InternalMycnl.g:3624:4: ( (lv_region_38_0= RULE_INT ) )
                    // InternalMycnl.g:3625:5: (lv_region_38_0= RULE_INT )
                    {
                    // InternalMycnl.g:3625:5: (lv_region_38_0= RULE_INT )
                    // InternalMycnl.g:3626:6: lv_region_38_0= RULE_INT
                    {
                    lv_region_38_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_38_0, grammarAccess.getFindtempPlantTreesAccess().getRegionINTTerminalRuleCall_2_12_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempPlantTreesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_38_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalMycnl.g:3644:3: (otherlv_39= 'WHAT' otherlv_40= 'WILL' otherlv_41= 'BE' otherlv_42= 'THE' otherlv_43= 'TEMPERATURE' otherlv_44= 'IF' otherlv_45= 'WE' otherlv_46= 'PLANT' ( (lv_no_of_trees_47_0= RULE_INT ) ) otherlv_48= 'TREES' otherlv_49= 'IN' otherlv_50= 'REGION' ( (lv_region_51_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:3644:3: (otherlv_39= 'WHAT' otherlv_40= 'WILL' otherlv_41= 'BE' otherlv_42= 'THE' otherlv_43= 'TEMPERATURE' otherlv_44= 'IF' otherlv_45= 'WE' otherlv_46= 'PLANT' ( (lv_no_of_trees_47_0= RULE_INT ) ) otherlv_48= 'TREES' otherlv_49= 'IN' otherlv_50= 'REGION' ( (lv_region_51_0= RULE_INT ) ) )
                    // InternalMycnl.g:3645:4: otherlv_39= 'WHAT' otherlv_40= 'WILL' otherlv_41= 'BE' otherlv_42= 'THE' otherlv_43= 'TEMPERATURE' otherlv_44= 'IF' otherlv_45= 'WE' otherlv_46= 'PLANT' ( (lv_no_of_trees_47_0= RULE_INT ) ) otherlv_48= 'TREES' otherlv_49= 'IN' otherlv_50= 'REGION' ( (lv_region_51_0= RULE_INT ) )
                    {
                    otherlv_39=(Token)match(input,48,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_39, grammarAccess.getFindtempPlantTreesAccess().getWHATKeyword_3_0());
                      			
                    }
                    otherlv_40=(Token)match(input,49,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_40, grammarAccess.getFindtempPlantTreesAccess().getWILLKeyword_3_1());
                      			
                    }
                    otherlv_41=(Token)match(input,50,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_41, grammarAccess.getFindtempPlantTreesAccess().getBEKeyword_3_2());
                      			
                    }
                    otherlv_42=(Token)match(input,51,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getFindtempPlantTreesAccess().getTHEKeyword_3_3());
                      			
                    }
                    otherlv_43=(Token)match(input,52,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_43, grammarAccess.getFindtempPlantTreesAccess().getTEMPERATUREKeyword_3_4());
                      			
                    }
                    otherlv_44=(Token)match(input,53,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_44, grammarAccess.getFindtempPlantTreesAccess().getIFKeyword_3_5());
                      			
                    }
                    otherlv_45=(Token)match(input,54,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_45, grammarAccess.getFindtempPlantTreesAccess().getWEKeyword_3_6());
                      			
                    }
                    otherlv_46=(Token)match(input,97,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_46, grammarAccess.getFindtempPlantTreesAccess().getPLANTKeyword_3_7());
                      			
                    }
                    // InternalMycnl.g:3677:4: ( (lv_no_of_trees_47_0= RULE_INT ) )
                    // InternalMycnl.g:3678:5: (lv_no_of_trees_47_0= RULE_INT )
                    {
                    // InternalMycnl.g:3678:5: (lv_no_of_trees_47_0= RULE_INT )
                    // InternalMycnl.g:3679:6: lv_no_of_trees_47_0= RULE_INT
                    {
                    lv_no_of_trees_47_0=(Token)match(input,RULE_INT,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_trees_47_0, grammarAccess.getFindtempPlantTreesAccess().getNo_of_treesINTTerminalRuleCall_3_8_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempPlantTreesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_trees",
                      							lv_no_of_trees_47_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_48=(Token)match(input,71,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getFindtempPlantTreesAccess().getTREESKeyword_3_9());
                      			
                    }
                    otherlv_49=(Token)match(input,58,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_49, grammarAccess.getFindtempPlantTreesAccess().getINKeyword_3_10());
                      			
                    }
                    otherlv_50=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_50, grammarAccess.getFindtempPlantTreesAccess().getREGIONKeyword_3_11());
                      			
                    }
                    // InternalMycnl.g:3707:4: ( (lv_region_51_0= RULE_INT ) )
                    // InternalMycnl.g:3708:5: (lv_region_51_0= RULE_INT )
                    {
                    // InternalMycnl.g:3708:5: (lv_region_51_0= RULE_INT )
                    // InternalMycnl.g:3709:6: lv_region_51_0= RULE_INT
                    {
                    lv_region_51_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_51_0, grammarAccess.getFindtempPlantTreesAccess().getRegionINTTerminalRuleCall_3_12_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempPlantTreesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_51_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalMycnl.g:3727:3: (otherlv_52= 'What' otherlv_53= 'Will' otherlv_54= 'be' otherlv_55= 'the' otherlv_56= 'Temperature' otherlv_57= 'if' otherlv_58= 'we' otherlv_59= 'Plant' ( (lv_no_of_trees_60_0= RULE_INT ) ) otherlv_61= 'Trees' otherlv_62= 'in' otherlv_63= 'Region' ( (lv_region_64_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:3727:3: (otherlv_52= 'What' otherlv_53= 'Will' otherlv_54= 'be' otherlv_55= 'the' otherlv_56= 'Temperature' otherlv_57= 'if' otherlv_58= 'we' otherlv_59= 'Plant' ( (lv_no_of_trees_60_0= RULE_INT ) ) otherlv_61= 'Trees' otherlv_62= 'in' otherlv_63= 'Region' ( (lv_region_64_0= RULE_INT ) ) )
                    // InternalMycnl.g:3728:4: otherlv_52= 'What' otherlv_53= 'Will' otherlv_54= 'be' otherlv_55= 'the' otherlv_56= 'Temperature' otherlv_57= 'if' otherlv_58= 'we' otherlv_59= 'Plant' ( (lv_no_of_trees_60_0= RULE_INT ) ) otherlv_61= 'Trees' otherlv_62= 'in' otherlv_63= 'Region' ( (lv_region_64_0= RULE_INT ) )
                    {
                    otherlv_52=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_52, grammarAccess.getFindtempPlantTreesAccess().getWhatKeyword_4_0());
                      			
                    }
                    otherlv_53=(Token)match(input,38,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_53, grammarAccess.getFindtempPlantTreesAccess().getWillKeyword_4_1());
                      			
                    }
                    otherlv_54=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_54, grammarAccess.getFindtempPlantTreesAccess().getBeKeyword_4_2());
                      			
                    }
                    otherlv_55=(Token)match(input,28,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_55, grammarAccess.getFindtempPlantTreesAccess().getTheKeyword_4_3());
                      			
                    }
                    otherlv_56=(Token)match(input,41,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_56, grammarAccess.getFindtempPlantTreesAccess().getTemperatureKeyword_4_4());
                      			
                    }
                    otherlv_57=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_57, grammarAccess.getFindtempPlantTreesAccess().getIfKeyword_4_5());
                      			
                    }
                    otherlv_58=(Token)match(input,31,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_58, grammarAccess.getFindtempPlantTreesAccess().getWeKeyword_4_6());
                      			
                    }
                    otherlv_59=(Token)match(input,96,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_59, grammarAccess.getFindtempPlantTreesAccess().getPlantKeyword_4_7());
                      			
                    }
                    // InternalMycnl.g:3760:4: ( (lv_no_of_trees_60_0= RULE_INT ) )
                    // InternalMycnl.g:3761:5: (lv_no_of_trees_60_0= RULE_INT )
                    {
                    // InternalMycnl.g:3761:5: (lv_no_of_trees_60_0= RULE_INT )
                    // InternalMycnl.g:3762:6: lv_no_of_trees_60_0= RULE_INT
                    {
                    lv_no_of_trees_60_0=(Token)match(input,RULE_INT,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_trees_60_0, grammarAccess.getFindtempPlantTreesAccess().getNo_of_treesINTTerminalRuleCall_4_8_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempPlantTreesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_trees",
                      							lv_no_of_trees_60_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_61=(Token)match(input,66,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_61, grammarAccess.getFindtempPlantTreesAccess().getTreesKeyword_4_9());
                      			
                    }
                    otherlv_62=(Token)match(input,36,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_62, grammarAccess.getFindtempPlantTreesAccess().getInKeyword_4_10());
                      			
                    }
                    otherlv_63=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_63, grammarAccess.getFindtempPlantTreesAccess().getRegionKeyword_4_11());
                      			
                    }
                    // InternalMycnl.g:3790:4: ( (lv_region_64_0= RULE_INT ) )
                    // InternalMycnl.g:3791:5: (lv_region_64_0= RULE_INT )
                    {
                    // InternalMycnl.g:3791:5: (lv_region_64_0= RULE_INT )
                    // InternalMycnl.g:3792:6: lv_region_64_0= RULE_INT
                    {
                    lv_region_64_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_64_0, grammarAccess.getFindtempPlantTreesAccess().getRegionINTTerminalRuleCall_4_12_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempPlantTreesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_64_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefindtempPlantTrees"


    // $ANTLR start "entryRulefindtempCutTrees"
    // InternalMycnl.g:3813:1: entryRulefindtempCutTrees returns [EObject current=null] : iv_rulefindtempCutTrees= rulefindtempCutTrees EOF ;
    public final EObject entryRulefindtempCutTrees() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefindtempCutTrees = null;


        try {
            // InternalMycnl.g:3813:57: (iv_rulefindtempCutTrees= rulefindtempCutTrees EOF )
            // InternalMycnl.g:3814:2: iv_rulefindtempCutTrees= rulefindtempCutTrees EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFindtempCutTreesRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefindtempCutTrees=rulefindtempCutTrees();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefindtempCutTrees; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefindtempCutTrees"


    // $ANTLR start "rulefindtempCutTrees"
    // InternalMycnl.g:3820:1: rulefindtempCutTrees returns [EObject current=null] : ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'cut' ( (lv_no_of_trees_8_0= RULE_INT ) ) otherlv_9= 'trees' otherlv_10= 'in' otherlv_11= 'region' ( (lv_region_12_0= RULE_INT ) ) ) | (otherlv_13= 'What' otherlv_14= 'will' otherlv_15= 'be' otherlv_16= 'the' otherlv_17= 'temperature' otherlv_18= 'if' otherlv_19= 'we' otherlv_20= 'cut' ( (lv_no_of_trees_21_0= RULE_INT ) ) otherlv_22= 'trees' otherlv_23= 'in' otherlv_24= 'region' ( (lv_region_25_0= RULE_INT ) ) ) | (otherlv_26= 'What' otherlv_27= 'Will' otherlv_28= 'Be' otherlv_29= 'The' otherlv_30= 'Temperature' otherlv_31= 'If' otherlv_32= 'We' otherlv_33= 'Cut' ( (lv_no_of_trees_34_0= RULE_INT ) ) otherlv_35= 'Trees' otherlv_36= 'In' otherlv_37= 'Region' ( (lv_region_38_0= RULE_INT ) ) ) | (otherlv_39= 'WHAT' otherlv_40= 'WILL' otherlv_41= 'BE' otherlv_42= 'THE' otherlv_43= 'TEMPERATURE' otherlv_44= 'IF' otherlv_45= 'WE' otherlv_46= 'CUT' ( (lv_no_of_trees_47_0= RULE_INT ) ) otherlv_48= 'TREES' otherlv_49= 'in' otherlv_50= 'REGION' ( (lv_region_51_0= RULE_INT ) ) ) | (otherlv_52= 'What' otherlv_53= 'Will' otherlv_54= 'be' otherlv_55= 'the' otherlv_56= 'Temperature' otherlv_57= 'if' otherlv_58= 'we' otherlv_59= 'Cut' ( (lv_no_of_trees_60_0= RULE_INT ) ) otherlv_61= 'Trees' otherlv_62= 'in' otherlv_63= 'Region' ( (lv_region_64_0= RULE_INT ) ) ) ) ;
    public final EObject rulefindtempCutTrees() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token lv_no_of_trees_8_0=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token lv_region_12_0=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token lv_no_of_trees_21_0=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token lv_region_25_0=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token lv_no_of_trees_34_0=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token lv_region_38_0=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token lv_no_of_trees_47_0=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token otherlv_50=null;
        Token lv_region_51_0=null;
        Token otherlv_52=null;
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_55=null;
        Token otherlv_56=null;
        Token otherlv_57=null;
        Token otherlv_58=null;
        Token otherlv_59=null;
        Token lv_no_of_trees_60_0=null;
        Token otherlv_61=null;
        Token otherlv_62=null;
        Token otherlv_63=null;
        Token lv_region_64_0=null;


        	enterRule();

        try {
            // InternalMycnl.g:3826:2: ( ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'cut' ( (lv_no_of_trees_8_0= RULE_INT ) ) otherlv_9= 'trees' otherlv_10= 'in' otherlv_11= 'region' ( (lv_region_12_0= RULE_INT ) ) ) | (otherlv_13= 'What' otherlv_14= 'will' otherlv_15= 'be' otherlv_16= 'the' otherlv_17= 'temperature' otherlv_18= 'if' otherlv_19= 'we' otherlv_20= 'cut' ( (lv_no_of_trees_21_0= RULE_INT ) ) otherlv_22= 'trees' otherlv_23= 'in' otherlv_24= 'region' ( (lv_region_25_0= RULE_INT ) ) ) | (otherlv_26= 'What' otherlv_27= 'Will' otherlv_28= 'Be' otherlv_29= 'The' otherlv_30= 'Temperature' otherlv_31= 'If' otherlv_32= 'We' otherlv_33= 'Cut' ( (lv_no_of_trees_34_0= RULE_INT ) ) otherlv_35= 'Trees' otherlv_36= 'In' otherlv_37= 'Region' ( (lv_region_38_0= RULE_INT ) ) ) | (otherlv_39= 'WHAT' otherlv_40= 'WILL' otherlv_41= 'BE' otherlv_42= 'THE' otherlv_43= 'TEMPERATURE' otherlv_44= 'IF' otherlv_45= 'WE' otherlv_46= 'CUT' ( (lv_no_of_trees_47_0= RULE_INT ) ) otherlv_48= 'TREES' otherlv_49= 'in' otherlv_50= 'REGION' ( (lv_region_51_0= RULE_INT ) ) ) | (otherlv_52= 'What' otherlv_53= 'Will' otherlv_54= 'be' otherlv_55= 'the' otherlv_56= 'Temperature' otherlv_57= 'if' otherlv_58= 'we' otherlv_59= 'Cut' ( (lv_no_of_trees_60_0= RULE_INT ) ) otherlv_61= 'Trees' otherlv_62= 'in' otherlv_63= 'Region' ( (lv_region_64_0= RULE_INT ) ) ) ) )
            // InternalMycnl.g:3827:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'cut' ( (lv_no_of_trees_8_0= RULE_INT ) ) otherlv_9= 'trees' otherlv_10= 'in' otherlv_11= 'region' ( (lv_region_12_0= RULE_INT ) ) ) | (otherlv_13= 'What' otherlv_14= 'will' otherlv_15= 'be' otherlv_16= 'the' otherlv_17= 'temperature' otherlv_18= 'if' otherlv_19= 'we' otherlv_20= 'cut' ( (lv_no_of_trees_21_0= RULE_INT ) ) otherlv_22= 'trees' otherlv_23= 'in' otherlv_24= 'region' ( (lv_region_25_0= RULE_INT ) ) ) | (otherlv_26= 'What' otherlv_27= 'Will' otherlv_28= 'Be' otherlv_29= 'The' otherlv_30= 'Temperature' otherlv_31= 'If' otherlv_32= 'We' otherlv_33= 'Cut' ( (lv_no_of_trees_34_0= RULE_INT ) ) otherlv_35= 'Trees' otherlv_36= 'In' otherlv_37= 'Region' ( (lv_region_38_0= RULE_INT ) ) ) | (otherlv_39= 'WHAT' otherlv_40= 'WILL' otherlv_41= 'BE' otherlv_42= 'THE' otherlv_43= 'TEMPERATURE' otherlv_44= 'IF' otherlv_45= 'WE' otherlv_46= 'CUT' ( (lv_no_of_trees_47_0= RULE_INT ) ) otherlv_48= 'TREES' otherlv_49= 'in' otherlv_50= 'REGION' ( (lv_region_51_0= RULE_INT ) ) ) | (otherlv_52= 'What' otherlv_53= 'Will' otherlv_54= 'be' otherlv_55= 'the' otherlv_56= 'Temperature' otherlv_57= 'if' otherlv_58= 'we' otherlv_59= 'Cut' ( (lv_no_of_trees_60_0= RULE_INT ) ) otherlv_61= 'Trees' otherlv_62= 'in' otherlv_63= 'Region' ( (lv_region_64_0= RULE_INT ) ) ) )
            {
            // InternalMycnl.g:3827:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'cut' ( (lv_no_of_trees_8_0= RULE_INT ) ) otherlv_9= 'trees' otherlv_10= 'in' otherlv_11= 'region' ( (lv_region_12_0= RULE_INT ) ) ) | (otherlv_13= 'What' otherlv_14= 'will' otherlv_15= 'be' otherlv_16= 'the' otherlv_17= 'temperature' otherlv_18= 'if' otherlv_19= 'we' otherlv_20= 'cut' ( (lv_no_of_trees_21_0= RULE_INT ) ) otherlv_22= 'trees' otherlv_23= 'in' otherlv_24= 'region' ( (lv_region_25_0= RULE_INT ) ) ) | (otherlv_26= 'What' otherlv_27= 'Will' otherlv_28= 'Be' otherlv_29= 'The' otherlv_30= 'Temperature' otherlv_31= 'If' otherlv_32= 'We' otherlv_33= 'Cut' ( (lv_no_of_trees_34_0= RULE_INT ) ) otherlv_35= 'Trees' otherlv_36= 'In' otherlv_37= 'Region' ( (lv_region_38_0= RULE_INT ) ) ) | (otherlv_39= 'WHAT' otherlv_40= 'WILL' otherlv_41= 'BE' otherlv_42= 'THE' otherlv_43= 'TEMPERATURE' otherlv_44= 'IF' otherlv_45= 'WE' otherlv_46= 'CUT' ( (lv_no_of_trees_47_0= RULE_INT ) ) otherlv_48= 'TREES' otherlv_49= 'in' otherlv_50= 'REGION' ( (lv_region_51_0= RULE_INT ) ) ) | (otherlv_52= 'What' otherlv_53= 'Will' otherlv_54= 'be' otherlv_55= 'the' otherlv_56= 'Temperature' otherlv_57= 'if' otherlv_58= 'we' otherlv_59= 'Cut' ( (lv_no_of_trees_60_0= RULE_INT ) ) otherlv_61= 'Trees' otherlv_62= 'in' otherlv_63= 'Region' ( (lv_region_64_0= RULE_INT ) ) ) )
            int alt14=5;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt14=1;
                }
                break;
            case 37:
                {
                int LA14_2 = input.LA(2);

                if ( (LA14_2==38) ) {
                    int LA14_4 = input.LA(3);

                    if ( (LA14_4==27) ) {
                        alt14=5;
                    }
                    else if ( (LA14_4==39) ) {
                        alt14=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 14, 4, input);

                        throw nvae;
                    }
                }
                else if ( (LA14_2==26) ) {
                    alt14=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 14, 2, input);

                    throw nvae;
                }
                }
                break;
            case 48:
                {
                alt14=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }

            switch (alt14) {
                case 1 :
                    // InternalMycnl.g:3828:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'cut' ( (lv_no_of_trees_8_0= RULE_INT ) ) otherlv_9= 'trees' otherlv_10= 'in' otherlv_11= 'region' ( (lv_region_12_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:3828:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'cut' ( (lv_no_of_trees_8_0= RULE_INT ) ) otherlv_9= 'trees' otherlv_10= 'in' otherlv_11= 'region' ( (lv_region_12_0= RULE_INT ) ) )
                    // InternalMycnl.g:3829:4: otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'cut' ( (lv_no_of_trees_8_0= RULE_INT ) ) otherlv_9= 'trees' otherlv_10= 'in' otherlv_11= 'region' ( (lv_region_12_0= RULE_INT ) )
                    {
                    otherlv_0=(Token)match(input,25,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFindtempCutTreesAccess().getWhatKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getFindtempCutTreesAccess().getWillKeyword_0_1());
                      			
                    }
                    otherlv_2=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getFindtempCutTreesAccess().getBeKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,28,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getFindtempCutTreesAccess().getTheKeyword_0_3());
                      			
                    }
                    otherlv_4=(Token)match(input,29,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getFindtempCutTreesAccess().getTemperatureKeyword_0_4());
                      			
                    }
                    otherlv_5=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getFindtempCutTreesAccess().getIfKeyword_0_5());
                      			
                    }
                    otherlv_6=(Token)match(input,31,FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getFindtempCutTreesAccess().getWeKeyword_0_6());
                      			
                    }
                    otherlv_7=(Token)match(input,98,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getFindtempCutTreesAccess().getCutKeyword_0_7());
                      			
                    }
                    // InternalMycnl.g:3861:4: ( (lv_no_of_trees_8_0= RULE_INT ) )
                    // InternalMycnl.g:3862:5: (lv_no_of_trees_8_0= RULE_INT )
                    {
                    // InternalMycnl.g:3862:5: (lv_no_of_trees_8_0= RULE_INT )
                    // InternalMycnl.g:3863:6: lv_no_of_trees_8_0= RULE_INT
                    {
                    lv_no_of_trees_8_0=(Token)match(input,RULE_INT,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_trees_8_0, grammarAccess.getFindtempCutTreesAccess().getNo_of_treesINTTerminalRuleCall_0_8_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempCutTreesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_trees",
                      							lv_no_of_trees_8_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,61,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getFindtempCutTreesAccess().getTreesKeyword_0_9());
                      			
                    }
                    otherlv_10=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getFindtempCutTreesAccess().getInKeyword_0_10());
                      			
                    }
                    otherlv_11=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getFindtempCutTreesAccess().getRegionKeyword_0_11());
                      			
                    }
                    // InternalMycnl.g:3891:4: ( (lv_region_12_0= RULE_INT ) )
                    // InternalMycnl.g:3892:5: (lv_region_12_0= RULE_INT )
                    {
                    // InternalMycnl.g:3892:5: (lv_region_12_0= RULE_INT )
                    // InternalMycnl.g:3893:6: lv_region_12_0= RULE_INT
                    {
                    lv_region_12_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_12_0, grammarAccess.getFindtempCutTreesAccess().getRegionINTTerminalRuleCall_0_12_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempCutTreesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_12_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:3911:3: (otherlv_13= 'What' otherlv_14= 'will' otherlv_15= 'be' otherlv_16= 'the' otherlv_17= 'temperature' otherlv_18= 'if' otherlv_19= 'we' otherlv_20= 'cut' ( (lv_no_of_trees_21_0= RULE_INT ) ) otherlv_22= 'trees' otherlv_23= 'in' otherlv_24= 'region' ( (lv_region_25_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:3911:3: (otherlv_13= 'What' otherlv_14= 'will' otherlv_15= 'be' otherlv_16= 'the' otherlv_17= 'temperature' otherlv_18= 'if' otherlv_19= 'we' otherlv_20= 'cut' ( (lv_no_of_trees_21_0= RULE_INT ) ) otherlv_22= 'trees' otherlv_23= 'in' otherlv_24= 'region' ( (lv_region_25_0= RULE_INT ) ) )
                    // InternalMycnl.g:3912:4: otherlv_13= 'What' otherlv_14= 'will' otherlv_15= 'be' otherlv_16= 'the' otherlv_17= 'temperature' otherlv_18= 'if' otherlv_19= 'we' otherlv_20= 'cut' ( (lv_no_of_trees_21_0= RULE_INT ) ) otherlv_22= 'trees' otherlv_23= 'in' otherlv_24= 'region' ( (lv_region_25_0= RULE_INT ) )
                    {
                    otherlv_13=(Token)match(input,37,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getFindtempCutTreesAccess().getWhatKeyword_1_0());
                      			
                    }
                    otherlv_14=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getFindtempCutTreesAccess().getWillKeyword_1_1());
                      			
                    }
                    otherlv_15=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getFindtempCutTreesAccess().getBeKeyword_1_2());
                      			
                    }
                    otherlv_16=(Token)match(input,28,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getFindtempCutTreesAccess().getTheKeyword_1_3());
                      			
                    }
                    otherlv_17=(Token)match(input,29,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getFindtempCutTreesAccess().getTemperatureKeyword_1_4());
                      			
                    }
                    otherlv_18=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getFindtempCutTreesAccess().getIfKeyword_1_5());
                      			
                    }
                    otherlv_19=(Token)match(input,31,FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getFindtempCutTreesAccess().getWeKeyword_1_6());
                      			
                    }
                    otherlv_20=(Token)match(input,98,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getFindtempCutTreesAccess().getCutKeyword_1_7());
                      			
                    }
                    // InternalMycnl.g:3944:4: ( (lv_no_of_trees_21_0= RULE_INT ) )
                    // InternalMycnl.g:3945:5: (lv_no_of_trees_21_0= RULE_INT )
                    {
                    // InternalMycnl.g:3945:5: (lv_no_of_trees_21_0= RULE_INT )
                    // InternalMycnl.g:3946:6: lv_no_of_trees_21_0= RULE_INT
                    {
                    lv_no_of_trees_21_0=(Token)match(input,RULE_INT,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_trees_21_0, grammarAccess.getFindtempCutTreesAccess().getNo_of_treesINTTerminalRuleCall_1_8_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempCutTreesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_trees",
                      							lv_no_of_trees_21_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_22=(Token)match(input,61,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getFindtempCutTreesAccess().getTreesKeyword_1_9());
                      			
                    }
                    otherlv_23=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getFindtempCutTreesAccess().getInKeyword_1_10());
                      			
                    }
                    otherlv_24=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_24, grammarAccess.getFindtempCutTreesAccess().getRegionKeyword_1_11());
                      			
                    }
                    // InternalMycnl.g:3974:4: ( (lv_region_25_0= RULE_INT ) )
                    // InternalMycnl.g:3975:5: (lv_region_25_0= RULE_INT )
                    {
                    // InternalMycnl.g:3975:5: (lv_region_25_0= RULE_INT )
                    // InternalMycnl.g:3976:6: lv_region_25_0= RULE_INT
                    {
                    lv_region_25_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_25_0, grammarAccess.getFindtempCutTreesAccess().getRegionINTTerminalRuleCall_1_12_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempCutTreesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_25_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalMycnl.g:3994:3: (otherlv_26= 'What' otherlv_27= 'Will' otherlv_28= 'Be' otherlv_29= 'The' otherlv_30= 'Temperature' otherlv_31= 'If' otherlv_32= 'We' otherlv_33= 'Cut' ( (lv_no_of_trees_34_0= RULE_INT ) ) otherlv_35= 'Trees' otherlv_36= 'In' otherlv_37= 'Region' ( (lv_region_38_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:3994:3: (otherlv_26= 'What' otherlv_27= 'Will' otherlv_28= 'Be' otherlv_29= 'The' otherlv_30= 'Temperature' otherlv_31= 'If' otherlv_32= 'We' otherlv_33= 'Cut' ( (lv_no_of_trees_34_0= RULE_INT ) ) otherlv_35= 'Trees' otherlv_36= 'In' otherlv_37= 'Region' ( (lv_region_38_0= RULE_INT ) ) )
                    // InternalMycnl.g:3995:4: otherlv_26= 'What' otherlv_27= 'Will' otherlv_28= 'Be' otherlv_29= 'The' otherlv_30= 'Temperature' otherlv_31= 'If' otherlv_32= 'We' otherlv_33= 'Cut' ( (lv_no_of_trees_34_0= RULE_INT ) ) otherlv_35= 'Trees' otherlv_36= 'In' otherlv_37= 'Region' ( (lv_region_38_0= RULE_INT ) )
                    {
                    otherlv_26=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getFindtempCutTreesAccess().getWhatKeyword_2_0());
                      			
                    }
                    otherlv_27=(Token)match(input,38,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_27, grammarAccess.getFindtempCutTreesAccess().getWillKeyword_2_1());
                      			
                    }
                    otherlv_28=(Token)match(input,39,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getFindtempCutTreesAccess().getBeKeyword_2_2());
                      			
                    }
                    otherlv_29=(Token)match(input,40,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_29, grammarAccess.getFindtempCutTreesAccess().getTheKeyword_2_3());
                      			
                    }
                    otherlv_30=(Token)match(input,41,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_30, grammarAccess.getFindtempCutTreesAccess().getTemperatureKeyword_2_4());
                      			
                    }
                    otherlv_31=(Token)match(input,42,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getFindtempCutTreesAccess().getIfKeyword_2_5());
                      			
                    }
                    otherlv_32=(Token)match(input,43,FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_32, grammarAccess.getFindtempCutTreesAccess().getWeKeyword_2_6());
                      			
                    }
                    otherlv_33=(Token)match(input,99,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_33, grammarAccess.getFindtempCutTreesAccess().getCutKeyword_2_7());
                      			
                    }
                    // InternalMycnl.g:4027:4: ( (lv_no_of_trees_34_0= RULE_INT ) )
                    // InternalMycnl.g:4028:5: (lv_no_of_trees_34_0= RULE_INT )
                    {
                    // InternalMycnl.g:4028:5: (lv_no_of_trees_34_0= RULE_INT )
                    // InternalMycnl.g:4029:6: lv_no_of_trees_34_0= RULE_INT
                    {
                    lv_no_of_trees_34_0=(Token)match(input,RULE_INT,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_trees_34_0, grammarAccess.getFindtempCutTreesAccess().getNo_of_treesINTTerminalRuleCall_2_8_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempCutTreesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_trees",
                      							lv_no_of_trees_34_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_35=(Token)match(input,66,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_35, grammarAccess.getFindtempCutTreesAccess().getTreesKeyword_2_9());
                      			
                    }
                    otherlv_36=(Token)match(input,47,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_36, grammarAccess.getFindtempCutTreesAccess().getInKeyword_2_10());
                      			
                    }
                    otherlv_37=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_37, grammarAccess.getFindtempCutTreesAccess().getRegionKeyword_2_11());
                      			
                    }
                    // InternalMycnl.g:4057:4: ( (lv_region_38_0= RULE_INT ) )
                    // InternalMycnl.g:4058:5: (lv_region_38_0= RULE_INT )
                    {
                    // InternalMycnl.g:4058:5: (lv_region_38_0= RULE_INT )
                    // InternalMycnl.g:4059:6: lv_region_38_0= RULE_INT
                    {
                    lv_region_38_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_38_0, grammarAccess.getFindtempCutTreesAccess().getRegionINTTerminalRuleCall_2_12_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempCutTreesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_38_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalMycnl.g:4077:3: (otherlv_39= 'WHAT' otherlv_40= 'WILL' otherlv_41= 'BE' otherlv_42= 'THE' otherlv_43= 'TEMPERATURE' otherlv_44= 'IF' otherlv_45= 'WE' otherlv_46= 'CUT' ( (lv_no_of_trees_47_0= RULE_INT ) ) otherlv_48= 'TREES' otherlv_49= 'in' otherlv_50= 'REGION' ( (lv_region_51_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:4077:3: (otherlv_39= 'WHAT' otherlv_40= 'WILL' otherlv_41= 'BE' otherlv_42= 'THE' otherlv_43= 'TEMPERATURE' otherlv_44= 'IF' otherlv_45= 'WE' otherlv_46= 'CUT' ( (lv_no_of_trees_47_0= RULE_INT ) ) otherlv_48= 'TREES' otherlv_49= 'in' otherlv_50= 'REGION' ( (lv_region_51_0= RULE_INT ) ) )
                    // InternalMycnl.g:4078:4: otherlv_39= 'WHAT' otherlv_40= 'WILL' otherlv_41= 'BE' otherlv_42= 'THE' otherlv_43= 'TEMPERATURE' otherlv_44= 'IF' otherlv_45= 'WE' otherlv_46= 'CUT' ( (lv_no_of_trees_47_0= RULE_INT ) ) otherlv_48= 'TREES' otherlv_49= 'in' otherlv_50= 'REGION' ( (lv_region_51_0= RULE_INT ) )
                    {
                    otherlv_39=(Token)match(input,48,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_39, grammarAccess.getFindtempCutTreesAccess().getWHATKeyword_3_0());
                      			
                    }
                    otherlv_40=(Token)match(input,49,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_40, grammarAccess.getFindtempCutTreesAccess().getWILLKeyword_3_1());
                      			
                    }
                    otherlv_41=(Token)match(input,50,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_41, grammarAccess.getFindtempCutTreesAccess().getBEKeyword_3_2());
                      			
                    }
                    otherlv_42=(Token)match(input,51,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getFindtempCutTreesAccess().getTHEKeyword_3_3());
                      			
                    }
                    otherlv_43=(Token)match(input,52,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_43, grammarAccess.getFindtempCutTreesAccess().getTEMPERATUREKeyword_3_4());
                      			
                    }
                    otherlv_44=(Token)match(input,53,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_44, grammarAccess.getFindtempCutTreesAccess().getIFKeyword_3_5());
                      			
                    }
                    otherlv_45=(Token)match(input,54,FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_45, grammarAccess.getFindtempCutTreesAccess().getWEKeyword_3_6());
                      			
                    }
                    otherlv_46=(Token)match(input,100,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_46, grammarAccess.getFindtempCutTreesAccess().getCUTKeyword_3_7());
                      			
                    }
                    // InternalMycnl.g:4110:4: ( (lv_no_of_trees_47_0= RULE_INT ) )
                    // InternalMycnl.g:4111:5: (lv_no_of_trees_47_0= RULE_INT )
                    {
                    // InternalMycnl.g:4111:5: (lv_no_of_trees_47_0= RULE_INT )
                    // InternalMycnl.g:4112:6: lv_no_of_trees_47_0= RULE_INT
                    {
                    lv_no_of_trees_47_0=(Token)match(input,RULE_INT,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_trees_47_0, grammarAccess.getFindtempCutTreesAccess().getNo_of_treesINTTerminalRuleCall_3_8_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempCutTreesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_trees",
                      							lv_no_of_trees_47_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_48=(Token)match(input,71,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getFindtempCutTreesAccess().getTREESKeyword_3_9());
                      			
                    }
                    otherlv_49=(Token)match(input,36,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_49, grammarAccess.getFindtempCutTreesAccess().getInKeyword_3_10());
                      			
                    }
                    otherlv_50=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_50, grammarAccess.getFindtempCutTreesAccess().getREGIONKeyword_3_11());
                      			
                    }
                    // InternalMycnl.g:4140:4: ( (lv_region_51_0= RULE_INT ) )
                    // InternalMycnl.g:4141:5: (lv_region_51_0= RULE_INT )
                    {
                    // InternalMycnl.g:4141:5: (lv_region_51_0= RULE_INT )
                    // InternalMycnl.g:4142:6: lv_region_51_0= RULE_INT
                    {
                    lv_region_51_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_51_0, grammarAccess.getFindtempCutTreesAccess().getRegionINTTerminalRuleCall_3_12_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempCutTreesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_51_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalMycnl.g:4160:3: (otherlv_52= 'What' otherlv_53= 'Will' otherlv_54= 'be' otherlv_55= 'the' otherlv_56= 'Temperature' otherlv_57= 'if' otherlv_58= 'we' otherlv_59= 'Cut' ( (lv_no_of_trees_60_0= RULE_INT ) ) otherlv_61= 'Trees' otherlv_62= 'in' otherlv_63= 'Region' ( (lv_region_64_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:4160:3: (otherlv_52= 'What' otherlv_53= 'Will' otherlv_54= 'be' otherlv_55= 'the' otherlv_56= 'Temperature' otherlv_57= 'if' otherlv_58= 'we' otherlv_59= 'Cut' ( (lv_no_of_trees_60_0= RULE_INT ) ) otherlv_61= 'Trees' otherlv_62= 'in' otherlv_63= 'Region' ( (lv_region_64_0= RULE_INT ) ) )
                    // InternalMycnl.g:4161:4: otherlv_52= 'What' otherlv_53= 'Will' otherlv_54= 'be' otherlv_55= 'the' otherlv_56= 'Temperature' otherlv_57= 'if' otherlv_58= 'we' otherlv_59= 'Cut' ( (lv_no_of_trees_60_0= RULE_INT ) ) otherlv_61= 'Trees' otherlv_62= 'in' otherlv_63= 'Region' ( (lv_region_64_0= RULE_INT ) )
                    {
                    otherlv_52=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_52, grammarAccess.getFindtempCutTreesAccess().getWhatKeyword_4_0());
                      			
                    }
                    otherlv_53=(Token)match(input,38,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_53, grammarAccess.getFindtempCutTreesAccess().getWillKeyword_4_1());
                      			
                    }
                    otherlv_54=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_54, grammarAccess.getFindtempCutTreesAccess().getBeKeyword_4_2());
                      			
                    }
                    otherlv_55=(Token)match(input,28,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_55, grammarAccess.getFindtempCutTreesAccess().getTheKeyword_4_3());
                      			
                    }
                    otherlv_56=(Token)match(input,41,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_56, grammarAccess.getFindtempCutTreesAccess().getTemperatureKeyword_4_4());
                      			
                    }
                    otherlv_57=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_57, grammarAccess.getFindtempCutTreesAccess().getIfKeyword_4_5());
                      			
                    }
                    otherlv_58=(Token)match(input,31,FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_58, grammarAccess.getFindtempCutTreesAccess().getWeKeyword_4_6());
                      			
                    }
                    otherlv_59=(Token)match(input,99,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_59, grammarAccess.getFindtempCutTreesAccess().getCutKeyword_4_7());
                      			
                    }
                    // InternalMycnl.g:4193:4: ( (lv_no_of_trees_60_0= RULE_INT ) )
                    // InternalMycnl.g:4194:5: (lv_no_of_trees_60_0= RULE_INT )
                    {
                    // InternalMycnl.g:4194:5: (lv_no_of_trees_60_0= RULE_INT )
                    // InternalMycnl.g:4195:6: lv_no_of_trees_60_0= RULE_INT
                    {
                    lv_no_of_trees_60_0=(Token)match(input,RULE_INT,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_trees_60_0, grammarAccess.getFindtempCutTreesAccess().getNo_of_treesINTTerminalRuleCall_4_8_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempCutTreesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_trees",
                      							lv_no_of_trees_60_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_61=(Token)match(input,66,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_61, grammarAccess.getFindtempCutTreesAccess().getTreesKeyword_4_9());
                      			
                    }
                    otherlv_62=(Token)match(input,36,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_62, grammarAccess.getFindtempCutTreesAccess().getInKeyword_4_10());
                      			
                    }
                    otherlv_63=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_63, grammarAccess.getFindtempCutTreesAccess().getRegionKeyword_4_11());
                      			
                    }
                    // InternalMycnl.g:4223:4: ( (lv_region_64_0= RULE_INT ) )
                    // InternalMycnl.g:4224:5: (lv_region_64_0= RULE_INT )
                    {
                    // InternalMycnl.g:4224:5: (lv_region_64_0= RULE_INT )
                    // InternalMycnl.g:4225:6: lv_region_64_0= RULE_INT
                    {
                    lv_region_64_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_64_0, grammarAccess.getFindtempCutTreesAccess().getRegionINTTerminalRuleCall_4_12_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempCutTreesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_64_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefindtempCutTrees"


    // $ANTLR start "entryRulefindtempPlantBushes"
    // InternalMycnl.g:4246:1: entryRulefindtempPlantBushes returns [EObject current=null] : iv_rulefindtempPlantBushes= rulefindtempPlantBushes EOF ;
    public final EObject entryRulefindtempPlantBushes() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefindtempPlantBushes = null;


        try {
            // InternalMycnl.g:4246:60: (iv_rulefindtempPlantBushes= rulefindtempPlantBushes EOF )
            // InternalMycnl.g:4247:2: iv_rulefindtempPlantBushes= rulefindtempPlantBushes EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFindtempPlantBushesRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefindtempPlantBushes=rulefindtempPlantBushes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefindtempPlantBushes; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefindtempPlantBushes"


    // $ANTLR start "rulefindtempPlantBushes"
    // InternalMycnl.g:4253:1: rulefindtempPlantBushes returns [EObject current=null] : ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'plant' otherlv_8= 'bushes' otherlv_9= 'in' ( (lv_area_10_0= RULE_INT ) ) otherlv_11= 'square' otherlv_12= 'meter' otherlv_13= 'area' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) ) | (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'plant' otherlv_25= 'bushes' otherlv_26= 'in' ( (lv_area_27_0= RULE_INT ) ) otherlv_28= 'square' otherlv_29= 'meter' otherlv_30= 'area' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) ) | (otherlv_34= 'What' otherlv_35= 'Will' otherlv_36= 'Be' otherlv_37= 'The' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Plant' otherlv_42= 'Bushes' otherlv_43= 'In' ( (lv_area_44_0= RULE_INT ) ) otherlv_45= 'Square' otherlv_46= 'Meter' otherlv_47= 'Area' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) ) | (otherlv_51= 'What' otherlv_52= 'Will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Plant' otherlv_59= 'Bushes' otherlv_60= 'in' ( (lv_area_61_0= RULE_INT ) ) otherlv_62= 'Square' otherlv_63= 'Meter' otherlv_64= 'Area' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) ) | (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'PLANT' otherlv_76= 'BUSHES' otherlv_77= 'IN' ( (lv_area_78_0= RULE_INT ) ) otherlv_79= 'SQUARE' otherlv_80= 'METER' otherlv_81= 'AREA' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) ) ) ;
    public final EObject rulefindtempPlantBushes() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token lv_area_10_0=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token lv_region_16_0=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token lv_area_27_0=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token lv_region_33_0=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token lv_area_44_0=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token otherlv_47=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token lv_region_50_0=null;
        Token otherlv_51=null;
        Token otherlv_52=null;
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_55=null;
        Token otherlv_56=null;
        Token otherlv_57=null;
        Token otherlv_58=null;
        Token otherlv_59=null;
        Token otherlv_60=null;
        Token lv_area_61_0=null;
        Token otherlv_62=null;
        Token otherlv_63=null;
        Token otherlv_64=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token lv_region_67_0=null;
        Token otherlv_68=null;
        Token otherlv_69=null;
        Token otherlv_70=null;
        Token otherlv_71=null;
        Token otherlv_72=null;
        Token otherlv_73=null;
        Token otherlv_74=null;
        Token otherlv_75=null;
        Token otherlv_76=null;
        Token otherlv_77=null;
        Token lv_area_78_0=null;
        Token otherlv_79=null;
        Token otherlv_80=null;
        Token otherlv_81=null;
        Token otherlv_82=null;
        Token otherlv_83=null;
        Token lv_region_84_0=null;


        	enterRule();

        try {
            // InternalMycnl.g:4259:2: ( ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'plant' otherlv_8= 'bushes' otherlv_9= 'in' ( (lv_area_10_0= RULE_INT ) ) otherlv_11= 'square' otherlv_12= 'meter' otherlv_13= 'area' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) ) | (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'plant' otherlv_25= 'bushes' otherlv_26= 'in' ( (lv_area_27_0= RULE_INT ) ) otherlv_28= 'square' otherlv_29= 'meter' otherlv_30= 'area' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) ) | (otherlv_34= 'What' otherlv_35= 'Will' otherlv_36= 'Be' otherlv_37= 'The' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Plant' otherlv_42= 'Bushes' otherlv_43= 'In' ( (lv_area_44_0= RULE_INT ) ) otherlv_45= 'Square' otherlv_46= 'Meter' otherlv_47= 'Area' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) ) | (otherlv_51= 'What' otherlv_52= 'Will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Plant' otherlv_59= 'Bushes' otherlv_60= 'in' ( (lv_area_61_0= RULE_INT ) ) otherlv_62= 'Square' otherlv_63= 'Meter' otherlv_64= 'Area' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) ) | (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'PLANT' otherlv_76= 'BUSHES' otherlv_77= 'IN' ( (lv_area_78_0= RULE_INT ) ) otherlv_79= 'SQUARE' otherlv_80= 'METER' otherlv_81= 'AREA' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) ) ) )
            // InternalMycnl.g:4260:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'plant' otherlv_8= 'bushes' otherlv_9= 'in' ( (lv_area_10_0= RULE_INT ) ) otherlv_11= 'square' otherlv_12= 'meter' otherlv_13= 'area' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) ) | (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'plant' otherlv_25= 'bushes' otherlv_26= 'in' ( (lv_area_27_0= RULE_INT ) ) otherlv_28= 'square' otherlv_29= 'meter' otherlv_30= 'area' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) ) | (otherlv_34= 'What' otherlv_35= 'Will' otherlv_36= 'Be' otherlv_37= 'The' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Plant' otherlv_42= 'Bushes' otherlv_43= 'In' ( (lv_area_44_0= RULE_INT ) ) otherlv_45= 'Square' otherlv_46= 'Meter' otherlv_47= 'Area' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) ) | (otherlv_51= 'What' otherlv_52= 'Will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Plant' otherlv_59= 'Bushes' otherlv_60= 'in' ( (lv_area_61_0= RULE_INT ) ) otherlv_62= 'Square' otherlv_63= 'Meter' otherlv_64= 'Area' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) ) | (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'PLANT' otherlv_76= 'BUSHES' otherlv_77= 'IN' ( (lv_area_78_0= RULE_INT ) ) otherlv_79= 'SQUARE' otherlv_80= 'METER' otherlv_81= 'AREA' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) ) )
            {
            // InternalMycnl.g:4260:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'plant' otherlv_8= 'bushes' otherlv_9= 'in' ( (lv_area_10_0= RULE_INT ) ) otherlv_11= 'square' otherlv_12= 'meter' otherlv_13= 'area' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) ) | (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'plant' otherlv_25= 'bushes' otherlv_26= 'in' ( (lv_area_27_0= RULE_INT ) ) otherlv_28= 'square' otherlv_29= 'meter' otherlv_30= 'area' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) ) | (otherlv_34= 'What' otherlv_35= 'Will' otherlv_36= 'Be' otherlv_37= 'The' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Plant' otherlv_42= 'Bushes' otherlv_43= 'In' ( (lv_area_44_0= RULE_INT ) ) otherlv_45= 'Square' otherlv_46= 'Meter' otherlv_47= 'Area' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) ) | (otherlv_51= 'What' otherlv_52= 'Will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Plant' otherlv_59= 'Bushes' otherlv_60= 'in' ( (lv_area_61_0= RULE_INT ) ) otherlv_62= 'Square' otherlv_63= 'Meter' otherlv_64= 'Area' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) ) | (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'PLANT' otherlv_76= 'BUSHES' otherlv_77= 'IN' ( (lv_area_78_0= RULE_INT ) ) otherlv_79= 'SQUARE' otherlv_80= 'METER' otherlv_81= 'AREA' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) ) )
            int alt15=5;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt15=1;
                }
                break;
            case 37:
                {
                int LA15_2 = input.LA(2);

                if ( (LA15_2==38) ) {
                    int LA15_4 = input.LA(3);

                    if ( (LA15_4==39) ) {
                        alt15=3;
                    }
                    else if ( (LA15_4==27) ) {
                        alt15=4;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 15, 4, input);

                        throw nvae;
                    }
                }
                else if ( (LA15_2==26) ) {
                    alt15=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 15, 2, input);

                    throw nvae;
                }
                }
                break;
            case 48:
                {
                alt15=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalMycnl.g:4261:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'plant' otherlv_8= 'bushes' otherlv_9= 'in' ( (lv_area_10_0= RULE_INT ) ) otherlv_11= 'square' otherlv_12= 'meter' otherlv_13= 'area' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:4261:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'plant' otherlv_8= 'bushes' otherlv_9= 'in' ( (lv_area_10_0= RULE_INT ) ) otherlv_11= 'square' otherlv_12= 'meter' otherlv_13= 'area' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) )
                    // InternalMycnl.g:4262:4: otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'plant' otherlv_8= 'bushes' otherlv_9= 'in' ( (lv_area_10_0= RULE_INT ) ) otherlv_11= 'square' otherlv_12= 'meter' otherlv_13= 'area' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) )
                    {
                    otherlv_0=(Token)match(input,25,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFindtempPlantBushesAccess().getWhatKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getFindtempPlantBushesAccess().getWillKeyword_0_1());
                      			
                    }
                    otherlv_2=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getFindtempPlantBushesAccess().getBeKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,28,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getFindtempPlantBushesAccess().getTheKeyword_0_3());
                      			
                    }
                    otherlv_4=(Token)match(input,29,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getFindtempPlantBushesAccess().getTemperatureKeyword_0_4());
                      			
                    }
                    otherlv_5=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getFindtempPlantBushesAccess().getIfKeyword_0_5());
                      			
                    }
                    otherlv_6=(Token)match(input,31,FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getFindtempPlantBushesAccess().getWeKeyword_0_6());
                      			
                    }
                    otherlv_7=(Token)match(input,95,FOLLOW_87); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getFindtempPlantBushesAccess().getPlantKeyword_0_7());
                      			
                    }
                    otherlv_8=(Token)match(input,101,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getFindtempPlantBushesAccess().getBushesKeyword_0_8());
                      			
                    }
                    otherlv_9=(Token)match(input,36,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getFindtempPlantBushesAccess().getInKeyword_0_9());
                      			
                    }
                    // InternalMycnl.g:4302:4: ( (lv_area_10_0= RULE_INT ) )
                    // InternalMycnl.g:4303:5: (lv_area_10_0= RULE_INT )
                    {
                    // InternalMycnl.g:4303:5: (lv_area_10_0= RULE_INT )
                    // InternalMycnl.g:4304:6: lv_area_10_0= RULE_INT
                    {
                    lv_area_10_0=(Token)match(input,RULE_INT,FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_area_10_0, grammarAccess.getFindtempPlantBushesAccess().getAreaINTTerminalRuleCall_0_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempPlantBushesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"area",
                      							lv_area_10_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_11=(Token)match(input,102,FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getFindtempPlantBushesAccess().getSquareKeyword_0_11());
                      			
                    }
                    otherlv_12=(Token)match(input,103,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getFindtempPlantBushesAccess().getMeterKeyword_0_12());
                      			
                    }
                    otherlv_13=(Token)match(input,78,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getFindtempPlantBushesAccess().getAreaKeyword_0_13());
                      			
                    }
                    otherlv_14=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getFindtempPlantBushesAccess().getInKeyword_0_14());
                      			
                    }
                    otherlv_15=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getFindtempPlantBushesAccess().getRegionKeyword_0_15());
                      			
                    }
                    // InternalMycnl.g:4340:4: ( (lv_region_16_0= RULE_INT ) )
                    // InternalMycnl.g:4341:5: (lv_region_16_0= RULE_INT )
                    {
                    // InternalMycnl.g:4341:5: (lv_region_16_0= RULE_INT )
                    // InternalMycnl.g:4342:6: lv_region_16_0= RULE_INT
                    {
                    lv_region_16_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_16_0, grammarAccess.getFindtempPlantBushesAccess().getRegionINTTerminalRuleCall_0_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempPlantBushesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_16_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:4360:3: (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'plant' otherlv_25= 'bushes' otherlv_26= 'in' ( (lv_area_27_0= RULE_INT ) ) otherlv_28= 'square' otherlv_29= 'meter' otherlv_30= 'area' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:4360:3: (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'plant' otherlv_25= 'bushes' otherlv_26= 'in' ( (lv_area_27_0= RULE_INT ) ) otherlv_28= 'square' otherlv_29= 'meter' otherlv_30= 'area' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) )
                    // InternalMycnl.g:4361:4: otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'plant' otherlv_25= 'bushes' otherlv_26= 'in' ( (lv_area_27_0= RULE_INT ) ) otherlv_28= 'square' otherlv_29= 'meter' otherlv_30= 'area' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) )
                    {
                    otherlv_17=(Token)match(input,37,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getFindtempPlantBushesAccess().getWhatKeyword_1_0());
                      			
                    }
                    otherlv_18=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getFindtempPlantBushesAccess().getWillKeyword_1_1());
                      			
                    }
                    otherlv_19=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getFindtempPlantBushesAccess().getBeKeyword_1_2());
                      			
                    }
                    otherlv_20=(Token)match(input,28,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getFindtempPlantBushesAccess().getTheKeyword_1_3());
                      			
                    }
                    otherlv_21=(Token)match(input,29,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_21, grammarAccess.getFindtempPlantBushesAccess().getTemperatureKeyword_1_4());
                      			
                    }
                    otherlv_22=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getFindtempPlantBushesAccess().getIfKeyword_1_5());
                      			
                    }
                    otherlv_23=(Token)match(input,31,FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getFindtempPlantBushesAccess().getWeKeyword_1_6());
                      			
                    }
                    otherlv_24=(Token)match(input,95,FOLLOW_87); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_24, grammarAccess.getFindtempPlantBushesAccess().getPlantKeyword_1_7());
                      			
                    }
                    otherlv_25=(Token)match(input,101,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getFindtempPlantBushesAccess().getBushesKeyword_1_8());
                      			
                    }
                    otherlv_26=(Token)match(input,36,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getFindtempPlantBushesAccess().getInKeyword_1_9());
                      			
                    }
                    // InternalMycnl.g:4401:4: ( (lv_area_27_0= RULE_INT ) )
                    // InternalMycnl.g:4402:5: (lv_area_27_0= RULE_INT )
                    {
                    // InternalMycnl.g:4402:5: (lv_area_27_0= RULE_INT )
                    // InternalMycnl.g:4403:6: lv_area_27_0= RULE_INT
                    {
                    lv_area_27_0=(Token)match(input,RULE_INT,FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_area_27_0, grammarAccess.getFindtempPlantBushesAccess().getAreaINTTerminalRuleCall_1_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempPlantBushesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"area",
                      							lv_area_27_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_28=(Token)match(input,102,FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getFindtempPlantBushesAccess().getSquareKeyword_1_11());
                      			
                    }
                    otherlv_29=(Token)match(input,103,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_29, grammarAccess.getFindtempPlantBushesAccess().getMeterKeyword_1_12());
                      			
                    }
                    otherlv_30=(Token)match(input,78,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_30, grammarAccess.getFindtempPlantBushesAccess().getAreaKeyword_1_13());
                      			
                    }
                    otherlv_31=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getFindtempPlantBushesAccess().getInKeyword_1_14());
                      			
                    }
                    otherlv_32=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_32, grammarAccess.getFindtempPlantBushesAccess().getRegionKeyword_1_15());
                      			
                    }
                    // InternalMycnl.g:4439:4: ( (lv_region_33_0= RULE_INT ) )
                    // InternalMycnl.g:4440:5: (lv_region_33_0= RULE_INT )
                    {
                    // InternalMycnl.g:4440:5: (lv_region_33_0= RULE_INT )
                    // InternalMycnl.g:4441:6: lv_region_33_0= RULE_INT
                    {
                    lv_region_33_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_33_0, grammarAccess.getFindtempPlantBushesAccess().getRegionINTTerminalRuleCall_1_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempPlantBushesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_33_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalMycnl.g:4459:3: (otherlv_34= 'What' otherlv_35= 'Will' otherlv_36= 'Be' otherlv_37= 'The' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Plant' otherlv_42= 'Bushes' otherlv_43= 'In' ( (lv_area_44_0= RULE_INT ) ) otherlv_45= 'Square' otherlv_46= 'Meter' otherlv_47= 'Area' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:4459:3: (otherlv_34= 'What' otherlv_35= 'Will' otherlv_36= 'Be' otherlv_37= 'The' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Plant' otherlv_42= 'Bushes' otherlv_43= 'In' ( (lv_area_44_0= RULE_INT ) ) otherlv_45= 'Square' otherlv_46= 'Meter' otherlv_47= 'Area' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) )
                    // InternalMycnl.g:4460:4: otherlv_34= 'What' otherlv_35= 'Will' otherlv_36= 'Be' otherlv_37= 'The' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Plant' otherlv_42= 'Bushes' otherlv_43= 'In' ( (lv_area_44_0= RULE_INT ) ) otherlv_45= 'Square' otherlv_46= 'Meter' otherlv_47= 'Area' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) )
                    {
                    otherlv_34=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_34, grammarAccess.getFindtempPlantBushesAccess().getWhatKeyword_2_0());
                      			
                    }
                    otherlv_35=(Token)match(input,38,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_35, grammarAccess.getFindtempPlantBushesAccess().getWillKeyword_2_1());
                      			
                    }
                    otherlv_36=(Token)match(input,39,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_36, grammarAccess.getFindtempPlantBushesAccess().getBeKeyword_2_2());
                      			
                    }
                    otherlv_37=(Token)match(input,40,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_37, grammarAccess.getFindtempPlantBushesAccess().getTheKeyword_2_3());
                      			
                    }
                    otherlv_38=(Token)match(input,41,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_38, grammarAccess.getFindtempPlantBushesAccess().getTemperatureKeyword_2_4());
                      			
                    }
                    otherlv_39=(Token)match(input,42,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_39, grammarAccess.getFindtempPlantBushesAccess().getIfKeyword_2_5());
                      			
                    }
                    otherlv_40=(Token)match(input,43,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_40, grammarAccess.getFindtempPlantBushesAccess().getWeKeyword_2_6());
                      			
                    }
                    otherlv_41=(Token)match(input,96,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_41, grammarAccess.getFindtempPlantBushesAccess().getPlantKeyword_2_7());
                      			
                    }
                    otherlv_42=(Token)match(input,104,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getFindtempPlantBushesAccess().getBushesKeyword_2_8());
                      			
                    }
                    otherlv_43=(Token)match(input,47,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_43, grammarAccess.getFindtempPlantBushesAccess().getInKeyword_2_9());
                      			
                    }
                    // InternalMycnl.g:4500:4: ( (lv_area_44_0= RULE_INT ) )
                    // InternalMycnl.g:4501:5: (lv_area_44_0= RULE_INT )
                    {
                    // InternalMycnl.g:4501:5: (lv_area_44_0= RULE_INT )
                    // InternalMycnl.g:4502:6: lv_area_44_0= RULE_INT
                    {
                    lv_area_44_0=(Token)match(input,RULE_INT,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_area_44_0, grammarAccess.getFindtempPlantBushesAccess().getAreaINTTerminalRuleCall_2_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempPlantBushesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"area",
                      							lv_area_44_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_45=(Token)match(input,105,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_45, grammarAccess.getFindtempPlantBushesAccess().getSquareKeyword_2_11());
                      			
                    }
                    otherlv_46=(Token)match(input,106,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_46, grammarAccess.getFindtempPlantBushesAccess().getMeterKeyword_2_12());
                      			
                    }
                    otherlv_47=(Token)match(input,84,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_47, grammarAccess.getFindtempPlantBushesAccess().getAreaKeyword_2_13());
                      			
                    }
                    otherlv_48=(Token)match(input,47,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getFindtempPlantBushesAccess().getInKeyword_2_14());
                      			
                    }
                    otherlv_49=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_49, grammarAccess.getFindtempPlantBushesAccess().getRegionKeyword_2_15());
                      			
                    }
                    // InternalMycnl.g:4538:4: ( (lv_region_50_0= RULE_INT ) )
                    // InternalMycnl.g:4539:5: (lv_region_50_0= RULE_INT )
                    {
                    // InternalMycnl.g:4539:5: (lv_region_50_0= RULE_INT )
                    // InternalMycnl.g:4540:6: lv_region_50_0= RULE_INT
                    {
                    lv_region_50_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_50_0, grammarAccess.getFindtempPlantBushesAccess().getRegionINTTerminalRuleCall_2_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempPlantBushesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_50_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalMycnl.g:4558:3: (otherlv_51= 'What' otherlv_52= 'Will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Plant' otherlv_59= 'Bushes' otherlv_60= 'in' ( (lv_area_61_0= RULE_INT ) ) otherlv_62= 'Square' otherlv_63= 'Meter' otherlv_64= 'Area' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:4558:3: (otherlv_51= 'What' otherlv_52= 'Will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Plant' otherlv_59= 'Bushes' otherlv_60= 'in' ( (lv_area_61_0= RULE_INT ) ) otherlv_62= 'Square' otherlv_63= 'Meter' otherlv_64= 'Area' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) )
                    // InternalMycnl.g:4559:4: otherlv_51= 'What' otherlv_52= 'Will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Plant' otherlv_59= 'Bushes' otherlv_60= 'in' ( (lv_area_61_0= RULE_INT ) ) otherlv_62= 'Square' otherlv_63= 'Meter' otherlv_64= 'Area' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) )
                    {
                    otherlv_51=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_51, grammarAccess.getFindtempPlantBushesAccess().getWhatKeyword_3_0());
                      			
                    }
                    otherlv_52=(Token)match(input,38,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_52, grammarAccess.getFindtempPlantBushesAccess().getWillKeyword_3_1());
                      			
                    }
                    otherlv_53=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_53, grammarAccess.getFindtempPlantBushesAccess().getBeKeyword_3_2());
                      			
                    }
                    otherlv_54=(Token)match(input,28,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_54, grammarAccess.getFindtempPlantBushesAccess().getTheKeyword_3_3());
                      			
                    }
                    otherlv_55=(Token)match(input,41,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_55, grammarAccess.getFindtempPlantBushesAccess().getTemperatureKeyword_3_4());
                      			
                    }
                    otherlv_56=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_56, grammarAccess.getFindtempPlantBushesAccess().getIfKeyword_3_5());
                      			
                    }
                    otherlv_57=(Token)match(input,31,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_57, grammarAccess.getFindtempPlantBushesAccess().getWeKeyword_3_6());
                      			
                    }
                    otherlv_58=(Token)match(input,96,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_58, grammarAccess.getFindtempPlantBushesAccess().getPlantKeyword_3_7());
                      			
                    }
                    otherlv_59=(Token)match(input,104,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_59, grammarAccess.getFindtempPlantBushesAccess().getBushesKeyword_3_8());
                      			
                    }
                    otherlv_60=(Token)match(input,36,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_60, grammarAccess.getFindtempPlantBushesAccess().getInKeyword_3_9());
                      			
                    }
                    // InternalMycnl.g:4599:4: ( (lv_area_61_0= RULE_INT ) )
                    // InternalMycnl.g:4600:5: (lv_area_61_0= RULE_INT )
                    {
                    // InternalMycnl.g:4600:5: (lv_area_61_0= RULE_INT )
                    // InternalMycnl.g:4601:6: lv_area_61_0= RULE_INT
                    {
                    lv_area_61_0=(Token)match(input,RULE_INT,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_area_61_0, grammarAccess.getFindtempPlantBushesAccess().getAreaINTTerminalRuleCall_3_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempPlantBushesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"area",
                      							lv_area_61_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_62=(Token)match(input,105,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_62, grammarAccess.getFindtempPlantBushesAccess().getSquareKeyword_3_11());
                      			
                    }
                    otherlv_63=(Token)match(input,106,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_63, grammarAccess.getFindtempPlantBushesAccess().getMeterKeyword_3_12());
                      			
                    }
                    otherlv_64=(Token)match(input,84,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_64, grammarAccess.getFindtempPlantBushesAccess().getAreaKeyword_3_13());
                      			
                    }
                    otherlv_65=(Token)match(input,36,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_65, grammarAccess.getFindtempPlantBushesAccess().getInKeyword_3_14());
                      			
                    }
                    otherlv_66=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_66, grammarAccess.getFindtempPlantBushesAccess().getRegionKeyword_3_15());
                      			
                    }
                    // InternalMycnl.g:4637:4: ( (lv_region_67_0= RULE_INT ) )
                    // InternalMycnl.g:4638:5: (lv_region_67_0= RULE_INT )
                    {
                    // InternalMycnl.g:4638:5: (lv_region_67_0= RULE_INT )
                    // InternalMycnl.g:4639:6: lv_region_67_0= RULE_INT
                    {
                    lv_region_67_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_67_0, grammarAccess.getFindtempPlantBushesAccess().getRegionINTTerminalRuleCall_3_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempPlantBushesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_67_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalMycnl.g:4657:3: (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'PLANT' otherlv_76= 'BUSHES' otherlv_77= 'IN' ( (lv_area_78_0= RULE_INT ) ) otherlv_79= 'SQUARE' otherlv_80= 'METER' otherlv_81= 'AREA' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:4657:3: (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'PLANT' otherlv_76= 'BUSHES' otherlv_77= 'IN' ( (lv_area_78_0= RULE_INT ) ) otherlv_79= 'SQUARE' otherlv_80= 'METER' otherlv_81= 'AREA' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) )
                    // InternalMycnl.g:4658:4: otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'PLANT' otherlv_76= 'BUSHES' otherlv_77= 'IN' ( (lv_area_78_0= RULE_INT ) ) otherlv_79= 'SQUARE' otherlv_80= 'METER' otherlv_81= 'AREA' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) )
                    {
                    otherlv_68=(Token)match(input,48,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_68, grammarAccess.getFindtempPlantBushesAccess().getWHATKeyword_4_0());
                      			
                    }
                    otherlv_69=(Token)match(input,49,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_69, grammarAccess.getFindtempPlantBushesAccess().getWILLKeyword_4_1());
                      			
                    }
                    otherlv_70=(Token)match(input,50,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_70, grammarAccess.getFindtempPlantBushesAccess().getBEKeyword_4_2());
                      			
                    }
                    otherlv_71=(Token)match(input,51,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_71, grammarAccess.getFindtempPlantBushesAccess().getTHEKeyword_4_3());
                      			
                    }
                    otherlv_72=(Token)match(input,52,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_72, grammarAccess.getFindtempPlantBushesAccess().getTEMPERATUREKeyword_4_4());
                      			
                    }
                    otherlv_73=(Token)match(input,53,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_73, grammarAccess.getFindtempPlantBushesAccess().getIFKeyword_4_5());
                      			
                    }
                    otherlv_74=(Token)match(input,54,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_74, grammarAccess.getFindtempPlantBushesAccess().getWEKeyword_4_6());
                      			
                    }
                    otherlv_75=(Token)match(input,97,FOLLOW_93); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_75, grammarAccess.getFindtempPlantBushesAccess().getPLANTKeyword_4_7());
                      			
                    }
                    otherlv_76=(Token)match(input,107,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_76, grammarAccess.getFindtempPlantBushesAccess().getBUSHESKeyword_4_8());
                      			
                    }
                    otherlv_77=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_77, grammarAccess.getFindtempPlantBushesAccess().getINKeyword_4_9());
                      			
                    }
                    // InternalMycnl.g:4698:4: ( (lv_area_78_0= RULE_INT ) )
                    // InternalMycnl.g:4699:5: (lv_area_78_0= RULE_INT )
                    {
                    // InternalMycnl.g:4699:5: (lv_area_78_0= RULE_INT )
                    // InternalMycnl.g:4700:6: lv_area_78_0= RULE_INT
                    {
                    lv_area_78_0=(Token)match(input,RULE_INT,FOLLOW_94); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_area_78_0, grammarAccess.getFindtempPlantBushesAccess().getAreaINTTerminalRuleCall_4_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempPlantBushesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"area",
                      							lv_area_78_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_79=(Token)match(input,108,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_79, grammarAccess.getFindtempPlantBushesAccess().getSQUAREKeyword_4_11());
                      			
                    }
                    otherlv_80=(Token)match(input,109,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_80, grammarAccess.getFindtempPlantBushesAccess().getMETERKeyword_4_12());
                      			
                    }
                    otherlv_81=(Token)match(input,90,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_81, grammarAccess.getFindtempPlantBushesAccess().getAREAKeyword_4_13());
                      			
                    }
                    otherlv_82=(Token)match(input,58,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_82, grammarAccess.getFindtempPlantBushesAccess().getINKeyword_4_14());
                      			
                    }
                    otherlv_83=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_83, grammarAccess.getFindtempPlantBushesAccess().getREGIONKeyword_4_15());
                      			
                    }
                    // InternalMycnl.g:4736:4: ( (lv_region_84_0= RULE_INT ) )
                    // InternalMycnl.g:4737:5: (lv_region_84_0= RULE_INT )
                    {
                    // InternalMycnl.g:4737:5: (lv_region_84_0= RULE_INT )
                    // InternalMycnl.g:4738:6: lv_region_84_0= RULE_INT
                    {
                    lv_region_84_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_84_0, grammarAccess.getFindtempPlantBushesAccess().getRegionINTTerminalRuleCall_4_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempPlantBushesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_84_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefindtempPlantBushes"


    // $ANTLR start "entryRulefindtempRemoveBushes"
    // InternalMycnl.g:4759:1: entryRulefindtempRemoveBushes returns [EObject current=null] : iv_rulefindtempRemoveBushes= rulefindtempRemoveBushes EOF ;
    public final EObject entryRulefindtempRemoveBushes() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefindtempRemoveBushes = null;


        try {
            // InternalMycnl.g:4759:61: (iv_rulefindtempRemoveBushes= rulefindtempRemoveBushes EOF )
            // InternalMycnl.g:4760:2: iv_rulefindtempRemoveBushes= rulefindtempRemoveBushes EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFindtempRemoveBushesRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefindtempRemoveBushes=rulefindtempRemoveBushes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefindtempRemoveBushes; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefindtempRemoveBushes"


    // $ANTLR start "rulefindtempRemoveBushes"
    // InternalMycnl.g:4766:1: rulefindtempRemoveBushes returns [EObject current=null] : ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'remove' otherlv_8= 'bushes' otherlv_9= 'in' ( (lv_area_10_0= RULE_INT ) ) otherlv_11= 'square' otherlv_12= 'meter' otherlv_13= 'area' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) ) | (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'remove' otherlv_25= 'bushes' otherlv_26= 'in' ( (lv_area_27_0= RULE_INT ) ) otherlv_28= 'square' otherlv_29= 'meter' otherlv_30= 'area' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) ) | (otherlv_34= 'What' otherlv_35= 'Will' otherlv_36= 'Be' otherlv_37= 'The' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Remove' otherlv_42= 'Bushes' otherlv_43= 'In' ( (lv_area_44_0= RULE_INT ) ) otherlv_45= 'Square' otherlv_46= 'Meter' otherlv_47= 'Area' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) ) | (otherlv_51= 'What' otherlv_52= 'Will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Remove' otherlv_59= 'Bushes' otherlv_60= 'in' ( (lv_area_61_0= RULE_INT ) ) otherlv_62= 'Square' otherlv_63= 'Meter' otherlv_64= 'Area' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) ) | (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'REMOVE' otherlv_76= 'BUSHES' otherlv_77= 'IN' ( (lv_area_78_0= RULE_INT ) ) otherlv_79= 'SQUARE' otherlv_80= 'METER' otherlv_81= 'AREA' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) ) ) ;
    public final EObject rulefindtempRemoveBushes() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token lv_area_10_0=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token lv_region_16_0=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token lv_area_27_0=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token lv_region_33_0=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token lv_area_44_0=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token otherlv_47=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token lv_region_50_0=null;
        Token otherlv_51=null;
        Token otherlv_52=null;
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_55=null;
        Token otherlv_56=null;
        Token otherlv_57=null;
        Token otherlv_58=null;
        Token otherlv_59=null;
        Token otherlv_60=null;
        Token lv_area_61_0=null;
        Token otherlv_62=null;
        Token otherlv_63=null;
        Token otherlv_64=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token lv_region_67_0=null;
        Token otherlv_68=null;
        Token otherlv_69=null;
        Token otherlv_70=null;
        Token otherlv_71=null;
        Token otherlv_72=null;
        Token otherlv_73=null;
        Token otherlv_74=null;
        Token otherlv_75=null;
        Token otherlv_76=null;
        Token otherlv_77=null;
        Token lv_area_78_0=null;
        Token otherlv_79=null;
        Token otherlv_80=null;
        Token otherlv_81=null;
        Token otherlv_82=null;
        Token otherlv_83=null;
        Token lv_region_84_0=null;


        	enterRule();

        try {
            // InternalMycnl.g:4772:2: ( ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'remove' otherlv_8= 'bushes' otherlv_9= 'in' ( (lv_area_10_0= RULE_INT ) ) otherlv_11= 'square' otherlv_12= 'meter' otherlv_13= 'area' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) ) | (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'remove' otherlv_25= 'bushes' otherlv_26= 'in' ( (lv_area_27_0= RULE_INT ) ) otherlv_28= 'square' otherlv_29= 'meter' otherlv_30= 'area' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) ) | (otherlv_34= 'What' otherlv_35= 'Will' otherlv_36= 'Be' otherlv_37= 'The' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Remove' otherlv_42= 'Bushes' otherlv_43= 'In' ( (lv_area_44_0= RULE_INT ) ) otherlv_45= 'Square' otherlv_46= 'Meter' otherlv_47= 'Area' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) ) | (otherlv_51= 'What' otherlv_52= 'Will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Remove' otherlv_59= 'Bushes' otherlv_60= 'in' ( (lv_area_61_0= RULE_INT ) ) otherlv_62= 'Square' otherlv_63= 'Meter' otherlv_64= 'Area' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) ) | (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'REMOVE' otherlv_76= 'BUSHES' otherlv_77= 'IN' ( (lv_area_78_0= RULE_INT ) ) otherlv_79= 'SQUARE' otherlv_80= 'METER' otherlv_81= 'AREA' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) ) ) )
            // InternalMycnl.g:4773:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'remove' otherlv_8= 'bushes' otherlv_9= 'in' ( (lv_area_10_0= RULE_INT ) ) otherlv_11= 'square' otherlv_12= 'meter' otherlv_13= 'area' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) ) | (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'remove' otherlv_25= 'bushes' otherlv_26= 'in' ( (lv_area_27_0= RULE_INT ) ) otherlv_28= 'square' otherlv_29= 'meter' otherlv_30= 'area' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) ) | (otherlv_34= 'What' otherlv_35= 'Will' otherlv_36= 'Be' otherlv_37= 'The' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Remove' otherlv_42= 'Bushes' otherlv_43= 'In' ( (lv_area_44_0= RULE_INT ) ) otherlv_45= 'Square' otherlv_46= 'Meter' otherlv_47= 'Area' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) ) | (otherlv_51= 'What' otherlv_52= 'Will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Remove' otherlv_59= 'Bushes' otherlv_60= 'in' ( (lv_area_61_0= RULE_INT ) ) otherlv_62= 'Square' otherlv_63= 'Meter' otherlv_64= 'Area' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) ) | (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'REMOVE' otherlv_76= 'BUSHES' otherlv_77= 'IN' ( (lv_area_78_0= RULE_INT ) ) otherlv_79= 'SQUARE' otherlv_80= 'METER' otherlv_81= 'AREA' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) ) )
            {
            // InternalMycnl.g:4773:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'remove' otherlv_8= 'bushes' otherlv_9= 'in' ( (lv_area_10_0= RULE_INT ) ) otherlv_11= 'square' otherlv_12= 'meter' otherlv_13= 'area' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) ) | (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'remove' otherlv_25= 'bushes' otherlv_26= 'in' ( (lv_area_27_0= RULE_INT ) ) otherlv_28= 'square' otherlv_29= 'meter' otherlv_30= 'area' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) ) | (otherlv_34= 'What' otherlv_35= 'Will' otherlv_36= 'Be' otherlv_37= 'The' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Remove' otherlv_42= 'Bushes' otherlv_43= 'In' ( (lv_area_44_0= RULE_INT ) ) otherlv_45= 'Square' otherlv_46= 'Meter' otherlv_47= 'Area' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) ) | (otherlv_51= 'What' otherlv_52= 'Will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Remove' otherlv_59= 'Bushes' otherlv_60= 'in' ( (lv_area_61_0= RULE_INT ) ) otherlv_62= 'Square' otherlv_63= 'Meter' otherlv_64= 'Area' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) ) | (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'REMOVE' otherlv_76= 'BUSHES' otherlv_77= 'IN' ( (lv_area_78_0= RULE_INT ) ) otherlv_79= 'SQUARE' otherlv_80= 'METER' otherlv_81= 'AREA' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) ) )
            int alt16=5;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt16=1;
                }
                break;
            case 37:
                {
                int LA16_2 = input.LA(2);

                if ( (LA16_2==26) ) {
                    alt16=2;
                }
                else if ( (LA16_2==38) ) {
                    int LA16_5 = input.LA(3);

                    if ( (LA16_5==27) ) {
                        alt16=4;
                    }
                    else if ( (LA16_5==39) ) {
                        alt16=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 16, 5, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 16, 2, input);

                    throw nvae;
                }
                }
                break;
            case 48:
                {
                alt16=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalMycnl.g:4774:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'remove' otherlv_8= 'bushes' otherlv_9= 'in' ( (lv_area_10_0= RULE_INT ) ) otherlv_11= 'square' otherlv_12= 'meter' otherlv_13= 'area' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:4774:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'remove' otherlv_8= 'bushes' otherlv_9= 'in' ( (lv_area_10_0= RULE_INT ) ) otherlv_11= 'square' otherlv_12= 'meter' otherlv_13= 'area' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) )
                    // InternalMycnl.g:4775:4: otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'remove' otherlv_8= 'bushes' otherlv_9= 'in' ( (lv_area_10_0= RULE_INT ) ) otherlv_11= 'square' otherlv_12= 'meter' otherlv_13= 'area' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) )
                    {
                    otherlv_0=(Token)match(input,25,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFindtempRemoveBushesAccess().getWhatKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getFindtempRemoveBushesAccess().getWillKeyword_0_1());
                      			
                    }
                    otherlv_2=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getFindtempRemoveBushesAccess().getBeKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,28,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getFindtempRemoveBushesAccess().getTheKeyword_0_3());
                      			
                    }
                    otherlv_4=(Token)match(input,29,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getFindtempRemoveBushesAccess().getTemperatureKeyword_0_4());
                      			
                    }
                    otherlv_5=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getFindtempRemoveBushesAccess().getIfKeyword_0_5());
                      			
                    }
                    otherlv_6=(Token)match(input,31,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getFindtempRemoveBushesAccess().getWeKeyword_0_6());
                      			
                    }
                    otherlv_7=(Token)match(input,110,FOLLOW_87); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getFindtempRemoveBushesAccess().getRemoveKeyword_0_7());
                      			
                    }
                    otherlv_8=(Token)match(input,101,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getFindtempRemoveBushesAccess().getBushesKeyword_0_8());
                      			
                    }
                    otherlv_9=(Token)match(input,36,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getFindtempRemoveBushesAccess().getInKeyword_0_9());
                      			
                    }
                    // InternalMycnl.g:4815:4: ( (lv_area_10_0= RULE_INT ) )
                    // InternalMycnl.g:4816:5: (lv_area_10_0= RULE_INT )
                    {
                    // InternalMycnl.g:4816:5: (lv_area_10_0= RULE_INT )
                    // InternalMycnl.g:4817:6: lv_area_10_0= RULE_INT
                    {
                    lv_area_10_0=(Token)match(input,RULE_INT,FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_area_10_0, grammarAccess.getFindtempRemoveBushesAccess().getAreaINTTerminalRuleCall_0_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempRemoveBushesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"area",
                      							lv_area_10_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_11=(Token)match(input,102,FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getFindtempRemoveBushesAccess().getSquareKeyword_0_11());
                      			
                    }
                    otherlv_12=(Token)match(input,103,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getFindtempRemoveBushesAccess().getMeterKeyword_0_12());
                      			
                    }
                    otherlv_13=(Token)match(input,78,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getFindtempRemoveBushesAccess().getAreaKeyword_0_13());
                      			
                    }
                    otherlv_14=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getFindtempRemoveBushesAccess().getInKeyword_0_14());
                      			
                    }
                    otherlv_15=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getFindtempRemoveBushesAccess().getRegionKeyword_0_15());
                      			
                    }
                    // InternalMycnl.g:4853:4: ( (lv_region_16_0= RULE_INT ) )
                    // InternalMycnl.g:4854:5: (lv_region_16_0= RULE_INT )
                    {
                    // InternalMycnl.g:4854:5: (lv_region_16_0= RULE_INT )
                    // InternalMycnl.g:4855:6: lv_region_16_0= RULE_INT
                    {
                    lv_region_16_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_16_0, grammarAccess.getFindtempRemoveBushesAccess().getRegionINTTerminalRuleCall_0_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempRemoveBushesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_16_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:4873:3: (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'remove' otherlv_25= 'bushes' otherlv_26= 'in' ( (lv_area_27_0= RULE_INT ) ) otherlv_28= 'square' otherlv_29= 'meter' otherlv_30= 'area' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:4873:3: (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'remove' otherlv_25= 'bushes' otherlv_26= 'in' ( (lv_area_27_0= RULE_INT ) ) otherlv_28= 'square' otherlv_29= 'meter' otherlv_30= 'area' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) )
                    // InternalMycnl.g:4874:4: otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'remove' otherlv_25= 'bushes' otherlv_26= 'in' ( (lv_area_27_0= RULE_INT ) ) otherlv_28= 'square' otherlv_29= 'meter' otherlv_30= 'area' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) )
                    {
                    otherlv_17=(Token)match(input,37,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getFindtempRemoveBushesAccess().getWhatKeyword_1_0());
                      			
                    }
                    otherlv_18=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getFindtempRemoveBushesAccess().getWillKeyword_1_1());
                      			
                    }
                    otherlv_19=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getFindtempRemoveBushesAccess().getBeKeyword_1_2());
                      			
                    }
                    otherlv_20=(Token)match(input,28,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getFindtempRemoveBushesAccess().getTheKeyword_1_3());
                      			
                    }
                    otherlv_21=(Token)match(input,29,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_21, grammarAccess.getFindtempRemoveBushesAccess().getTemperatureKeyword_1_4());
                      			
                    }
                    otherlv_22=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getFindtempRemoveBushesAccess().getIfKeyword_1_5());
                      			
                    }
                    otherlv_23=(Token)match(input,31,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getFindtempRemoveBushesAccess().getWeKeyword_1_6());
                      			
                    }
                    otherlv_24=(Token)match(input,110,FOLLOW_87); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_24, grammarAccess.getFindtempRemoveBushesAccess().getRemoveKeyword_1_7());
                      			
                    }
                    otherlv_25=(Token)match(input,101,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getFindtempRemoveBushesAccess().getBushesKeyword_1_8());
                      			
                    }
                    otherlv_26=(Token)match(input,36,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getFindtempRemoveBushesAccess().getInKeyword_1_9());
                      			
                    }
                    // InternalMycnl.g:4914:4: ( (lv_area_27_0= RULE_INT ) )
                    // InternalMycnl.g:4915:5: (lv_area_27_0= RULE_INT )
                    {
                    // InternalMycnl.g:4915:5: (lv_area_27_0= RULE_INT )
                    // InternalMycnl.g:4916:6: lv_area_27_0= RULE_INT
                    {
                    lv_area_27_0=(Token)match(input,RULE_INT,FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_area_27_0, grammarAccess.getFindtempRemoveBushesAccess().getAreaINTTerminalRuleCall_1_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempRemoveBushesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"area",
                      							lv_area_27_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_28=(Token)match(input,102,FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getFindtempRemoveBushesAccess().getSquareKeyword_1_11());
                      			
                    }
                    otherlv_29=(Token)match(input,103,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_29, grammarAccess.getFindtempRemoveBushesAccess().getMeterKeyword_1_12());
                      			
                    }
                    otherlv_30=(Token)match(input,78,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_30, grammarAccess.getFindtempRemoveBushesAccess().getAreaKeyword_1_13());
                      			
                    }
                    otherlv_31=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getFindtempRemoveBushesAccess().getInKeyword_1_14());
                      			
                    }
                    otherlv_32=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_32, grammarAccess.getFindtempRemoveBushesAccess().getRegionKeyword_1_15());
                      			
                    }
                    // InternalMycnl.g:4952:4: ( (lv_region_33_0= RULE_INT ) )
                    // InternalMycnl.g:4953:5: (lv_region_33_0= RULE_INT )
                    {
                    // InternalMycnl.g:4953:5: (lv_region_33_0= RULE_INT )
                    // InternalMycnl.g:4954:6: lv_region_33_0= RULE_INT
                    {
                    lv_region_33_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_33_0, grammarAccess.getFindtempRemoveBushesAccess().getRegionINTTerminalRuleCall_1_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempRemoveBushesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_33_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalMycnl.g:4972:3: (otherlv_34= 'What' otherlv_35= 'Will' otherlv_36= 'Be' otherlv_37= 'The' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Remove' otherlv_42= 'Bushes' otherlv_43= 'In' ( (lv_area_44_0= RULE_INT ) ) otherlv_45= 'Square' otherlv_46= 'Meter' otherlv_47= 'Area' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:4972:3: (otherlv_34= 'What' otherlv_35= 'Will' otherlv_36= 'Be' otherlv_37= 'The' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Remove' otherlv_42= 'Bushes' otherlv_43= 'In' ( (lv_area_44_0= RULE_INT ) ) otherlv_45= 'Square' otherlv_46= 'Meter' otherlv_47= 'Area' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) )
                    // InternalMycnl.g:4973:4: otherlv_34= 'What' otherlv_35= 'Will' otherlv_36= 'Be' otherlv_37= 'The' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Remove' otherlv_42= 'Bushes' otherlv_43= 'In' ( (lv_area_44_0= RULE_INT ) ) otherlv_45= 'Square' otherlv_46= 'Meter' otherlv_47= 'Area' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) )
                    {
                    otherlv_34=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_34, grammarAccess.getFindtempRemoveBushesAccess().getWhatKeyword_2_0());
                      			
                    }
                    otherlv_35=(Token)match(input,38,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_35, grammarAccess.getFindtempRemoveBushesAccess().getWillKeyword_2_1());
                      			
                    }
                    otherlv_36=(Token)match(input,39,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_36, grammarAccess.getFindtempRemoveBushesAccess().getBeKeyword_2_2());
                      			
                    }
                    otherlv_37=(Token)match(input,40,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_37, grammarAccess.getFindtempRemoveBushesAccess().getTheKeyword_2_3());
                      			
                    }
                    otherlv_38=(Token)match(input,41,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_38, grammarAccess.getFindtempRemoveBushesAccess().getTemperatureKeyword_2_4());
                      			
                    }
                    otherlv_39=(Token)match(input,42,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_39, grammarAccess.getFindtempRemoveBushesAccess().getIfKeyword_2_5());
                      			
                    }
                    otherlv_40=(Token)match(input,43,FOLLOW_97); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_40, grammarAccess.getFindtempRemoveBushesAccess().getWeKeyword_2_6());
                      			
                    }
                    otherlv_41=(Token)match(input,111,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_41, grammarAccess.getFindtempRemoveBushesAccess().getRemoveKeyword_2_7());
                      			
                    }
                    otherlv_42=(Token)match(input,104,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getFindtempRemoveBushesAccess().getBushesKeyword_2_8());
                      			
                    }
                    otherlv_43=(Token)match(input,47,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_43, grammarAccess.getFindtempRemoveBushesAccess().getInKeyword_2_9());
                      			
                    }
                    // InternalMycnl.g:5013:4: ( (lv_area_44_0= RULE_INT ) )
                    // InternalMycnl.g:5014:5: (lv_area_44_0= RULE_INT )
                    {
                    // InternalMycnl.g:5014:5: (lv_area_44_0= RULE_INT )
                    // InternalMycnl.g:5015:6: lv_area_44_0= RULE_INT
                    {
                    lv_area_44_0=(Token)match(input,RULE_INT,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_area_44_0, grammarAccess.getFindtempRemoveBushesAccess().getAreaINTTerminalRuleCall_2_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempRemoveBushesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"area",
                      							lv_area_44_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_45=(Token)match(input,105,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_45, grammarAccess.getFindtempRemoveBushesAccess().getSquareKeyword_2_11());
                      			
                    }
                    otherlv_46=(Token)match(input,106,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_46, grammarAccess.getFindtempRemoveBushesAccess().getMeterKeyword_2_12());
                      			
                    }
                    otherlv_47=(Token)match(input,84,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_47, grammarAccess.getFindtempRemoveBushesAccess().getAreaKeyword_2_13());
                      			
                    }
                    otherlv_48=(Token)match(input,47,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getFindtempRemoveBushesAccess().getInKeyword_2_14());
                      			
                    }
                    otherlv_49=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_49, grammarAccess.getFindtempRemoveBushesAccess().getRegionKeyword_2_15());
                      			
                    }
                    // InternalMycnl.g:5051:4: ( (lv_region_50_0= RULE_INT ) )
                    // InternalMycnl.g:5052:5: (lv_region_50_0= RULE_INT )
                    {
                    // InternalMycnl.g:5052:5: (lv_region_50_0= RULE_INT )
                    // InternalMycnl.g:5053:6: lv_region_50_0= RULE_INT
                    {
                    lv_region_50_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_50_0, grammarAccess.getFindtempRemoveBushesAccess().getRegionINTTerminalRuleCall_2_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempRemoveBushesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_50_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalMycnl.g:5071:3: (otherlv_51= 'What' otherlv_52= 'Will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Remove' otherlv_59= 'Bushes' otherlv_60= 'in' ( (lv_area_61_0= RULE_INT ) ) otherlv_62= 'Square' otherlv_63= 'Meter' otherlv_64= 'Area' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:5071:3: (otherlv_51= 'What' otherlv_52= 'Will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Remove' otherlv_59= 'Bushes' otherlv_60= 'in' ( (lv_area_61_0= RULE_INT ) ) otherlv_62= 'Square' otherlv_63= 'Meter' otherlv_64= 'Area' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) )
                    // InternalMycnl.g:5072:4: otherlv_51= 'What' otherlv_52= 'Will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Remove' otherlv_59= 'Bushes' otherlv_60= 'in' ( (lv_area_61_0= RULE_INT ) ) otherlv_62= 'Square' otherlv_63= 'Meter' otherlv_64= 'Area' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) )
                    {
                    otherlv_51=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_51, grammarAccess.getFindtempRemoveBushesAccess().getWhatKeyword_3_0());
                      			
                    }
                    otherlv_52=(Token)match(input,38,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_52, grammarAccess.getFindtempRemoveBushesAccess().getWillKeyword_3_1());
                      			
                    }
                    otherlv_53=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_53, grammarAccess.getFindtempRemoveBushesAccess().getBeKeyword_3_2());
                      			
                    }
                    otherlv_54=(Token)match(input,28,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_54, grammarAccess.getFindtempRemoveBushesAccess().getTheKeyword_3_3());
                      			
                    }
                    otherlv_55=(Token)match(input,41,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_55, grammarAccess.getFindtempRemoveBushesAccess().getTemperatureKeyword_3_4());
                      			
                    }
                    otherlv_56=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_56, grammarAccess.getFindtempRemoveBushesAccess().getIfKeyword_3_5());
                      			
                    }
                    otherlv_57=(Token)match(input,31,FOLLOW_97); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_57, grammarAccess.getFindtempRemoveBushesAccess().getWeKeyword_3_6());
                      			
                    }
                    otherlv_58=(Token)match(input,111,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_58, grammarAccess.getFindtempRemoveBushesAccess().getRemoveKeyword_3_7());
                      			
                    }
                    otherlv_59=(Token)match(input,104,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_59, grammarAccess.getFindtempRemoveBushesAccess().getBushesKeyword_3_8());
                      			
                    }
                    otherlv_60=(Token)match(input,36,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_60, grammarAccess.getFindtempRemoveBushesAccess().getInKeyword_3_9());
                      			
                    }
                    // InternalMycnl.g:5112:4: ( (lv_area_61_0= RULE_INT ) )
                    // InternalMycnl.g:5113:5: (lv_area_61_0= RULE_INT )
                    {
                    // InternalMycnl.g:5113:5: (lv_area_61_0= RULE_INT )
                    // InternalMycnl.g:5114:6: lv_area_61_0= RULE_INT
                    {
                    lv_area_61_0=(Token)match(input,RULE_INT,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_area_61_0, grammarAccess.getFindtempRemoveBushesAccess().getAreaINTTerminalRuleCall_3_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempRemoveBushesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"area",
                      							lv_area_61_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_62=(Token)match(input,105,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_62, grammarAccess.getFindtempRemoveBushesAccess().getSquareKeyword_3_11());
                      			
                    }
                    otherlv_63=(Token)match(input,106,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_63, grammarAccess.getFindtempRemoveBushesAccess().getMeterKeyword_3_12());
                      			
                    }
                    otherlv_64=(Token)match(input,84,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_64, grammarAccess.getFindtempRemoveBushesAccess().getAreaKeyword_3_13());
                      			
                    }
                    otherlv_65=(Token)match(input,36,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_65, grammarAccess.getFindtempRemoveBushesAccess().getInKeyword_3_14());
                      			
                    }
                    otherlv_66=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_66, grammarAccess.getFindtempRemoveBushesAccess().getRegionKeyword_3_15());
                      			
                    }
                    // InternalMycnl.g:5150:4: ( (lv_region_67_0= RULE_INT ) )
                    // InternalMycnl.g:5151:5: (lv_region_67_0= RULE_INT )
                    {
                    // InternalMycnl.g:5151:5: (lv_region_67_0= RULE_INT )
                    // InternalMycnl.g:5152:6: lv_region_67_0= RULE_INT
                    {
                    lv_region_67_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_67_0, grammarAccess.getFindtempRemoveBushesAccess().getRegionINTTerminalRuleCall_3_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempRemoveBushesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_67_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalMycnl.g:5170:3: (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'REMOVE' otherlv_76= 'BUSHES' otherlv_77= 'IN' ( (lv_area_78_0= RULE_INT ) ) otherlv_79= 'SQUARE' otherlv_80= 'METER' otherlv_81= 'AREA' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:5170:3: (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'REMOVE' otherlv_76= 'BUSHES' otherlv_77= 'IN' ( (lv_area_78_0= RULE_INT ) ) otherlv_79= 'SQUARE' otherlv_80= 'METER' otherlv_81= 'AREA' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) )
                    // InternalMycnl.g:5171:4: otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'REMOVE' otherlv_76= 'BUSHES' otherlv_77= 'IN' ( (lv_area_78_0= RULE_INT ) ) otherlv_79= 'SQUARE' otherlv_80= 'METER' otherlv_81= 'AREA' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) )
                    {
                    otherlv_68=(Token)match(input,48,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_68, grammarAccess.getFindtempRemoveBushesAccess().getWHATKeyword_4_0());
                      			
                    }
                    otherlv_69=(Token)match(input,49,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_69, grammarAccess.getFindtempRemoveBushesAccess().getWILLKeyword_4_1());
                      			
                    }
                    otherlv_70=(Token)match(input,50,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_70, grammarAccess.getFindtempRemoveBushesAccess().getBEKeyword_4_2());
                      			
                    }
                    otherlv_71=(Token)match(input,51,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_71, grammarAccess.getFindtempRemoveBushesAccess().getTHEKeyword_4_3());
                      			
                    }
                    otherlv_72=(Token)match(input,52,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_72, grammarAccess.getFindtempRemoveBushesAccess().getTEMPERATUREKeyword_4_4());
                      			
                    }
                    otherlv_73=(Token)match(input,53,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_73, grammarAccess.getFindtempRemoveBushesAccess().getIFKeyword_4_5());
                      			
                    }
                    otherlv_74=(Token)match(input,54,FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_74, grammarAccess.getFindtempRemoveBushesAccess().getWEKeyword_4_6());
                      			
                    }
                    otherlv_75=(Token)match(input,112,FOLLOW_93); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_75, grammarAccess.getFindtempRemoveBushesAccess().getREMOVEKeyword_4_7());
                      			
                    }
                    otherlv_76=(Token)match(input,107,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_76, grammarAccess.getFindtempRemoveBushesAccess().getBUSHESKeyword_4_8());
                      			
                    }
                    otherlv_77=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_77, grammarAccess.getFindtempRemoveBushesAccess().getINKeyword_4_9());
                      			
                    }
                    // InternalMycnl.g:5211:4: ( (lv_area_78_0= RULE_INT ) )
                    // InternalMycnl.g:5212:5: (lv_area_78_0= RULE_INT )
                    {
                    // InternalMycnl.g:5212:5: (lv_area_78_0= RULE_INT )
                    // InternalMycnl.g:5213:6: lv_area_78_0= RULE_INT
                    {
                    lv_area_78_0=(Token)match(input,RULE_INT,FOLLOW_94); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_area_78_0, grammarAccess.getFindtempRemoveBushesAccess().getAreaINTTerminalRuleCall_4_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempRemoveBushesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"area",
                      							lv_area_78_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_79=(Token)match(input,108,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_79, grammarAccess.getFindtempRemoveBushesAccess().getSQUAREKeyword_4_11());
                      			
                    }
                    otherlv_80=(Token)match(input,109,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_80, grammarAccess.getFindtempRemoveBushesAccess().getMETERKeyword_4_12());
                      			
                    }
                    otherlv_81=(Token)match(input,90,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_81, grammarAccess.getFindtempRemoveBushesAccess().getAREAKeyword_4_13());
                      			
                    }
                    otherlv_82=(Token)match(input,58,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_82, grammarAccess.getFindtempRemoveBushesAccess().getINKeyword_4_14());
                      			
                    }
                    otherlv_83=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_83, grammarAccess.getFindtempRemoveBushesAccess().getREGIONKeyword_4_15());
                      			
                    }
                    // InternalMycnl.g:5249:4: ( (lv_region_84_0= RULE_INT ) )
                    // InternalMycnl.g:5250:5: (lv_region_84_0= RULE_INT )
                    {
                    // InternalMycnl.g:5250:5: (lv_region_84_0= RULE_INT )
                    // InternalMycnl.g:5251:6: lv_region_84_0= RULE_INT
                    {
                    lv_region_84_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_84_0, grammarAccess.getFindtempRemoveBushesAccess().getRegionINTTerminalRuleCall_4_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempRemoveBushesRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_84_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefindtempRemoveBushes"


    // $ANTLR start "entryRulefindtempCreateLake"
    // InternalMycnl.g:5272:1: entryRulefindtempCreateLake returns [EObject current=null] : iv_rulefindtempCreateLake= rulefindtempCreateLake EOF ;
    public final EObject entryRulefindtempCreateLake() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefindtempCreateLake = null;


        try {
            // InternalMycnl.g:5272:59: (iv_rulefindtempCreateLake= rulefindtempCreateLake EOF )
            // InternalMycnl.g:5273:2: iv_rulefindtempCreateLake= rulefindtempCreateLake EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFindtempCreateLakeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefindtempCreateLake=rulefindtempCreateLake();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefindtempCreateLake; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefindtempCreateLake"


    // $ANTLR start "rulefindtempCreateLake"
    // InternalMycnl.g:5279:1: rulefindtempCreateLake returns [EObject current=null] : ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'create' otherlv_8= 'lake' otherlv_9= 'over' otherlv_10= 'area' ( (lv_area_11_0= RULE_INT ) ) otherlv_12= 'square' otherlv_13= 'meter' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) ) | (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'create' otherlv_25= 'lake' otherlv_26= 'over' otherlv_27= 'area' ( (lv_area_28_0= RULE_INT ) ) otherlv_29= 'square' otherlv_30= 'meter' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) ) | (otherlv_34= 'what' otherlv_35= 'will' otherlv_36= 'be' otherlv_37= 'the' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Create' otherlv_42= 'Lake' otherlv_43= 'Over' otherlv_44= 'Area' ( (lv_area_45_0= RULE_INT ) ) otherlv_46= 'Square' otherlv_47= 'Meter' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) ) | (otherlv_51= 'what' otherlv_52= 'will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Create' otherlv_59= 'Lake' otherlv_60= 'Over' otherlv_61= 'Area' ( (lv_area_62_0= RULE_INT ) ) otherlv_63= 'Square' otherlv_64= 'Meter' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) ) | (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'CREATE' otherlv_76= 'LAKE' otherlv_77= 'OVER' otherlv_78= 'AREA' ( (lv_area_79_0= RULE_INT ) ) otherlv_80= 'SQUARE' otherlv_81= 'METER' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) ) ) ;
    public final EObject rulefindtempCreateLake() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token lv_area_11_0=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token lv_region_16_0=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token lv_area_28_0=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token lv_region_33_0=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token otherlv_44=null;
        Token lv_area_45_0=null;
        Token otherlv_46=null;
        Token otherlv_47=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token lv_region_50_0=null;
        Token otherlv_51=null;
        Token otherlv_52=null;
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_55=null;
        Token otherlv_56=null;
        Token otherlv_57=null;
        Token otherlv_58=null;
        Token otherlv_59=null;
        Token otherlv_60=null;
        Token otherlv_61=null;
        Token lv_area_62_0=null;
        Token otherlv_63=null;
        Token otherlv_64=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token lv_region_67_0=null;
        Token otherlv_68=null;
        Token otherlv_69=null;
        Token otherlv_70=null;
        Token otherlv_71=null;
        Token otherlv_72=null;
        Token otherlv_73=null;
        Token otherlv_74=null;
        Token otherlv_75=null;
        Token otherlv_76=null;
        Token otherlv_77=null;
        Token otherlv_78=null;
        Token lv_area_79_0=null;
        Token otherlv_80=null;
        Token otherlv_81=null;
        Token otherlv_82=null;
        Token otherlv_83=null;
        Token lv_region_84_0=null;


        	enterRule();

        try {
            // InternalMycnl.g:5285:2: ( ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'create' otherlv_8= 'lake' otherlv_9= 'over' otherlv_10= 'area' ( (lv_area_11_0= RULE_INT ) ) otherlv_12= 'square' otherlv_13= 'meter' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) ) | (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'create' otherlv_25= 'lake' otherlv_26= 'over' otherlv_27= 'area' ( (lv_area_28_0= RULE_INT ) ) otherlv_29= 'square' otherlv_30= 'meter' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) ) | (otherlv_34= 'what' otherlv_35= 'will' otherlv_36= 'be' otherlv_37= 'the' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Create' otherlv_42= 'Lake' otherlv_43= 'Over' otherlv_44= 'Area' ( (lv_area_45_0= RULE_INT ) ) otherlv_46= 'Square' otherlv_47= 'Meter' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) ) | (otherlv_51= 'what' otherlv_52= 'will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Create' otherlv_59= 'Lake' otherlv_60= 'Over' otherlv_61= 'Area' ( (lv_area_62_0= RULE_INT ) ) otherlv_63= 'Square' otherlv_64= 'Meter' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) ) | (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'CREATE' otherlv_76= 'LAKE' otherlv_77= 'OVER' otherlv_78= 'AREA' ( (lv_area_79_0= RULE_INT ) ) otherlv_80= 'SQUARE' otherlv_81= 'METER' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) ) ) )
            // InternalMycnl.g:5286:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'create' otherlv_8= 'lake' otherlv_9= 'over' otherlv_10= 'area' ( (lv_area_11_0= RULE_INT ) ) otherlv_12= 'square' otherlv_13= 'meter' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) ) | (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'create' otherlv_25= 'lake' otherlv_26= 'over' otherlv_27= 'area' ( (lv_area_28_0= RULE_INT ) ) otherlv_29= 'square' otherlv_30= 'meter' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) ) | (otherlv_34= 'what' otherlv_35= 'will' otherlv_36= 'be' otherlv_37= 'the' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Create' otherlv_42= 'Lake' otherlv_43= 'Over' otherlv_44= 'Area' ( (lv_area_45_0= RULE_INT ) ) otherlv_46= 'Square' otherlv_47= 'Meter' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) ) | (otherlv_51= 'what' otherlv_52= 'will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Create' otherlv_59= 'Lake' otherlv_60= 'Over' otherlv_61= 'Area' ( (lv_area_62_0= RULE_INT ) ) otherlv_63= 'Square' otherlv_64= 'Meter' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) ) | (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'CREATE' otherlv_76= 'LAKE' otherlv_77= 'OVER' otherlv_78= 'AREA' ( (lv_area_79_0= RULE_INT ) ) otherlv_80= 'SQUARE' otherlv_81= 'METER' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) ) )
            {
            // InternalMycnl.g:5286:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'create' otherlv_8= 'lake' otherlv_9= 'over' otherlv_10= 'area' ( (lv_area_11_0= RULE_INT ) ) otherlv_12= 'square' otherlv_13= 'meter' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) ) | (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'create' otherlv_25= 'lake' otherlv_26= 'over' otherlv_27= 'area' ( (lv_area_28_0= RULE_INT ) ) otherlv_29= 'square' otherlv_30= 'meter' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) ) | (otherlv_34= 'what' otherlv_35= 'will' otherlv_36= 'be' otherlv_37= 'the' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Create' otherlv_42= 'Lake' otherlv_43= 'Over' otherlv_44= 'Area' ( (lv_area_45_0= RULE_INT ) ) otherlv_46= 'Square' otherlv_47= 'Meter' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) ) | (otherlv_51= 'what' otherlv_52= 'will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Create' otherlv_59= 'Lake' otherlv_60= 'Over' otherlv_61= 'Area' ( (lv_area_62_0= RULE_INT ) ) otherlv_63= 'Square' otherlv_64= 'Meter' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) ) | (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'CREATE' otherlv_76= 'LAKE' otherlv_77= 'OVER' otherlv_78= 'AREA' ( (lv_area_79_0= RULE_INT ) ) otherlv_80= 'SQUARE' otherlv_81= 'METER' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) ) )
            int alt17=5;
            alt17 = dfa17.predict(input);
            switch (alt17) {
                case 1 :
                    // InternalMycnl.g:5287:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'create' otherlv_8= 'lake' otherlv_9= 'over' otherlv_10= 'area' ( (lv_area_11_0= RULE_INT ) ) otherlv_12= 'square' otherlv_13= 'meter' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:5287:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'create' otherlv_8= 'lake' otherlv_9= 'over' otherlv_10= 'area' ( (lv_area_11_0= RULE_INT ) ) otherlv_12= 'square' otherlv_13= 'meter' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) )
                    // InternalMycnl.g:5288:4: otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'create' otherlv_8= 'lake' otherlv_9= 'over' otherlv_10= 'area' ( (lv_area_11_0= RULE_INT ) ) otherlv_12= 'square' otherlv_13= 'meter' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) )
                    {
                    otherlv_0=(Token)match(input,25,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFindtempCreateLakeAccess().getWhatKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getFindtempCreateLakeAccess().getWillKeyword_0_1());
                      			
                    }
                    otherlv_2=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getFindtempCreateLakeAccess().getBeKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,28,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getFindtempCreateLakeAccess().getTheKeyword_0_3());
                      			
                    }
                    otherlv_4=(Token)match(input,29,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getFindtempCreateLakeAccess().getTemperatureKeyword_0_4());
                      			
                    }
                    otherlv_5=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getFindtempCreateLakeAccess().getIfKeyword_0_5());
                      			
                    }
                    otherlv_6=(Token)match(input,31,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getFindtempCreateLakeAccess().getWeKeyword_0_6());
                      			
                    }
                    otherlv_7=(Token)match(input,113,FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getFindtempCreateLakeAccess().getCreateKeyword_0_7());
                      			
                    }
                    otherlv_8=(Token)match(input,114,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getFindtempCreateLakeAccess().getLakeKeyword_0_8());
                      			
                    }
                    otherlv_9=(Token)match(input,115,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getFindtempCreateLakeAccess().getOverKeyword_0_9());
                      			
                    }
                    otherlv_10=(Token)match(input,78,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getFindtempCreateLakeAccess().getAreaKeyword_0_10());
                      			
                    }
                    // InternalMycnl.g:5332:4: ( (lv_area_11_0= RULE_INT ) )
                    // InternalMycnl.g:5333:5: (lv_area_11_0= RULE_INT )
                    {
                    // InternalMycnl.g:5333:5: (lv_area_11_0= RULE_INT )
                    // InternalMycnl.g:5334:6: lv_area_11_0= RULE_INT
                    {
                    lv_area_11_0=(Token)match(input,RULE_INT,FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_area_11_0, grammarAccess.getFindtempCreateLakeAccess().getAreaINTTerminalRuleCall_0_11_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempCreateLakeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"area",
                      							lv_area_11_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,102,FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getFindtempCreateLakeAccess().getSquareKeyword_0_12());
                      			
                    }
                    otherlv_13=(Token)match(input,103,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getFindtempCreateLakeAccess().getMeterKeyword_0_13());
                      			
                    }
                    otherlv_14=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getFindtempCreateLakeAccess().getInKeyword_0_14());
                      			
                    }
                    otherlv_15=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getFindtempCreateLakeAccess().getRegionKeyword_0_15());
                      			
                    }
                    // InternalMycnl.g:5366:4: ( (lv_region_16_0= RULE_INT ) )
                    // InternalMycnl.g:5367:5: (lv_region_16_0= RULE_INT )
                    {
                    // InternalMycnl.g:5367:5: (lv_region_16_0= RULE_INT )
                    // InternalMycnl.g:5368:6: lv_region_16_0= RULE_INT
                    {
                    lv_region_16_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_16_0, grammarAccess.getFindtempCreateLakeAccess().getRegionINTTerminalRuleCall_0_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempCreateLakeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_16_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:5386:3: (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'create' otherlv_25= 'lake' otherlv_26= 'over' otherlv_27= 'area' ( (lv_area_28_0= RULE_INT ) ) otherlv_29= 'square' otherlv_30= 'meter' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:5386:3: (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'create' otherlv_25= 'lake' otherlv_26= 'over' otherlv_27= 'area' ( (lv_area_28_0= RULE_INT ) ) otherlv_29= 'square' otherlv_30= 'meter' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) )
                    // InternalMycnl.g:5387:4: otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'create' otherlv_25= 'lake' otherlv_26= 'over' otherlv_27= 'area' ( (lv_area_28_0= RULE_INT ) ) otherlv_29= 'square' otherlv_30= 'meter' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) )
                    {
                    otherlv_17=(Token)match(input,37,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getFindtempCreateLakeAccess().getWhatKeyword_1_0());
                      			
                    }
                    otherlv_18=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getFindtempCreateLakeAccess().getWillKeyword_1_1());
                      			
                    }
                    otherlv_19=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getFindtempCreateLakeAccess().getBeKeyword_1_2());
                      			
                    }
                    otherlv_20=(Token)match(input,28,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getFindtempCreateLakeAccess().getTheKeyword_1_3());
                      			
                    }
                    otherlv_21=(Token)match(input,29,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_21, grammarAccess.getFindtempCreateLakeAccess().getTemperatureKeyword_1_4());
                      			
                    }
                    otherlv_22=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getFindtempCreateLakeAccess().getIfKeyword_1_5());
                      			
                    }
                    otherlv_23=(Token)match(input,31,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getFindtempCreateLakeAccess().getWeKeyword_1_6());
                      			
                    }
                    otherlv_24=(Token)match(input,113,FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_24, grammarAccess.getFindtempCreateLakeAccess().getCreateKeyword_1_7());
                      			
                    }
                    otherlv_25=(Token)match(input,114,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getFindtempCreateLakeAccess().getLakeKeyword_1_8());
                      			
                    }
                    otherlv_26=(Token)match(input,115,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getFindtempCreateLakeAccess().getOverKeyword_1_9());
                      			
                    }
                    otherlv_27=(Token)match(input,78,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_27, grammarAccess.getFindtempCreateLakeAccess().getAreaKeyword_1_10());
                      			
                    }
                    // InternalMycnl.g:5431:4: ( (lv_area_28_0= RULE_INT ) )
                    // InternalMycnl.g:5432:5: (lv_area_28_0= RULE_INT )
                    {
                    // InternalMycnl.g:5432:5: (lv_area_28_0= RULE_INT )
                    // InternalMycnl.g:5433:6: lv_area_28_0= RULE_INT
                    {
                    lv_area_28_0=(Token)match(input,RULE_INT,FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_area_28_0, grammarAccess.getFindtempCreateLakeAccess().getAreaINTTerminalRuleCall_1_11_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempCreateLakeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"area",
                      							lv_area_28_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_29=(Token)match(input,102,FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_29, grammarAccess.getFindtempCreateLakeAccess().getSquareKeyword_1_12());
                      			
                    }
                    otherlv_30=(Token)match(input,103,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_30, grammarAccess.getFindtempCreateLakeAccess().getMeterKeyword_1_13());
                      			
                    }
                    otherlv_31=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getFindtempCreateLakeAccess().getInKeyword_1_14());
                      			
                    }
                    otherlv_32=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_32, grammarAccess.getFindtempCreateLakeAccess().getRegionKeyword_1_15());
                      			
                    }
                    // InternalMycnl.g:5465:4: ( (lv_region_33_0= RULE_INT ) )
                    // InternalMycnl.g:5466:5: (lv_region_33_0= RULE_INT )
                    {
                    // InternalMycnl.g:5466:5: (lv_region_33_0= RULE_INT )
                    // InternalMycnl.g:5467:6: lv_region_33_0= RULE_INT
                    {
                    lv_region_33_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_33_0, grammarAccess.getFindtempCreateLakeAccess().getRegionINTTerminalRuleCall_1_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempCreateLakeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_33_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalMycnl.g:5485:3: (otherlv_34= 'what' otherlv_35= 'will' otherlv_36= 'be' otherlv_37= 'the' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Create' otherlv_42= 'Lake' otherlv_43= 'Over' otherlv_44= 'Area' ( (lv_area_45_0= RULE_INT ) ) otherlv_46= 'Square' otherlv_47= 'Meter' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:5485:3: (otherlv_34= 'what' otherlv_35= 'will' otherlv_36= 'be' otherlv_37= 'the' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Create' otherlv_42= 'Lake' otherlv_43= 'Over' otherlv_44= 'Area' ( (lv_area_45_0= RULE_INT ) ) otherlv_46= 'Square' otherlv_47= 'Meter' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) )
                    // InternalMycnl.g:5486:4: otherlv_34= 'what' otherlv_35= 'will' otherlv_36= 'be' otherlv_37= 'the' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Create' otherlv_42= 'Lake' otherlv_43= 'Over' otherlv_44= 'Area' ( (lv_area_45_0= RULE_INT ) ) otherlv_46= 'Square' otherlv_47= 'Meter' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) )
                    {
                    otherlv_34=(Token)match(input,25,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_34, grammarAccess.getFindtempCreateLakeAccess().getWhatKeyword_2_0());
                      			
                    }
                    otherlv_35=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_35, grammarAccess.getFindtempCreateLakeAccess().getWillKeyword_2_1());
                      			
                    }
                    otherlv_36=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_36, grammarAccess.getFindtempCreateLakeAccess().getBeKeyword_2_2());
                      			
                    }
                    otherlv_37=(Token)match(input,28,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_37, grammarAccess.getFindtempCreateLakeAccess().getTheKeyword_2_3());
                      			
                    }
                    otherlv_38=(Token)match(input,41,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_38, grammarAccess.getFindtempCreateLakeAccess().getTemperatureKeyword_2_4());
                      			
                    }
                    otherlv_39=(Token)match(input,42,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_39, grammarAccess.getFindtempCreateLakeAccess().getIfKeyword_2_5());
                      			
                    }
                    otherlv_40=(Token)match(input,43,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_40, grammarAccess.getFindtempCreateLakeAccess().getWeKeyword_2_6());
                      			
                    }
                    otherlv_41=(Token)match(input,116,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_41, grammarAccess.getFindtempCreateLakeAccess().getCreateKeyword_2_7());
                      			
                    }
                    otherlv_42=(Token)match(input,117,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getFindtempCreateLakeAccess().getLakeKeyword_2_8());
                      			
                    }
                    otherlv_43=(Token)match(input,118,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_43, grammarAccess.getFindtempCreateLakeAccess().getOverKeyword_2_9());
                      			
                    }
                    otherlv_44=(Token)match(input,84,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_44, grammarAccess.getFindtempCreateLakeAccess().getAreaKeyword_2_10());
                      			
                    }
                    // InternalMycnl.g:5530:4: ( (lv_area_45_0= RULE_INT ) )
                    // InternalMycnl.g:5531:5: (lv_area_45_0= RULE_INT )
                    {
                    // InternalMycnl.g:5531:5: (lv_area_45_0= RULE_INT )
                    // InternalMycnl.g:5532:6: lv_area_45_0= RULE_INT
                    {
                    lv_area_45_0=(Token)match(input,RULE_INT,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_area_45_0, grammarAccess.getFindtempCreateLakeAccess().getAreaINTTerminalRuleCall_2_11_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempCreateLakeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"area",
                      							lv_area_45_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_46=(Token)match(input,105,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_46, grammarAccess.getFindtempCreateLakeAccess().getSquareKeyword_2_12());
                      			
                    }
                    otherlv_47=(Token)match(input,106,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_47, grammarAccess.getFindtempCreateLakeAccess().getMeterKeyword_2_13());
                      			
                    }
                    otherlv_48=(Token)match(input,47,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getFindtempCreateLakeAccess().getInKeyword_2_14());
                      			
                    }
                    otherlv_49=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_49, grammarAccess.getFindtempCreateLakeAccess().getRegionKeyword_2_15());
                      			
                    }
                    // InternalMycnl.g:5564:4: ( (lv_region_50_0= RULE_INT ) )
                    // InternalMycnl.g:5565:5: (lv_region_50_0= RULE_INT )
                    {
                    // InternalMycnl.g:5565:5: (lv_region_50_0= RULE_INT )
                    // InternalMycnl.g:5566:6: lv_region_50_0= RULE_INT
                    {
                    lv_region_50_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_50_0, grammarAccess.getFindtempCreateLakeAccess().getRegionINTTerminalRuleCall_2_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempCreateLakeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_50_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalMycnl.g:5584:3: (otherlv_51= 'what' otherlv_52= 'will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Create' otherlv_59= 'Lake' otherlv_60= 'Over' otherlv_61= 'Area' ( (lv_area_62_0= RULE_INT ) ) otherlv_63= 'Square' otherlv_64= 'Meter' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:5584:3: (otherlv_51= 'what' otherlv_52= 'will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Create' otherlv_59= 'Lake' otherlv_60= 'Over' otherlv_61= 'Area' ( (lv_area_62_0= RULE_INT ) ) otherlv_63= 'Square' otherlv_64= 'Meter' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) )
                    // InternalMycnl.g:5585:4: otherlv_51= 'what' otherlv_52= 'will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Create' otherlv_59= 'Lake' otherlv_60= 'Over' otherlv_61= 'Area' ( (lv_area_62_0= RULE_INT ) ) otherlv_63= 'Square' otherlv_64= 'Meter' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) )
                    {
                    otherlv_51=(Token)match(input,25,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_51, grammarAccess.getFindtempCreateLakeAccess().getWhatKeyword_3_0());
                      			
                    }
                    otherlv_52=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_52, grammarAccess.getFindtempCreateLakeAccess().getWillKeyword_3_1());
                      			
                    }
                    otherlv_53=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_53, grammarAccess.getFindtempCreateLakeAccess().getBeKeyword_3_2());
                      			
                    }
                    otherlv_54=(Token)match(input,28,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_54, grammarAccess.getFindtempCreateLakeAccess().getTheKeyword_3_3());
                      			
                    }
                    otherlv_55=(Token)match(input,41,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_55, grammarAccess.getFindtempCreateLakeAccess().getTemperatureKeyword_3_4());
                      			
                    }
                    otherlv_56=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_56, grammarAccess.getFindtempCreateLakeAccess().getIfKeyword_3_5());
                      			
                    }
                    otherlv_57=(Token)match(input,31,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_57, grammarAccess.getFindtempCreateLakeAccess().getWeKeyword_3_6());
                      			
                    }
                    otherlv_58=(Token)match(input,116,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_58, grammarAccess.getFindtempCreateLakeAccess().getCreateKeyword_3_7());
                      			
                    }
                    otherlv_59=(Token)match(input,117,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_59, grammarAccess.getFindtempCreateLakeAccess().getLakeKeyword_3_8());
                      			
                    }
                    otherlv_60=(Token)match(input,118,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_60, grammarAccess.getFindtempCreateLakeAccess().getOverKeyword_3_9());
                      			
                    }
                    otherlv_61=(Token)match(input,84,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_61, grammarAccess.getFindtempCreateLakeAccess().getAreaKeyword_3_10());
                      			
                    }
                    // InternalMycnl.g:5629:4: ( (lv_area_62_0= RULE_INT ) )
                    // InternalMycnl.g:5630:5: (lv_area_62_0= RULE_INT )
                    {
                    // InternalMycnl.g:5630:5: (lv_area_62_0= RULE_INT )
                    // InternalMycnl.g:5631:6: lv_area_62_0= RULE_INT
                    {
                    lv_area_62_0=(Token)match(input,RULE_INT,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_area_62_0, grammarAccess.getFindtempCreateLakeAccess().getAreaINTTerminalRuleCall_3_11_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempCreateLakeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"area",
                      							lv_area_62_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_63=(Token)match(input,105,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_63, grammarAccess.getFindtempCreateLakeAccess().getSquareKeyword_3_12());
                      			
                    }
                    otherlv_64=(Token)match(input,106,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_64, grammarAccess.getFindtempCreateLakeAccess().getMeterKeyword_3_13());
                      			
                    }
                    otherlv_65=(Token)match(input,36,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_65, grammarAccess.getFindtempCreateLakeAccess().getInKeyword_3_14());
                      			
                    }
                    otherlv_66=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_66, grammarAccess.getFindtempCreateLakeAccess().getRegionKeyword_3_15());
                      			
                    }
                    // InternalMycnl.g:5663:4: ( (lv_region_67_0= RULE_INT ) )
                    // InternalMycnl.g:5664:5: (lv_region_67_0= RULE_INT )
                    {
                    // InternalMycnl.g:5664:5: (lv_region_67_0= RULE_INT )
                    // InternalMycnl.g:5665:6: lv_region_67_0= RULE_INT
                    {
                    lv_region_67_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_67_0, grammarAccess.getFindtempCreateLakeAccess().getRegionINTTerminalRuleCall_3_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempCreateLakeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_67_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalMycnl.g:5683:3: (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'CREATE' otherlv_76= 'LAKE' otherlv_77= 'OVER' otherlv_78= 'AREA' ( (lv_area_79_0= RULE_INT ) ) otherlv_80= 'SQUARE' otherlv_81= 'METER' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:5683:3: (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'CREATE' otherlv_76= 'LAKE' otherlv_77= 'OVER' otherlv_78= 'AREA' ( (lv_area_79_0= RULE_INT ) ) otherlv_80= 'SQUARE' otherlv_81= 'METER' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) )
                    // InternalMycnl.g:5684:4: otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'CREATE' otherlv_76= 'LAKE' otherlv_77= 'OVER' otherlv_78= 'AREA' ( (lv_area_79_0= RULE_INT ) ) otherlv_80= 'SQUARE' otherlv_81= 'METER' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) )
                    {
                    otherlv_68=(Token)match(input,48,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_68, grammarAccess.getFindtempCreateLakeAccess().getWHATKeyword_4_0());
                      			
                    }
                    otherlv_69=(Token)match(input,49,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_69, grammarAccess.getFindtempCreateLakeAccess().getWILLKeyword_4_1());
                      			
                    }
                    otherlv_70=(Token)match(input,50,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_70, grammarAccess.getFindtempCreateLakeAccess().getBEKeyword_4_2());
                      			
                    }
                    otherlv_71=(Token)match(input,51,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_71, grammarAccess.getFindtempCreateLakeAccess().getTHEKeyword_4_3());
                      			
                    }
                    otherlv_72=(Token)match(input,52,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_72, grammarAccess.getFindtempCreateLakeAccess().getTEMPERATUREKeyword_4_4());
                      			
                    }
                    otherlv_73=(Token)match(input,53,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_73, grammarAccess.getFindtempCreateLakeAccess().getIFKeyword_4_5());
                      			
                    }
                    otherlv_74=(Token)match(input,54,FOLLOW_105); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_74, grammarAccess.getFindtempCreateLakeAccess().getWEKeyword_4_6());
                      			
                    }
                    otherlv_75=(Token)match(input,119,FOLLOW_106); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_75, grammarAccess.getFindtempCreateLakeAccess().getCREATEKeyword_4_7());
                      			
                    }
                    otherlv_76=(Token)match(input,120,FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_76, grammarAccess.getFindtempCreateLakeAccess().getLAKEKeyword_4_8());
                      			
                    }
                    otherlv_77=(Token)match(input,121,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_77, grammarAccess.getFindtempCreateLakeAccess().getOVERKeyword_4_9());
                      			
                    }
                    otherlv_78=(Token)match(input,90,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_78, grammarAccess.getFindtempCreateLakeAccess().getAREAKeyword_4_10());
                      			
                    }
                    // InternalMycnl.g:5728:4: ( (lv_area_79_0= RULE_INT ) )
                    // InternalMycnl.g:5729:5: (lv_area_79_0= RULE_INT )
                    {
                    // InternalMycnl.g:5729:5: (lv_area_79_0= RULE_INT )
                    // InternalMycnl.g:5730:6: lv_area_79_0= RULE_INT
                    {
                    lv_area_79_0=(Token)match(input,RULE_INT,FOLLOW_94); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_area_79_0, grammarAccess.getFindtempCreateLakeAccess().getAreaINTTerminalRuleCall_4_11_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempCreateLakeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"area",
                      							lv_area_79_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_80=(Token)match(input,108,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_80, grammarAccess.getFindtempCreateLakeAccess().getSQUAREKeyword_4_12());
                      			
                    }
                    otherlv_81=(Token)match(input,109,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_81, grammarAccess.getFindtempCreateLakeAccess().getMETERKeyword_4_13());
                      			
                    }
                    otherlv_82=(Token)match(input,58,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_82, grammarAccess.getFindtempCreateLakeAccess().getINKeyword_4_14());
                      			
                    }
                    otherlv_83=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_83, grammarAccess.getFindtempCreateLakeAccess().getREGIONKeyword_4_15());
                      			
                    }
                    // InternalMycnl.g:5762:4: ( (lv_region_84_0= RULE_INT ) )
                    // InternalMycnl.g:5763:5: (lv_region_84_0= RULE_INT )
                    {
                    // InternalMycnl.g:5763:5: (lv_region_84_0= RULE_INT )
                    // InternalMycnl.g:5764:6: lv_region_84_0= RULE_INT
                    {
                    lv_region_84_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_84_0, grammarAccess.getFindtempCreateLakeAccess().getRegionINTTerminalRuleCall_4_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempCreateLakeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_84_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefindtempCreateLake"


    // $ANTLR start "entryRulefindtempRemoveLake"
    // InternalMycnl.g:5785:1: entryRulefindtempRemoveLake returns [EObject current=null] : iv_rulefindtempRemoveLake= rulefindtempRemoveLake EOF ;
    public final EObject entryRulefindtempRemoveLake() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefindtempRemoveLake = null;


        try {
            // InternalMycnl.g:5785:59: (iv_rulefindtempRemoveLake= rulefindtempRemoveLake EOF )
            // InternalMycnl.g:5786:2: iv_rulefindtempRemoveLake= rulefindtempRemoveLake EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFindtempRemoveLakeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefindtempRemoveLake=rulefindtempRemoveLake();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefindtempRemoveLake; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefindtempRemoveLake"


    // $ANTLR start "rulefindtempRemoveLake"
    // InternalMycnl.g:5792:1: rulefindtempRemoveLake returns [EObject current=null] : ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'remove' otherlv_8= 'lake' otherlv_9= 'over' otherlv_10= 'area' ( (lv_area_11_0= RULE_INT ) ) otherlv_12= 'square' otherlv_13= 'meter' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) ) | (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'remove' otherlv_25= 'lake' otherlv_26= 'over' otherlv_27= 'area' ( (lv_area_28_0= RULE_INT ) ) otherlv_29= 'square' otherlv_30= 'meter' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) ) | (otherlv_34= 'What' otherlv_35= 'Will' otherlv_36= 'Be' otherlv_37= 'The' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Remove' otherlv_42= 'Lake' otherlv_43= 'Over' otherlv_44= 'Area' ( (lv_area_45_0= RULE_INT ) ) otherlv_46= 'Square' otherlv_47= 'Meter' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) ) | (otherlv_51= 'What' otherlv_52= 'Will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Remove' otherlv_59= 'Lake' otherlv_60= 'Over' otherlv_61= 'Area' ( (lv_area_62_0= RULE_INT ) ) otherlv_63= 'Square' otherlv_64= 'Meter' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) ) | (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'REMOVE' otherlv_76= 'LAKE' otherlv_77= 'OVER' otherlv_78= 'AREA' ( (lv_area_79_0= RULE_INT ) ) otherlv_80= 'SQUARE' otherlv_81= 'METER' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) ) ) ;
    public final EObject rulefindtempRemoveLake() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token lv_area_11_0=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token lv_region_16_0=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token lv_area_28_0=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token lv_region_33_0=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token otherlv_44=null;
        Token lv_area_45_0=null;
        Token otherlv_46=null;
        Token otherlv_47=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token lv_region_50_0=null;
        Token otherlv_51=null;
        Token otherlv_52=null;
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_55=null;
        Token otherlv_56=null;
        Token otherlv_57=null;
        Token otherlv_58=null;
        Token otherlv_59=null;
        Token otherlv_60=null;
        Token otherlv_61=null;
        Token lv_area_62_0=null;
        Token otherlv_63=null;
        Token otherlv_64=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token lv_region_67_0=null;
        Token otherlv_68=null;
        Token otherlv_69=null;
        Token otherlv_70=null;
        Token otherlv_71=null;
        Token otherlv_72=null;
        Token otherlv_73=null;
        Token otherlv_74=null;
        Token otherlv_75=null;
        Token otherlv_76=null;
        Token otherlv_77=null;
        Token otherlv_78=null;
        Token lv_area_79_0=null;
        Token otherlv_80=null;
        Token otherlv_81=null;
        Token otherlv_82=null;
        Token otherlv_83=null;
        Token lv_region_84_0=null;


        	enterRule();

        try {
            // InternalMycnl.g:5798:2: ( ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'remove' otherlv_8= 'lake' otherlv_9= 'over' otherlv_10= 'area' ( (lv_area_11_0= RULE_INT ) ) otherlv_12= 'square' otherlv_13= 'meter' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) ) | (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'remove' otherlv_25= 'lake' otherlv_26= 'over' otherlv_27= 'area' ( (lv_area_28_0= RULE_INT ) ) otherlv_29= 'square' otherlv_30= 'meter' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) ) | (otherlv_34= 'What' otherlv_35= 'Will' otherlv_36= 'Be' otherlv_37= 'The' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Remove' otherlv_42= 'Lake' otherlv_43= 'Over' otherlv_44= 'Area' ( (lv_area_45_0= RULE_INT ) ) otherlv_46= 'Square' otherlv_47= 'Meter' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) ) | (otherlv_51= 'What' otherlv_52= 'Will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Remove' otherlv_59= 'Lake' otherlv_60= 'Over' otherlv_61= 'Area' ( (lv_area_62_0= RULE_INT ) ) otherlv_63= 'Square' otherlv_64= 'Meter' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) ) | (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'REMOVE' otherlv_76= 'LAKE' otherlv_77= 'OVER' otherlv_78= 'AREA' ( (lv_area_79_0= RULE_INT ) ) otherlv_80= 'SQUARE' otherlv_81= 'METER' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) ) ) )
            // InternalMycnl.g:5799:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'remove' otherlv_8= 'lake' otherlv_9= 'over' otherlv_10= 'area' ( (lv_area_11_0= RULE_INT ) ) otherlv_12= 'square' otherlv_13= 'meter' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) ) | (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'remove' otherlv_25= 'lake' otherlv_26= 'over' otherlv_27= 'area' ( (lv_area_28_0= RULE_INT ) ) otherlv_29= 'square' otherlv_30= 'meter' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) ) | (otherlv_34= 'What' otherlv_35= 'Will' otherlv_36= 'Be' otherlv_37= 'The' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Remove' otherlv_42= 'Lake' otherlv_43= 'Over' otherlv_44= 'Area' ( (lv_area_45_0= RULE_INT ) ) otherlv_46= 'Square' otherlv_47= 'Meter' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) ) | (otherlv_51= 'What' otherlv_52= 'Will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Remove' otherlv_59= 'Lake' otherlv_60= 'Over' otherlv_61= 'Area' ( (lv_area_62_0= RULE_INT ) ) otherlv_63= 'Square' otherlv_64= 'Meter' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) ) | (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'REMOVE' otherlv_76= 'LAKE' otherlv_77= 'OVER' otherlv_78= 'AREA' ( (lv_area_79_0= RULE_INT ) ) otherlv_80= 'SQUARE' otherlv_81= 'METER' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) ) )
            {
            // InternalMycnl.g:5799:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'remove' otherlv_8= 'lake' otherlv_9= 'over' otherlv_10= 'area' ( (lv_area_11_0= RULE_INT ) ) otherlv_12= 'square' otherlv_13= 'meter' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) ) | (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'remove' otherlv_25= 'lake' otherlv_26= 'over' otherlv_27= 'area' ( (lv_area_28_0= RULE_INT ) ) otherlv_29= 'square' otherlv_30= 'meter' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) ) | (otherlv_34= 'What' otherlv_35= 'Will' otherlv_36= 'Be' otherlv_37= 'The' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Remove' otherlv_42= 'Lake' otherlv_43= 'Over' otherlv_44= 'Area' ( (lv_area_45_0= RULE_INT ) ) otherlv_46= 'Square' otherlv_47= 'Meter' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) ) | (otherlv_51= 'What' otherlv_52= 'Will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Remove' otherlv_59= 'Lake' otherlv_60= 'Over' otherlv_61= 'Area' ( (lv_area_62_0= RULE_INT ) ) otherlv_63= 'Square' otherlv_64= 'Meter' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) ) | (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'REMOVE' otherlv_76= 'LAKE' otherlv_77= 'OVER' otherlv_78= 'AREA' ( (lv_area_79_0= RULE_INT ) ) otherlv_80= 'SQUARE' otherlv_81= 'METER' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) ) )
            int alt18=5;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt18=1;
                }
                break;
            case 37:
                {
                int LA18_2 = input.LA(2);

                if ( (LA18_2==38) ) {
                    int LA18_4 = input.LA(3);

                    if ( (LA18_4==27) ) {
                        alt18=4;
                    }
                    else if ( (LA18_4==39) ) {
                        alt18=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 18, 4, input);

                        throw nvae;
                    }
                }
                else if ( (LA18_2==26) ) {
                    alt18=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 18, 2, input);

                    throw nvae;
                }
                }
                break;
            case 48:
                {
                alt18=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalMycnl.g:5800:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'remove' otherlv_8= 'lake' otherlv_9= 'over' otherlv_10= 'area' ( (lv_area_11_0= RULE_INT ) ) otherlv_12= 'square' otherlv_13= 'meter' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:5800:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'remove' otherlv_8= 'lake' otherlv_9= 'over' otherlv_10= 'area' ( (lv_area_11_0= RULE_INT ) ) otherlv_12= 'square' otherlv_13= 'meter' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) )
                    // InternalMycnl.g:5801:4: otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'remove' otherlv_8= 'lake' otherlv_9= 'over' otherlv_10= 'area' ( (lv_area_11_0= RULE_INT ) ) otherlv_12= 'square' otherlv_13= 'meter' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) )
                    {
                    otherlv_0=(Token)match(input,25,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getFindtempRemoveLakeAccess().getWhatKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getFindtempRemoveLakeAccess().getWillKeyword_0_1());
                      			
                    }
                    otherlv_2=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getFindtempRemoveLakeAccess().getBeKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,28,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getFindtempRemoveLakeAccess().getTheKeyword_0_3());
                      			
                    }
                    otherlv_4=(Token)match(input,29,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getFindtempRemoveLakeAccess().getTemperatureKeyword_0_4());
                      			
                    }
                    otherlv_5=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getFindtempRemoveLakeAccess().getIfKeyword_0_5());
                      			
                    }
                    otherlv_6=(Token)match(input,31,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getFindtempRemoveLakeAccess().getWeKeyword_0_6());
                      			
                    }
                    otherlv_7=(Token)match(input,110,FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getFindtempRemoveLakeAccess().getRemoveKeyword_0_7());
                      			
                    }
                    otherlv_8=(Token)match(input,114,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getFindtempRemoveLakeAccess().getLakeKeyword_0_8());
                      			
                    }
                    otherlv_9=(Token)match(input,115,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getFindtempRemoveLakeAccess().getOverKeyword_0_9());
                      			
                    }
                    otherlv_10=(Token)match(input,78,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getFindtempRemoveLakeAccess().getAreaKeyword_0_10());
                      			
                    }
                    // InternalMycnl.g:5845:4: ( (lv_area_11_0= RULE_INT ) )
                    // InternalMycnl.g:5846:5: (lv_area_11_0= RULE_INT )
                    {
                    // InternalMycnl.g:5846:5: (lv_area_11_0= RULE_INT )
                    // InternalMycnl.g:5847:6: lv_area_11_0= RULE_INT
                    {
                    lv_area_11_0=(Token)match(input,RULE_INT,FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_area_11_0, grammarAccess.getFindtempRemoveLakeAccess().getAreaINTTerminalRuleCall_0_11_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempRemoveLakeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"area",
                      							lv_area_11_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,102,FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getFindtempRemoveLakeAccess().getSquareKeyword_0_12());
                      			
                    }
                    otherlv_13=(Token)match(input,103,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getFindtempRemoveLakeAccess().getMeterKeyword_0_13());
                      			
                    }
                    otherlv_14=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getFindtempRemoveLakeAccess().getInKeyword_0_14());
                      			
                    }
                    otherlv_15=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getFindtempRemoveLakeAccess().getRegionKeyword_0_15());
                      			
                    }
                    // InternalMycnl.g:5879:4: ( (lv_region_16_0= RULE_INT ) )
                    // InternalMycnl.g:5880:5: (lv_region_16_0= RULE_INT )
                    {
                    // InternalMycnl.g:5880:5: (lv_region_16_0= RULE_INT )
                    // InternalMycnl.g:5881:6: lv_region_16_0= RULE_INT
                    {
                    lv_region_16_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_16_0, grammarAccess.getFindtempRemoveLakeAccess().getRegionINTTerminalRuleCall_0_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempRemoveLakeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_16_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:5899:3: (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'remove' otherlv_25= 'lake' otherlv_26= 'over' otherlv_27= 'area' ( (lv_area_28_0= RULE_INT ) ) otherlv_29= 'square' otherlv_30= 'meter' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:5899:3: (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'remove' otherlv_25= 'lake' otherlv_26= 'over' otherlv_27= 'area' ( (lv_area_28_0= RULE_INT ) ) otherlv_29= 'square' otherlv_30= 'meter' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) )
                    // InternalMycnl.g:5900:4: otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'remove' otherlv_25= 'lake' otherlv_26= 'over' otherlv_27= 'area' ( (lv_area_28_0= RULE_INT ) ) otherlv_29= 'square' otherlv_30= 'meter' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) )
                    {
                    otherlv_17=(Token)match(input,37,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getFindtempRemoveLakeAccess().getWhatKeyword_1_0());
                      			
                    }
                    otherlv_18=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getFindtempRemoveLakeAccess().getWillKeyword_1_1());
                      			
                    }
                    otherlv_19=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getFindtempRemoveLakeAccess().getBeKeyword_1_2());
                      			
                    }
                    otherlv_20=(Token)match(input,28,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getFindtempRemoveLakeAccess().getTheKeyword_1_3());
                      			
                    }
                    otherlv_21=(Token)match(input,29,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_21, grammarAccess.getFindtempRemoveLakeAccess().getTemperatureKeyword_1_4());
                      			
                    }
                    otherlv_22=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getFindtempRemoveLakeAccess().getIfKeyword_1_5());
                      			
                    }
                    otherlv_23=(Token)match(input,31,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getFindtempRemoveLakeAccess().getWeKeyword_1_6());
                      			
                    }
                    otherlv_24=(Token)match(input,110,FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_24, grammarAccess.getFindtempRemoveLakeAccess().getRemoveKeyword_1_7());
                      			
                    }
                    otherlv_25=(Token)match(input,114,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getFindtempRemoveLakeAccess().getLakeKeyword_1_8());
                      			
                    }
                    otherlv_26=(Token)match(input,115,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getFindtempRemoveLakeAccess().getOverKeyword_1_9());
                      			
                    }
                    otherlv_27=(Token)match(input,78,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_27, grammarAccess.getFindtempRemoveLakeAccess().getAreaKeyword_1_10());
                      			
                    }
                    // InternalMycnl.g:5944:4: ( (lv_area_28_0= RULE_INT ) )
                    // InternalMycnl.g:5945:5: (lv_area_28_0= RULE_INT )
                    {
                    // InternalMycnl.g:5945:5: (lv_area_28_0= RULE_INT )
                    // InternalMycnl.g:5946:6: lv_area_28_0= RULE_INT
                    {
                    lv_area_28_0=(Token)match(input,RULE_INT,FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_area_28_0, grammarAccess.getFindtempRemoveLakeAccess().getAreaINTTerminalRuleCall_1_11_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempRemoveLakeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"area",
                      							lv_area_28_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_29=(Token)match(input,102,FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_29, grammarAccess.getFindtempRemoveLakeAccess().getSquareKeyword_1_12());
                      			
                    }
                    otherlv_30=(Token)match(input,103,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_30, grammarAccess.getFindtempRemoveLakeAccess().getMeterKeyword_1_13());
                      			
                    }
                    otherlv_31=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getFindtempRemoveLakeAccess().getInKeyword_1_14());
                      			
                    }
                    otherlv_32=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_32, grammarAccess.getFindtempRemoveLakeAccess().getRegionKeyword_1_15());
                      			
                    }
                    // InternalMycnl.g:5978:4: ( (lv_region_33_0= RULE_INT ) )
                    // InternalMycnl.g:5979:5: (lv_region_33_0= RULE_INT )
                    {
                    // InternalMycnl.g:5979:5: (lv_region_33_0= RULE_INT )
                    // InternalMycnl.g:5980:6: lv_region_33_0= RULE_INT
                    {
                    lv_region_33_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_33_0, grammarAccess.getFindtempRemoveLakeAccess().getRegionINTTerminalRuleCall_1_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempRemoveLakeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_33_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalMycnl.g:5998:3: (otherlv_34= 'What' otherlv_35= 'Will' otherlv_36= 'Be' otherlv_37= 'The' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Remove' otherlv_42= 'Lake' otherlv_43= 'Over' otherlv_44= 'Area' ( (lv_area_45_0= RULE_INT ) ) otherlv_46= 'Square' otherlv_47= 'Meter' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:5998:3: (otherlv_34= 'What' otherlv_35= 'Will' otherlv_36= 'Be' otherlv_37= 'The' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Remove' otherlv_42= 'Lake' otherlv_43= 'Over' otherlv_44= 'Area' ( (lv_area_45_0= RULE_INT ) ) otherlv_46= 'Square' otherlv_47= 'Meter' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) )
                    // InternalMycnl.g:5999:4: otherlv_34= 'What' otherlv_35= 'Will' otherlv_36= 'Be' otherlv_37= 'The' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Remove' otherlv_42= 'Lake' otherlv_43= 'Over' otherlv_44= 'Area' ( (lv_area_45_0= RULE_INT ) ) otherlv_46= 'Square' otherlv_47= 'Meter' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) )
                    {
                    otherlv_34=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_34, grammarAccess.getFindtempRemoveLakeAccess().getWhatKeyword_2_0());
                      			
                    }
                    otherlv_35=(Token)match(input,38,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_35, grammarAccess.getFindtempRemoveLakeAccess().getWillKeyword_2_1());
                      			
                    }
                    otherlv_36=(Token)match(input,39,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_36, grammarAccess.getFindtempRemoveLakeAccess().getBeKeyword_2_2());
                      			
                    }
                    otherlv_37=(Token)match(input,40,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_37, grammarAccess.getFindtempRemoveLakeAccess().getTheKeyword_2_3());
                      			
                    }
                    otherlv_38=(Token)match(input,41,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_38, grammarAccess.getFindtempRemoveLakeAccess().getTemperatureKeyword_2_4());
                      			
                    }
                    otherlv_39=(Token)match(input,42,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_39, grammarAccess.getFindtempRemoveLakeAccess().getIfKeyword_2_5());
                      			
                    }
                    otherlv_40=(Token)match(input,43,FOLLOW_97); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_40, grammarAccess.getFindtempRemoveLakeAccess().getWeKeyword_2_6());
                      			
                    }
                    otherlv_41=(Token)match(input,111,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_41, grammarAccess.getFindtempRemoveLakeAccess().getRemoveKeyword_2_7());
                      			
                    }
                    otherlv_42=(Token)match(input,117,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getFindtempRemoveLakeAccess().getLakeKeyword_2_8());
                      			
                    }
                    otherlv_43=(Token)match(input,118,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_43, grammarAccess.getFindtempRemoveLakeAccess().getOverKeyword_2_9());
                      			
                    }
                    otherlv_44=(Token)match(input,84,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_44, grammarAccess.getFindtempRemoveLakeAccess().getAreaKeyword_2_10());
                      			
                    }
                    // InternalMycnl.g:6043:4: ( (lv_area_45_0= RULE_INT ) )
                    // InternalMycnl.g:6044:5: (lv_area_45_0= RULE_INT )
                    {
                    // InternalMycnl.g:6044:5: (lv_area_45_0= RULE_INT )
                    // InternalMycnl.g:6045:6: lv_area_45_0= RULE_INT
                    {
                    lv_area_45_0=(Token)match(input,RULE_INT,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_area_45_0, grammarAccess.getFindtempRemoveLakeAccess().getAreaINTTerminalRuleCall_2_11_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempRemoveLakeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"area",
                      							lv_area_45_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_46=(Token)match(input,105,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_46, grammarAccess.getFindtempRemoveLakeAccess().getSquareKeyword_2_12());
                      			
                    }
                    otherlv_47=(Token)match(input,106,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_47, grammarAccess.getFindtempRemoveLakeAccess().getMeterKeyword_2_13());
                      			
                    }
                    otherlv_48=(Token)match(input,47,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getFindtempRemoveLakeAccess().getInKeyword_2_14());
                      			
                    }
                    otherlv_49=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_49, grammarAccess.getFindtempRemoveLakeAccess().getRegionKeyword_2_15());
                      			
                    }
                    // InternalMycnl.g:6077:4: ( (lv_region_50_0= RULE_INT ) )
                    // InternalMycnl.g:6078:5: (lv_region_50_0= RULE_INT )
                    {
                    // InternalMycnl.g:6078:5: (lv_region_50_0= RULE_INT )
                    // InternalMycnl.g:6079:6: lv_region_50_0= RULE_INT
                    {
                    lv_region_50_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_50_0, grammarAccess.getFindtempRemoveLakeAccess().getRegionINTTerminalRuleCall_2_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempRemoveLakeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_50_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalMycnl.g:6097:3: (otherlv_51= 'What' otherlv_52= 'Will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Remove' otherlv_59= 'Lake' otherlv_60= 'Over' otherlv_61= 'Area' ( (lv_area_62_0= RULE_INT ) ) otherlv_63= 'Square' otherlv_64= 'Meter' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:6097:3: (otherlv_51= 'What' otherlv_52= 'Will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Remove' otherlv_59= 'Lake' otherlv_60= 'Over' otherlv_61= 'Area' ( (lv_area_62_0= RULE_INT ) ) otherlv_63= 'Square' otherlv_64= 'Meter' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) )
                    // InternalMycnl.g:6098:4: otherlv_51= 'What' otherlv_52= 'Will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Remove' otherlv_59= 'Lake' otherlv_60= 'Over' otherlv_61= 'Area' ( (lv_area_62_0= RULE_INT ) ) otherlv_63= 'Square' otherlv_64= 'Meter' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) )
                    {
                    otherlv_51=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_51, grammarAccess.getFindtempRemoveLakeAccess().getWhatKeyword_3_0());
                      			
                    }
                    otherlv_52=(Token)match(input,38,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_52, grammarAccess.getFindtempRemoveLakeAccess().getWillKeyword_3_1());
                      			
                    }
                    otherlv_53=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_53, grammarAccess.getFindtempRemoveLakeAccess().getBeKeyword_3_2());
                      			
                    }
                    otherlv_54=(Token)match(input,28,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_54, grammarAccess.getFindtempRemoveLakeAccess().getTheKeyword_3_3());
                      			
                    }
                    otherlv_55=(Token)match(input,41,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_55, grammarAccess.getFindtempRemoveLakeAccess().getTemperatureKeyword_3_4());
                      			
                    }
                    otherlv_56=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_56, grammarAccess.getFindtempRemoveLakeAccess().getIfKeyword_3_5());
                      			
                    }
                    otherlv_57=(Token)match(input,31,FOLLOW_97); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_57, grammarAccess.getFindtempRemoveLakeAccess().getWeKeyword_3_6());
                      			
                    }
                    otherlv_58=(Token)match(input,111,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_58, grammarAccess.getFindtempRemoveLakeAccess().getRemoveKeyword_3_7());
                      			
                    }
                    otherlv_59=(Token)match(input,117,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_59, grammarAccess.getFindtempRemoveLakeAccess().getLakeKeyword_3_8());
                      			
                    }
                    otherlv_60=(Token)match(input,118,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_60, grammarAccess.getFindtempRemoveLakeAccess().getOverKeyword_3_9());
                      			
                    }
                    otherlv_61=(Token)match(input,84,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_61, grammarAccess.getFindtempRemoveLakeAccess().getAreaKeyword_3_10());
                      			
                    }
                    // InternalMycnl.g:6142:4: ( (lv_area_62_0= RULE_INT ) )
                    // InternalMycnl.g:6143:5: (lv_area_62_0= RULE_INT )
                    {
                    // InternalMycnl.g:6143:5: (lv_area_62_0= RULE_INT )
                    // InternalMycnl.g:6144:6: lv_area_62_0= RULE_INT
                    {
                    lv_area_62_0=(Token)match(input,RULE_INT,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_area_62_0, grammarAccess.getFindtempRemoveLakeAccess().getAreaINTTerminalRuleCall_3_11_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempRemoveLakeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"area",
                      							lv_area_62_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_63=(Token)match(input,105,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_63, grammarAccess.getFindtempRemoveLakeAccess().getSquareKeyword_3_12());
                      			
                    }
                    otherlv_64=(Token)match(input,106,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_64, grammarAccess.getFindtempRemoveLakeAccess().getMeterKeyword_3_13());
                      			
                    }
                    otherlv_65=(Token)match(input,36,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_65, grammarAccess.getFindtempRemoveLakeAccess().getInKeyword_3_14());
                      			
                    }
                    otherlv_66=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_66, grammarAccess.getFindtempRemoveLakeAccess().getRegionKeyword_3_15());
                      			
                    }
                    // InternalMycnl.g:6176:4: ( (lv_region_67_0= RULE_INT ) )
                    // InternalMycnl.g:6177:5: (lv_region_67_0= RULE_INT )
                    {
                    // InternalMycnl.g:6177:5: (lv_region_67_0= RULE_INT )
                    // InternalMycnl.g:6178:6: lv_region_67_0= RULE_INT
                    {
                    lv_region_67_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_67_0, grammarAccess.getFindtempRemoveLakeAccess().getRegionINTTerminalRuleCall_3_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempRemoveLakeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_67_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalMycnl.g:6196:3: (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'REMOVE' otherlv_76= 'LAKE' otherlv_77= 'OVER' otherlv_78= 'AREA' ( (lv_area_79_0= RULE_INT ) ) otherlv_80= 'SQUARE' otherlv_81= 'METER' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:6196:3: (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'REMOVE' otherlv_76= 'LAKE' otherlv_77= 'OVER' otherlv_78= 'AREA' ( (lv_area_79_0= RULE_INT ) ) otherlv_80= 'SQUARE' otherlv_81= 'METER' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) )
                    // InternalMycnl.g:6197:4: otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'REMOVE' otherlv_76= 'LAKE' otherlv_77= 'OVER' otherlv_78= 'AREA' ( (lv_area_79_0= RULE_INT ) ) otherlv_80= 'SQUARE' otherlv_81= 'METER' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) )
                    {
                    otherlv_68=(Token)match(input,48,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_68, grammarAccess.getFindtempRemoveLakeAccess().getWHATKeyword_4_0());
                      			
                    }
                    otherlv_69=(Token)match(input,49,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_69, grammarAccess.getFindtempRemoveLakeAccess().getWILLKeyword_4_1());
                      			
                    }
                    otherlv_70=(Token)match(input,50,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_70, grammarAccess.getFindtempRemoveLakeAccess().getBEKeyword_4_2());
                      			
                    }
                    otherlv_71=(Token)match(input,51,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_71, grammarAccess.getFindtempRemoveLakeAccess().getTHEKeyword_4_3());
                      			
                    }
                    otherlv_72=(Token)match(input,52,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_72, grammarAccess.getFindtempRemoveLakeAccess().getTEMPERATUREKeyword_4_4());
                      			
                    }
                    otherlv_73=(Token)match(input,53,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_73, grammarAccess.getFindtempRemoveLakeAccess().getIFKeyword_4_5());
                      			
                    }
                    otherlv_74=(Token)match(input,54,FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_74, grammarAccess.getFindtempRemoveLakeAccess().getWEKeyword_4_6());
                      			
                    }
                    otherlv_75=(Token)match(input,112,FOLLOW_106); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_75, grammarAccess.getFindtempRemoveLakeAccess().getREMOVEKeyword_4_7());
                      			
                    }
                    otherlv_76=(Token)match(input,120,FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_76, grammarAccess.getFindtempRemoveLakeAccess().getLAKEKeyword_4_8());
                      			
                    }
                    otherlv_77=(Token)match(input,121,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_77, grammarAccess.getFindtempRemoveLakeAccess().getOVERKeyword_4_9());
                      			
                    }
                    otherlv_78=(Token)match(input,90,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_78, grammarAccess.getFindtempRemoveLakeAccess().getAREAKeyword_4_10());
                      			
                    }
                    // InternalMycnl.g:6241:4: ( (lv_area_79_0= RULE_INT ) )
                    // InternalMycnl.g:6242:5: (lv_area_79_0= RULE_INT )
                    {
                    // InternalMycnl.g:6242:5: (lv_area_79_0= RULE_INT )
                    // InternalMycnl.g:6243:6: lv_area_79_0= RULE_INT
                    {
                    lv_area_79_0=(Token)match(input,RULE_INT,FOLLOW_94); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_area_79_0, grammarAccess.getFindtempRemoveLakeAccess().getAreaINTTerminalRuleCall_4_11_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempRemoveLakeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"area",
                      							lv_area_79_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_80=(Token)match(input,108,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_80, grammarAccess.getFindtempRemoveLakeAccess().getSQUAREKeyword_4_12());
                      			
                    }
                    otherlv_81=(Token)match(input,109,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_81, grammarAccess.getFindtempRemoveLakeAccess().getMETERKeyword_4_13());
                      			
                    }
                    otherlv_82=(Token)match(input,58,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_82, grammarAccess.getFindtempRemoveLakeAccess().getINKeyword_4_14());
                      			
                    }
                    otherlv_83=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_83, grammarAccess.getFindtempRemoveLakeAccess().getREGIONKeyword_4_15());
                      			
                    }
                    // InternalMycnl.g:6275:4: ( (lv_region_84_0= RULE_INT ) )
                    // InternalMycnl.g:6276:5: (lv_region_84_0= RULE_INT )
                    {
                    // InternalMycnl.g:6276:5: (lv_region_84_0= RULE_INT )
                    // InternalMycnl.g:6277:6: lv_region_84_0= RULE_INT
                    {
                    lv_region_84_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_84_0, grammarAccess.getFindtempRemoveLakeAccess().getRegionINTTerminalRuleCall_4_16_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFindtempRemoveLakeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_84_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefindtempRemoveLake"


    // $ANTLR start "entryRuleDesignCommercial"
    // InternalMycnl.g:6298:1: entryRuleDesignCommercial returns [EObject current=null] : iv_ruleDesignCommercial= ruleDesignCommercial EOF ;
    public final EObject entryRuleDesignCommercial() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDesignCommercial = null;


        try {
            // InternalMycnl.g:6298:57: (iv_ruleDesignCommercial= ruleDesignCommercial EOF )
            // InternalMycnl.g:6299:2: iv_ruleDesignCommercial= ruleDesignCommercial EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDesignCommercialRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDesignCommercial=ruleDesignCommercial();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDesignCommercial; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDesignCommercial"


    // $ANTLR start "ruleDesignCommercial"
    // InternalMycnl.g:6305:1: ruleDesignCommercial returns [EObject current=null] : ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'design' otherlv_5= 'plan' otherlv_6= 'for' otherlv_7= 'commercial' otherlv_8= 'area' otherlv_9= 'for' ( (lv_no_of_people_10_0= RULE_INT ) ) otherlv_11= 'people' otherlv_12= 'in' otherlv_13= 'region' ( (lv_region_14_0= RULE_INT ) ) ) | (otherlv_15= 'What' otherlv_16= 'will' otherlv_17= 'be' otherlv_18= 'the' otherlv_19= 'design' otherlv_20= 'plan' otherlv_21= 'for' otherlv_22= 'commercial' otherlv_23= 'area' otherlv_24= 'for' ( (lv_no_of_people_25_0= RULE_INT ) ) otherlv_26= 'people' otherlv_27= 'in' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) ) ) | (otherlv_30= 'What' otherlv_31= 'Will' otherlv_32= 'Be' otherlv_33= 'The' otherlv_34= 'Design' otherlv_35= 'Plan' otherlv_36= 'For' otherlv_37= 'Commercial' otherlv_38= 'Area' otherlv_39= 'For' ( (lv_no_of_people_40_0= RULE_INT ) ) otherlv_41= 'People' otherlv_42= 'In' otherlv_43= 'Region' ( (lv_region_44_0= RULE_INT ) ) ) | (otherlv_45= 'What' otherlv_46= 'Will' otherlv_47= 'be' otherlv_48= 'the' otherlv_49= 'Design' otherlv_50= 'Plan' otherlv_51= 'for' otherlv_52= 'Commercial' otherlv_53= 'Area' otherlv_54= 'for' ( (lv_no_of_people_55_0= RULE_INT ) ) otherlv_56= 'People' otherlv_57= 'in' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'DESIGN' otherlv_65= 'PLAN' otherlv_66= 'FOR' otherlv_67= 'COMMERCIAL' otherlv_68= 'AREA' otherlv_69= 'FOR' ( (lv_no_of_people_70_0= RULE_INT ) ) otherlv_71= 'PEOPLE' otherlv_72= 'IN' otherlv_73= 'REGION' ( (lv_region_74_0= RULE_INT ) ) ) ) ;
    public final EObject ruleDesignCommercial() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token lv_no_of_people_10_0=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_region_14_0=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token lv_no_of_people_25_0=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_region_29_0=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token lv_no_of_people_40_0=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token lv_region_44_0=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token otherlv_47=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token otherlv_50=null;
        Token otherlv_51=null;
        Token otherlv_52=null;
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token lv_no_of_people_55_0=null;
        Token otherlv_56=null;
        Token otherlv_57=null;
        Token otherlv_58=null;
        Token lv_region_59_0=null;
        Token otherlv_60=null;
        Token otherlv_61=null;
        Token otherlv_62=null;
        Token otherlv_63=null;
        Token otherlv_64=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token otherlv_67=null;
        Token otherlv_68=null;
        Token otherlv_69=null;
        Token lv_no_of_people_70_0=null;
        Token otherlv_71=null;
        Token otherlv_72=null;
        Token otherlv_73=null;
        Token lv_region_74_0=null;


        	enterRule();

        try {
            // InternalMycnl.g:6311:2: ( ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'design' otherlv_5= 'plan' otherlv_6= 'for' otherlv_7= 'commercial' otherlv_8= 'area' otherlv_9= 'for' ( (lv_no_of_people_10_0= RULE_INT ) ) otherlv_11= 'people' otherlv_12= 'in' otherlv_13= 'region' ( (lv_region_14_0= RULE_INT ) ) ) | (otherlv_15= 'What' otherlv_16= 'will' otherlv_17= 'be' otherlv_18= 'the' otherlv_19= 'design' otherlv_20= 'plan' otherlv_21= 'for' otherlv_22= 'commercial' otherlv_23= 'area' otherlv_24= 'for' ( (lv_no_of_people_25_0= RULE_INT ) ) otherlv_26= 'people' otherlv_27= 'in' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) ) ) | (otherlv_30= 'What' otherlv_31= 'Will' otherlv_32= 'Be' otherlv_33= 'The' otherlv_34= 'Design' otherlv_35= 'Plan' otherlv_36= 'For' otherlv_37= 'Commercial' otherlv_38= 'Area' otherlv_39= 'For' ( (lv_no_of_people_40_0= RULE_INT ) ) otherlv_41= 'People' otherlv_42= 'In' otherlv_43= 'Region' ( (lv_region_44_0= RULE_INT ) ) ) | (otherlv_45= 'What' otherlv_46= 'Will' otherlv_47= 'be' otherlv_48= 'the' otherlv_49= 'Design' otherlv_50= 'Plan' otherlv_51= 'for' otherlv_52= 'Commercial' otherlv_53= 'Area' otherlv_54= 'for' ( (lv_no_of_people_55_0= RULE_INT ) ) otherlv_56= 'People' otherlv_57= 'in' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'DESIGN' otherlv_65= 'PLAN' otherlv_66= 'FOR' otherlv_67= 'COMMERCIAL' otherlv_68= 'AREA' otherlv_69= 'FOR' ( (lv_no_of_people_70_0= RULE_INT ) ) otherlv_71= 'PEOPLE' otherlv_72= 'IN' otherlv_73= 'REGION' ( (lv_region_74_0= RULE_INT ) ) ) ) )
            // InternalMycnl.g:6312:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'design' otherlv_5= 'plan' otherlv_6= 'for' otherlv_7= 'commercial' otherlv_8= 'area' otherlv_9= 'for' ( (lv_no_of_people_10_0= RULE_INT ) ) otherlv_11= 'people' otherlv_12= 'in' otherlv_13= 'region' ( (lv_region_14_0= RULE_INT ) ) ) | (otherlv_15= 'What' otherlv_16= 'will' otherlv_17= 'be' otherlv_18= 'the' otherlv_19= 'design' otherlv_20= 'plan' otherlv_21= 'for' otherlv_22= 'commercial' otherlv_23= 'area' otherlv_24= 'for' ( (lv_no_of_people_25_0= RULE_INT ) ) otherlv_26= 'people' otherlv_27= 'in' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) ) ) | (otherlv_30= 'What' otherlv_31= 'Will' otherlv_32= 'Be' otherlv_33= 'The' otherlv_34= 'Design' otherlv_35= 'Plan' otherlv_36= 'For' otherlv_37= 'Commercial' otherlv_38= 'Area' otherlv_39= 'For' ( (lv_no_of_people_40_0= RULE_INT ) ) otherlv_41= 'People' otherlv_42= 'In' otherlv_43= 'Region' ( (lv_region_44_0= RULE_INT ) ) ) | (otherlv_45= 'What' otherlv_46= 'Will' otherlv_47= 'be' otherlv_48= 'the' otherlv_49= 'Design' otherlv_50= 'Plan' otherlv_51= 'for' otherlv_52= 'Commercial' otherlv_53= 'Area' otherlv_54= 'for' ( (lv_no_of_people_55_0= RULE_INT ) ) otherlv_56= 'People' otherlv_57= 'in' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'DESIGN' otherlv_65= 'PLAN' otherlv_66= 'FOR' otherlv_67= 'COMMERCIAL' otherlv_68= 'AREA' otherlv_69= 'FOR' ( (lv_no_of_people_70_0= RULE_INT ) ) otherlv_71= 'PEOPLE' otherlv_72= 'IN' otherlv_73= 'REGION' ( (lv_region_74_0= RULE_INT ) ) ) )
            {
            // InternalMycnl.g:6312:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'design' otherlv_5= 'plan' otherlv_6= 'for' otherlv_7= 'commercial' otherlv_8= 'area' otherlv_9= 'for' ( (lv_no_of_people_10_0= RULE_INT ) ) otherlv_11= 'people' otherlv_12= 'in' otherlv_13= 'region' ( (lv_region_14_0= RULE_INT ) ) ) | (otherlv_15= 'What' otherlv_16= 'will' otherlv_17= 'be' otherlv_18= 'the' otherlv_19= 'design' otherlv_20= 'plan' otherlv_21= 'for' otherlv_22= 'commercial' otherlv_23= 'area' otherlv_24= 'for' ( (lv_no_of_people_25_0= RULE_INT ) ) otherlv_26= 'people' otherlv_27= 'in' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) ) ) | (otherlv_30= 'What' otherlv_31= 'Will' otherlv_32= 'Be' otherlv_33= 'The' otherlv_34= 'Design' otherlv_35= 'Plan' otherlv_36= 'For' otherlv_37= 'Commercial' otherlv_38= 'Area' otherlv_39= 'For' ( (lv_no_of_people_40_0= RULE_INT ) ) otherlv_41= 'People' otherlv_42= 'In' otherlv_43= 'Region' ( (lv_region_44_0= RULE_INT ) ) ) | (otherlv_45= 'What' otherlv_46= 'Will' otherlv_47= 'be' otherlv_48= 'the' otherlv_49= 'Design' otherlv_50= 'Plan' otherlv_51= 'for' otherlv_52= 'Commercial' otherlv_53= 'Area' otherlv_54= 'for' ( (lv_no_of_people_55_0= RULE_INT ) ) otherlv_56= 'People' otherlv_57= 'in' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'DESIGN' otherlv_65= 'PLAN' otherlv_66= 'FOR' otherlv_67= 'COMMERCIAL' otherlv_68= 'AREA' otherlv_69= 'FOR' ( (lv_no_of_people_70_0= RULE_INT ) ) otherlv_71= 'PEOPLE' otherlv_72= 'IN' otherlv_73= 'REGION' ( (lv_region_74_0= RULE_INT ) ) ) )
            int alt19=5;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt19=1;
                }
                break;
            case 37:
                {
                int LA19_2 = input.LA(2);

                if ( (LA19_2==38) ) {
                    int LA19_4 = input.LA(3);

                    if ( (LA19_4==39) ) {
                        alt19=3;
                    }
                    else if ( (LA19_4==27) ) {
                        alt19=4;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 19, 4, input);

                        throw nvae;
                    }
                }
                else if ( (LA19_2==26) ) {
                    alt19=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 2, input);

                    throw nvae;
                }
                }
                break;
            case 48:
                {
                alt19=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }

            switch (alt19) {
                case 1 :
                    // InternalMycnl.g:6313:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'design' otherlv_5= 'plan' otherlv_6= 'for' otherlv_7= 'commercial' otherlv_8= 'area' otherlv_9= 'for' ( (lv_no_of_people_10_0= RULE_INT ) ) otherlv_11= 'people' otherlv_12= 'in' otherlv_13= 'region' ( (lv_region_14_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:6313:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'design' otherlv_5= 'plan' otherlv_6= 'for' otherlv_7= 'commercial' otherlv_8= 'area' otherlv_9= 'for' ( (lv_no_of_people_10_0= RULE_INT ) ) otherlv_11= 'people' otherlv_12= 'in' otherlv_13= 'region' ( (lv_region_14_0= RULE_INT ) ) )
                    // InternalMycnl.g:6314:4: otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'design' otherlv_5= 'plan' otherlv_6= 'for' otherlv_7= 'commercial' otherlv_8= 'area' otherlv_9= 'for' ( (lv_no_of_people_10_0= RULE_INT ) ) otherlv_11= 'people' otherlv_12= 'in' otherlv_13= 'region' ( (lv_region_14_0= RULE_INT ) )
                    {
                    otherlv_0=(Token)match(input,25,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getDesignCommercialAccess().getWhatKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDesignCommercialAccess().getWillKeyword_0_1());
                      			
                    }
                    otherlv_2=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDesignCommercialAccess().getBeKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,28,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDesignCommercialAccess().getTheKeyword_0_3());
                      			
                    }
                    otherlv_4=(Token)match(input,74,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDesignCommercialAccess().getDesignKeyword_0_4());
                      			
                    }
                    otherlv_5=(Token)match(input,75,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getDesignCommercialAccess().getPlanKeyword_0_5());
                      			
                    }
                    otherlv_6=(Token)match(input,76,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getDesignCommercialAccess().getForKeyword_0_6());
                      			
                    }
                    otherlv_7=(Token)match(input,122,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getDesignCommercialAccess().getCommercialKeyword_0_7());
                      			
                    }
                    otherlv_8=(Token)match(input,78,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getDesignCommercialAccess().getAreaKeyword_0_8());
                      			
                    }
                    otherlv_9=(Token)match(input,76,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getDesignCommercialAccess().getForKeyword_0_9());
                      			
                    }
                    // InternalMycnl.g:6354:4: ( (lv_no_of_people_10_0= RULE_INT ) )
                    // InternalMycnl.g:6355:5: (lv_no_of_people_10_0= RULE_INT )
                    {
                    // InternalMycnl.g:6355:5: (lv_no_of_people_10_0= RULE_INT )
                    // InternalMycnl.g:6356:6: lv_no_of_people_10_0= RULE_INT
                    {
                    lv_no_of_people_10_0=(Token)match(input,RULE_INT,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_people_10_0, grammarAccess.getDesignCommercialAccess().getNo_of_peopleINTTerminalRuleCall_0_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignCommercialRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_people",
                      							lv_no_of_people_10_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_11=(Token)match(input,79,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getDesignCommercialAccess().getPeopleKeyword_0_11());
                      			
                    }
                    otherlv_12=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getDesignCommercialAccess().getInKeyword_0_12());
                      			
                    }
                    otherlv_13=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getDesignCommercialAccess().getRegionKeyword_0_13());
                      			
                    }
                    // InternalMycnl.g:6384:4: ( (lv_region_14_0= RULE_INT ) )
                    // InternalMycnl.g:6385:5: (lv_region_14_0= RULE_INT )
                    {
                    // InternalMycnl.g:6385:5: (lv_region_14_0= RULE_INT )
                    // InternalMycnl.g:6386:6: lv_region_14_0= RULE_INT
                    {
                    lv_region_14_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_14_0, grammarAccess.getDesignCommercialAccess().getRegionINTTerminalRuleCall_0_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignCommercialRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_14_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:6404:3: (otherlv_15= 'What' otherlv_16= 'will' otherlv_17= 'be' otherlv_18= 'the' otherlv_19= 'design' otherlv_20= 'plan' otherlv_21= 'for' otherlv_22= 'commercial' otherlv_23= 'area' otherlv_24= 'for' ( (lv_no_of_people_25_0= RULE_INT ) ) otherlv_26= 'people' otherlv_27= 'in' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:6404:3: (otherlv_15= 'What' otherlv_16= 'will' otherlv_17= 'be' otherlv_18= 'the' otherlv_19= 'design' otherlv_20= 'plan' otherlv_21= 'for' otherlv_22= 'commercial' otherlv_23= 'area' otherlv_24= 'for' ( (lv_no_of_people_25_0= RULE_INT ) ) otherlv_26= 'people' otherlv_27= 'in' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) ) )
                    // InternalMycnl.g:6405:4: otherlv_15= 'What' otherlv_16= 'will' otherlv_17= 'be' otherlv_18= 'the' otherlv_19= 'design' otherlv_20= 'plan' otherlv_21= 'for' otherlv_22= 'commercial' otherlv_23= 'area' otherlv_24= 'for' ( (lv_no_of_people_25_0= RULE_INT ) ) otherlv_26= 'people' otherlv_27= 'in' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) )
                    {
                    otherlv_15=(Token)match(input,37,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getDesignCommercialAccess().getWhatKeyword_1_0());
                      			
                    }
                    otherlv_16=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getDesignCommercialAccess().getWillKeyword_1_1());
                      			
                    }
                    otherlv_17=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getDesignCommercialAccess().getBeKeyword_1_2());
                      			
                    }
                    otherlv_18=(Token)match(input,28,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getDesignCommercialAccess().getTheKeyword_1_3());
                      			
                    }
                    otherlv_19=(Token)match(input,74,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getDesignCommercialAccess().getDesignKeyword_1_4());
                      			
                    }
                    otherlv_20=(Token)match(input,75,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getDesignCommercialAccess().getPlanKeyword_1_5());
                      			
                    }
                    otherlv_21=(Token)match(input,76,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_21, grammarAccess.getDesignCommercialAccess().getForKeyword_1_6());
                      			
                    }
                    otherlv_22=(Token)match(input,122,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getDesignCommercialAccess().getCommercialKeyword_1_7());
                      			
                    }
                    otherlv_23=(Token)match(input,78,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getDesignCommercialAccess().getAreaKeyword_1_8());
                      			
                    }
                    otherlv_24=(Token)match(input,76,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_24, grammarAccess.getDesignCommercialAccess().getForKeyword_1_9());
                      			
                    }
                    // InternalMycnl.g:6445:4: ( (lv_no_of_people_25_0= RULE_INT ) )
                    // InternalMycnl.g:6446:5: (lv_no_of_people_25_0= RULE_INT )
                    {
                    // InternalMycnl.g:6446:5: (lv_no_of_people_25_0= RULE_INT )
                    // InternalMycnl.g:6447:6: lv_no_of_people_25_0= RULE_INT
                    {
                    lv_no_of_people_25_0=(Token)match(input,RULE_INT,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_people_25_0, grammarAccess.getDesignCommercialAccess().getNo_of_peopleINTTerminalRuleCall_1_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignCommercialRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_people",
                      							lv_no_of_people_25_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_26=(Token)match(input,79,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getDesignCommercialAccess().getPeopleKeyword_1_11());
                      			
                    }
                    otherlv_27=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_27, grammarAccess.getDesignCommercialAccess().getInKeyword_1_12());
                      			
                    }
                    otherlv_28=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getDesignCommercialAccess().getRegionKeyword_1_13());
                      			
                    }
                    // InternalMycnl.g:6475:4: ( (lv_region_29_0= RULE_INT ) )
                    // InternalMycnl.g:6476:5: (lv_region_29_0= RULE_INT )
                    {
                    // InternalMycnl.g:6476:5: (lv_region_29_0= RULE_INT )
                    // InternalMycnl.g:6477:6: lv_region_29_0= RULE_INT
                    {
                    lv_region_29_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_29_0, grammarAccess.getDesignCommercialAccess().getRegionINTTerminalRuleCall_1_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignCommercialRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_29_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalMycnl.g:6495:3: (otherlv_30= 'What' otherlv_31= 'Will' otherlv_32= 'Be' otherlv_33= 'The' otherlv_34= 'Design' otherlv_35= 'Plan' otherlv_36= 'For' otherlv_37= 'Commercial' otherlv_38= 'Area' otherlv_39= 'For' ( (lv_no_of_people_40_0= RULE_INT ) ) otherlv_41= 'People' otherlv_42= 'In' otherlv_43= 'Region' ( (lv_region_44_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:6495:3: (otherlv_30= 'What' otherlv_31= 'Will' otherlv_32= 'Be' otherlv_33= 'The' otherlv_34= 'Design' otherlv_35= 'Plan' otherlv_36= 'For' otherlv_37= 'Commercial' otherlv_38= 'Area' otherlv_39= 'For' ( (lv_no_of_people_40_0= RULE_INT ) ) otherlv_41= 'People' otherlv_42= 'In' otherlv_43= 'Region' ( (lv_region_44_0= RULE_INT ) ) )
                    // InternalMycnl.g:6496:4: otherlv_30= 'What' otherlv_31= 'Will' otherlv_32= 'Be' otherlv_33= 'The' otherlv_34= 'Design' otherlv_35= 'Plan' otherlv_36= 'For' otherlv_37= 'Commercial' otherlv_38= 'Area' otherlv_39= 'For' ( (lv_no_of_people_40_0= RULE_INT ) ) otherlv_41= 'People' otherlv_42= 'In' otherlv_43= 'Region' ( (lv_region_44_0= RULE_INT ) )
                    {
                    otherlv_30=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_30, grammarAccess.getDesignCommercialAccess().getWhatKeyword_2_0());
                      			
                    }
                    otherlv_31=(Token)match(input,38,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getDesignCommercialAccess().getWillKeyword_2_1());
                      			
                    }
                    otherlv_32=(Token)match(input,39,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_32, grammarAccess.getDesignCommercialAccess().getBeKeyword_2_2());
                      			
                    }
                    otherlv_33=(Token)match(input,40,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_33, grammarAccess.getDesignCommercialAccess().getTheKeyword_2_3());
                      			
                    }
                    otherlv_34=(Token)match(input,80,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_34, grammarAccess.getDesignCommercialAccess().getDesignKeyword_2_4());
                      			
                    }
                    otherlv_35=(Token)match(input,81,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_35, grammarAccess.getDesignCommercialAccess().getPlanKeyword_2_5());
                      			
                    }
                    otherlv_36=(Token)match(input,82,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_36, grammarAccess.getDesignCommercialAccess().getForKeyword_2_6());
                      			
                    }
                    otherlv_37=(Token)match(input,123,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_37, grammarAccess.getDesignCommercialAccess().getCommercialKeyword_2_7());
                      			
                    }
                    otherlv_38=(Token)match(input,84,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_38, grammarAccess.getDesignCommercialAccess().getAreaKeyword_2_8());
                      			
                    }
                    otherlv_39=(Token)match(input,82,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_39, grammarAccess.getDesignCommercialAccess().getForKeyword_2_9());
                      			
                    }
                    // InternalMycnl.g:6536:4: ( (lv_no_of_people_40_0= RULE_INT ) )
                    // InternalMycnl.g:6537:5: (lv_no_of_people_40_0= RULE_INT )
                    {
                    // InternalMycnl.g:6537:5: (lv_no_of_people_40_0= RULE_INT )
                    // InternalMycnl.g:6538:6: lv_no_of_people_40_0= RULE_INT
                    {
                    lv_no_of_people_40_0=(Token)match(input,RULE_INT,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_people_40_0, grammarAccess.getDesignCommercialAccess().getNo_of_peopleINTTerminalRuleCall_2_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignCommercialRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_people",
                      							lv_no_of_people_40_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_41=(Token)match(input,85,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_41, grammarAccess.getDesignCommercialAccess().getPeopleKeyword_2_11());
                      			
                    }
                    otherlv_42=(Token)match(input,47,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getDesignCommercialAccess().getInKeyword_2_12());
                      			
                    }
                    otherlv_43=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_43, grammarAccess.getDesignCommercialAccess().getRegionKeyword_2_13());
                      			
                    }
                    // InternalMycnl.g:6566:4: ( (lv_region_44_0= RULE_INT ) )
                    // InternalMycnl.g:6567:5: (lv_region_44_0= RULE_INT )
                    {
                    // InternalMycnl.g:6567:5: (lv_region_44_0= RULE_INT )
                    // InternalMycnl.g:6568:6: lv_region_44_0= RULE_INT
                    {
                    lv_region_44_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_44_0, grammarAccess.getDesignCommercialAccess().getRegionINTTerminalRuleCall_2_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignCommercialRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_44_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalMycnl.g:6586:3: (otherlv_45= 'What' otherlv_46= 'Will' otherlv_47= 'be' otherlv_48= 'the' otherlv_49= 'Design' otherlv_50= 'Plan' otherlv_51= 'for' otherlv_52= 'Commercial' otherlv_53= 'Area' otherlv_54= 'for' ( (lv_no_of_people_55_0= RULE_INT ) ) otherlv_56= 'People' otherlv_57= 'in' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:6586:3: (otherlv_45= 'What' otherlv_46= 'Will' otherlv_47= 'be' otherlv_48= 'the' otherlv_49= 'Design' otherlv_50= 'Plan' otherlv_51= 'for' otherlv_52= 'Commercial' otherlv_53= 'Area' otherlv_54= 'for' ( (lv_no_of_people_55_0= RULE_INT ) ) otherlv_56= 'People' otherlv_57= 'in' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) )
                    // InternalMycnl.g:6587:4: otherlv_45= 'What' otherlv_46= 'Will' otherlv_47= 'be' otherlv_48= 'the' otherlv_49= 'Design' otherlv_50= 'Plan' otherlv_51= 'for' otherlv_52= 'Commercial' otherlv_53= 'Area' otherlv_54= 'for' ( (lv_no_of_people_55_0= RULE_INT ) ) otherlv_56= 'People' otherlv_57= 'in' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) )
                    {
                    otherlv_45=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_45, grammarAccess.getDesignCommercialAccess().getWhatKeyword_3_0());
                      			
                    }
                    otherlv_46=(Token)match(input,38,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_46, grammarAccess.getDesignCommercialAccess().getWillKeyword_3_1());
                      			
                    }
                    otherlv_47=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_47, grammarAccess.getDesignCommercialAccess().getBeKeyword_3_2());
                      			
                    }
                    otherlv_48=(Token)match(input,28,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getDesignCommercialAccess().getTheKeyword_3_3());
                      			
                    }
                    otherlv_49=(Token)match(input,80,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_49, grammarAccess.getDesignCommercialAccess().getDesignKeyword_3_4());
                      			
                    }
                    otherlv_50=(Token)match(input,81,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_50, grammarAccess.getDesignCommercialAccess().getPlanKeyword_3_5());
                      			
                    }
                    otherlv_51=(Token)match(input,76,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_51, grammarAccess.getDesignCommercialAccess().getForKeyword_3_6());
                      			
                    }
                    otherlv_52=(Token)match(input,123,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_52, grammarAccess.getDesignCommercialAccess().getCommercialKeyword_3_7());
                      			
                    }
                    otherlv_53=(Token)match(input,84,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_53, grammarAccess.getDesignCommercialAccess().getAreaKeyword_3_8());
                      			
                    }
                    otherlv_54=(Token)match(input,76,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_54, grammarAccess.getDesignCommercialAccess().getForKeyword_3_9());
                      			
                    }
                    // InternalMycnl.g:6627:4: ( (lv_no_of_people_55_0= RULE_INT ) )
                    // InternalMycnl.g:6628:5: (lv_no_of_people_55_0= RULE_INT )
                    {
                    // InternalMycnl.g:6628:5: (lv_no_of_people_55_0= RULE_INT )
                    // InternalMycnl.g:6629:6: lv_no_of_people_55_0= RULE_INT
                    {
                    lv_no_of_people_55_0=(Token)match(input,RULE_INT,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_people_55_0, grammarAccess.getDesignCommercialAccess().getNo_of_peopleINTTerminalRuleCall_3_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignCommercialRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_people",
                      							lv_no_of_people_55_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_56=(Token)match(input,85,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_56, grammarAccess.getDesignCommercialAccess().getPeopleKeyword_3_11());
                      			
                    }
                    otherlv_57=(Token)match(input,36,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_57, grammarAccess.getDesignCommercialAccess().getInKeyword_3_12());
                      			
                    }
                    otherlv_58=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_58, grammarAccess.getDesignCommercialAccess().getRegionKeyword_3_13());
                      			
                    }
                    // InternalMycnl.g:6657:4: ( (lv_region_59_0= RULE_INT ) )
                    // InternalMycnl.g:6658:5: (lv_region_59_0= RULE_INT )
                    {
                    // InternalMycnl.g:6658:5: (lv_region_59_0= RULE_INT )
                    // InternalMycnl.g:6659:6: lv_region_59_0= RULE_INT
                    {
                    lv_region_59_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_59_0, grammarAccess.getDesignCommercialAccess().getRegionINTTerminalRuleCall_3_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignCommercialRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_59_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalMycnl.g:6677:3: (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'DESIGN' otherlv_65= 'PLAN' otherlv_66= 'FOR' otherlv_67= 'COMMERCIAL' otherlv_68= 'AREA' otherlv_69= 'FOR' ( (lv_no_of_people_70_0= RULE_INT ) ) otherlv_71= 'PEOPLE' otherlv_72= 'IN' otherlv_73= 'REGION' ( (lv_region_74_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:6677:3: (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'DESIGN' otherlv_65= 'PLAN' otherlv_66= 'FOR' otherlv_67= 'COMMERCIAL' otherlv_68= 'AREA' otherlv_69= 'FOR' ( (lv_no_of_people_70_0= RULE_INT ) ) otherlv_71= 'PEOPLE' otherlv_72= 'IN' otherlv_73= 'REGION' ( (lv_region_74_0= RULE_INT ) ) )
                    // InternalMycnl.g:6678:4: otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'DESIGN' otherlv_65= 'PLAN' otherlv_66= 'FOR' otherlv_67= 'COMMERCIAL' otherlv_68= 'AREA' otherlv_69= 'FOR' ( (lv_no_of_people_70_0= RULE_INT ) ) otherlv_71= 'PEOPLE' otherlv_72= 'IN' otherlv_73= 'REGION' ( (lv_region_74_0= RULE_INT ) )
                    {
                    otherlv_60=(Token)match(input,48,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_60, grammarAccess.getDesignCommercialAccess().getWHATKeyword_4_0());
                      			
                    }
                    otherlv_61=(Token)match(input,49,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_61, grammarAccess.getDesignCommercialAccess().getWILLKeyword_4_1());
                      			
                    }
                    otherlv_62=(Token)match(input,50,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_62, grammarAccess.getDesignCommercialAccess().getBEKeyword_4_2());
                      			
                    }
                    otherlv_63=(Token)match(input,51,FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_63, grammarAccess.getDesignCommercialAccess().getTHEKeyword_4_3());
                      			
                    }
                    otherlv_64=(Token)match(input,86,FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_64, grammarAccess.getDesignCommercialAccess().getDESIGNKeyword_4_4());
                      			
                    }
                    otherlv_65=(Token)match(input,87,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_65, grammarAccess.getDesignCommercialAccess().getPLANKeyword_4_5());
                      			
                    }
                    otherlv_66=(Token)match(input,88,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_66, grammarAccess.getDesignCommercialAccess().getFORKeyword_4_6());
                      			
                    }
                    otherlv_67=(Token)match(input,124,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_67, grammarAccess.getDesignCommercialAccess().getCOMMERCIALKeyword_4_7());
                      			
                    }
                    otherlv_68=(Token)match(input,90,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_68, grammarAccess.getDesignCommercialAccess().getAREAKeyword_4_8());
                      			
                    }
                    otherlv_69=(Token)match(input,88,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_69, grammarAccess.getDesignCommercialAccess().getFORKeyword_4_9());
                      			
                    }
                    // InternalMycnl.g:6718:4: ( (lv_no_of_people_70_0= RULE_INT ) )
                    // InternalMycnl.g:6719:5: (lv_no_of_people_70_0= RULE_INT )
                    {
                    // InternalMycnl.g:6719:5: (lv_no_of_people_70_0= RULE_INT )
                    // InternalMycnl.g:6720:6: lv_no_of_people_70_0= RULE_INT
                    {
                    lv_no_of_people_70_0=(Token)match(input,RULE_INT,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_people_70_0, grammarAccess.getDesignCommercialAccess().getNo_of_peopleINTTerminalRuleCall_4_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignCommercialRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_people",
                      							lv_no_of_people_70_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_71=(Token)match(input,91,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_71, grammarAccess.getDesignCommercialAccess().getPEOPLEKeyword_4_11());
                      			
                    }
                    otherlv_72=(Token)match(input,58,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_72, grammarAccess.getDesignCommercialAccess().getINKeyword_4_12());
                      			
                    }
                    otherlv_73=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_73, grammarAccess.getDesignCommercialAccess().getREGIONKeyword_4_13());
                      			
                    }
                    // InternalMycnl.g:6748:4: ( (lv_region_74_0= RULE_INT ) )
                    // InternalMycnl.g:6749:5: (lv_region_74_0= RULE_INT )
                    {
                    // InternalMycnl.g:6749:5: (lv_region_74_0= RULE_INT )
                    // InternalMycnl.g:6750:6: lv_region_74_0= RULE_INT
                    {
                    lv_region_74_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_74_0, grammarAccess.getDesignCommercialAccess().getRegionINTTerminalRuleCall_4_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignCommercialRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_74_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDesignCommercial"


    // $ANTLR start "entryRuleDesignEducational"
    // InternalMycnl.g:6771:1: entryRuleDesignEducational returns [EObject current=null] : iv_ruleDesignEducational= ruleDesignEducational EOF ;
    public final EObject entryRuleDesignEducational() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDesignEducational = null;


        try {
            // InternalMycnl.g:6771:58: (iv_ruleDesignEducational= ruleDesignEducational EOF )
            // InternalMycnl.g:6772:2: iv_ruleDesignEducational= ruleDesignEducational EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDesignEducationalRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDesignEducational=ruleDesignEducational();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDesignEducational; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDesignEducational"


    // $ANTLR start "ruleDesignEducational"
    // InternalMycnl.g:6778:1: ruleDesignEducational returns [EObject current=null] : ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'design' otherlv_5= 'plan' otherlv_6= 'for' otherlv_7= 'educational' otherlv_8= 'area' otherlv_9= 'for' ( (lv_no_of_people_10_0= RULE_INT ) ) otherlv_11= 'people' otherlv_12= 'in' otherlv_13= 'region' ( (lv_region_14_0= RULE_INT ) ) ) | (otherlv_15= 'What' otherlv_16= 'will' otherlv_17= 'be' otherlv_18= 'the' otherlv_19= 'design' otherlv_20= 'plan' otherlv_21= 'for' otherlv_22= 'educational' otherlv_23= 'area' otherlv_24= 'for' ( (lv_no_of_people_25_0= RULE_INT ) ) otherlv_26= 'people' otherlv_27= 'in' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) ) ) | (otherlv_30= 'What' otherlv_31= 'Will' otherlv_32= 'Be' otherlv_33= 'The' otherlv_34= 'Design' otherlv_35= 'Plan' otherlv_36= 'For' otherlv_37= 'Educational' otherlv_38= 'Area' otherlv_39= 'For' ( (lv_no_of_people_40_0= RULE_INT ) ) otherlv_41= 'People' otherlv_42= 'In' otherlv_43= 'Region' ( (lv_region_44_0= RULE_INT ) ) ) | (otherlv_45= 'What' otherlv_46= 'Will' otherlv_47= 'be' otherlv_48= 'the' otherlv_49= 'Design' otherlv_50= 'Plan' otherlv_51= 'for' otherlv_52= 'Educational' otherlv_53= 'Area' otherlv_54= 'for' ( (lv_no_of_people_55_0= RULE_INT ) ) otherlv_56= 'People' otherlv_57= 'in' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'DESIGN' otherlv_65= 'PLAN' otherlv_66= 'FOR' otherlv_67= 'EDUCATIONAL' otherlv_68= 'AREA' otherlv_69= 'FOR' ( (lv_no_of_people_70_0= RULE_INT ) ) otherlv_71= 'PEOPLE' otherlv_72= 'IN' otherlv_73= 'REGION' ( (lv_region_74_0= RULE_INT ) ) ) ) ;
    public final EObject ruleDesignEducational() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token lv_no_of_people_10_0=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_region_14_0=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token lv_no_of_people_25_0=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_region_29_0=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token lv_no_of_people_40_0=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token lv_region_44_0=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token otherlv_47=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token otherlv_50=null;
        Token otherlv_51=null;
        Token otherlv_52=null;
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token lv_no_of_people_55_0=null;
        Token otherlv_56=null;
        Token otherlv_57=null;
        Token otherlv_58=null;
        Token lv_region_59_0=null;
        Token otherlv_60=null;
        Token otherlv_61=null;
        Token otherlv_62=null;
        Token otherlv_63=null;
        Token otherlv_64=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token otherlv_67=null;
        Token otherlv_68=null;
        Token otherlv_69=null;
        Token lv_no_of_people_70_0=null;
        Token otherlv_71=null;
        Token otherlv_72=null;
        Token otherlv_73=null;
        Token lv_region_74_0=null;


        	enterRule();

        try {
            // InternalMycnl.g:6784:2: ( ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'design' otherlv_5= 'plan' otherlv_6= 'for' otherlv_7= 'educational' otherlv_8= 'area' otherlv_9= 'for' ( (lv_no_of_people_10_0= RULE_INT ) ) otherlv_11= 'people' otherlv_12= 'in' otherlv_13= 'region' ( (lv_region_14_0= RULE_INT ) ) ) | (otherlv_15= 'What' otherlv_16= 'will' otherlv_17= 'be' otherlv_18= 'the' otherlv_19= 'design' otherlv_20= 'plan' otherlv_21= 'for' otherlv_22= 'educational' otherlv_23= 'area' otherlv_24= 'for' ( (lv_no_of_people_25_0= RULE_INT ) ) otherlv_26= 'people' otherlv_27= 'in' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) ) ) | (otherlv_30= 'What' otherlv_31= 'Will' otherlv_32= 'Be' otherlv_33= 'The' otherlv_34= 'Design' otherlv_35= 'Plan' otherlv_36= 'For' otherlv_37= 'Educational' otherlv_38= 'Area' otherlv_39= 'For' ( (lv_no_of_people_40_0= RULE_INT ) ) otherlv_41= 'People' otherlv_42= 'In' otherlv_43= 'Region' ( (lv_region_44_0= RULE_INT ) ) ) | (otherlv_45= 'What' otherlv_46= 'Will' otherlv_47= 'be' otherlv_48= 'the' otherlv_49= 'Design' otherlv_50= 'Plan' otherlv_51= 'for' otherlv_52= 'Educational' otherlv_53= 'Area' otherlv_54= 'for' ( (lv_no_of_people_55_0= RULE_INT ) ) otherlv_56= 'People' otherlv_57= 'in' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'DESIGN' otherlv_65= 'PLAN' otherlv_66= 'FOR' otherlv_67= 'EDUCATIONAL' otherlv_68= 'AREA' otherlv_69= 'FOR' ( (lv_no_of_people_70_0= RULE_INT ) ) otherlv_71= 'PEOPLE' otherlv_72= 'IN' otherlv_73= 'REGION' ( (lv_region_74_0= RULE_INT ) ) ) ) )
            // InternalMycnl.g:6785:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'design' otherlv_5= 'plan' otherlv_6= 'for' otherlv_7= 'educational' otherlv_8= 'area' otherlv_9= 'for' ( (lv_no_of_people_10_0= RULE_INT ) ) otherlv_11= 'people' otherlv_12= 'in' otherlv_13= 'region' ( (lv_region_14_0= RULE_INT ) ) ) | (otherlv_15= 'What' otherlv_16= 'will' otherlv_17= 'be' otherlv_18= 'the' otherlv_19= 'design' otherlv_20= 'plan' otherlv_21= 'for' otherlv_22= 'educational' otherlv_23= 'area' otherlv_24= 'for' ( (lv_no_of_people_25_0= RULE_INT ) ) otherlv_26= 'people' otherlv_27= 'in' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) ) ) | (otherlv_30= 'What' otherlv_31= 'Will' otherlv_32= 'Be' otherlv_33= 'The' otherlv_34= 'Design' otherlv_35= 'Plan' otherlv_36= 'For' otherlv_37= 'Educational' otherlv_38= 'Area' otherlv_39= 'For' ( (lv_no_of_people_40_0= RULE_INT ) ) otherlv_41= 'People' otherlv_42= 'In' otherlv_43= 'Region' ( (lv_region_44_0= RULE_INT ) ) ) | (otherlv_45= 'What' otherlv_46= 'Will' otherlv_47= 'be' otherlv_48= 'the' otherlv_49= 'Design' otherlv_50= 'Plan' otherlv_51= 'for' otherlv_52= 'Educational' otherlv_53= 'Area' otherlv_54= 'for' ( (lv_no_of_people_55_0= RULE_INT ) ) otherlv_56= 'People' otherlv_57= 'in' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'DESIGN' otherlv_65= 'PLAN' otherlv_66= 'FOR' otherlv_67= 'EDUCATIONAL' otherlv_68= 'AREA' otherlv_69= 'FOR' ( (lv_no_of_people_70_0= RULE_INT ) ) otherlv_71= 'PEOPLE' otherlv_72= 'IN' otherlv_73= 'REGION' ( (lv_region_74_0= RULE_INT ) ) ) )
            {
            // InternalMycnl.g:6785:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'design' otherlv_5= 'plan' otherlv_6= 'for' otherlv_7= 'educational' otherlv_8= 'area' otherlv_9= 'for' ( (lv_no_of_people_10_0= RULE_INT ) ) otherlv_11= 'people' otherlv_12= 'in' otherlv_13= 'region' ( (lv_region_14_0= RULE_INT ) ) ) | (otherlv_15= 'What' otherlv_16= 'will' otherlv_17= 'be' otherlv_18= 'the' otherlv_19= 'design' otherlv_20= 'plan' otherlv_21= 'for' otherlv_22= 'educational' otherlv_23= 'area' otherlv_24= 'for' ( (lv_no_of_people_25_0= RULE_INT ) ) otherlv_26= 'people' otherlv_27= 'in' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) ) ) | (otherlv_30= 'What' otherlv_31= 'Will' otherlv_32= 'Be' otherlv_33= 'The' otherlv_34= 'Design' otherlv_35= 'Plan' otherlv_36= 'For' otherlv_37= 'Educational' otherlv_38= 'Area' otherlv_39= 'For' ( (lv_no_of_people_40_0= RULE_INT ) ) otherlv_41= 'People' otherlv_42= 'In' otherlv_43= 'Region' ( (lv_region_44_0= RULE_INT ) ) ) | (otherlv_45= 'What' otherlv_46= 'Will' otherlv_47= 'be' otherlv_48= 'the' otherlv_49= 'Design' otherlv_50= 'Plan' otherlv_51= 'for' otherlv_52= 'Educational' otherlv_53= 'Area' otherlv_54= 'for' ( (lv_no_of_people_55_0= RULE_INT ) ) otherlv_56= 'People' otherlv_57= 'in' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) ) | (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'DESIGN' otherlv_65= 'PLAN' otherlv_66= 'FOR' otherlv_67= 'EDUCATIONAL' otherlv_68= 'AREA' otherlv_69= 'FOR' ( (lv_no_of_people_70_0= RULE_INT ) ) otherlv_71= 'PEOPLE' otherlv_72= 'IN' otherlv_73= 'REGION' ( (lv_region_74_0= RULE_INT ) ) ) )
            int alt20=5;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt20=1;
                }
                break;
            case 37:
                {
                int LA20_2 = input.LA(2);

                if ( (LA20_2==38) ) {
                    int LA20_4 = input.LA(3);

                    if ( (LA20_4==39) ) {
                        alt20=3;
                    }
                    else if ( (LA20_4==27) ) {
                        alt20=4;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 20, 4, input);

                        throw nvae;
                    }
                }
                else if ( (LA20_2==26) ) {
                    alt20=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 20, 2, input);

                    throw nvae;
                }
                }
                break;
            case 48:
                {
                alt20=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    // InternalMycnl.g:6786:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'design' otherlv_5= 'plan' otherlv_6= 'for' otherlv_7= 'educational' otherlv_8= 'area' otherlv_9= 'for' ( (lv_no_of_people_10_0= RULE_INT ) ) otherlv_11= 'people' otherlv_12= 'in' otherlv_13= 'region' ( (lv_region_14_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:6786:3: (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'design' otherlv_5= 'plan' otherlv_6= 'for' otherlv_7= 'educational' otherlv_8= 'area' otherlv_9= 'for' ( (lv_no_of_people_10_0= RULE_INT ) ) otherlv_11= 'people' otherlv_12= 'in' otherlv_13= 'region' ( (lv_region_14_0= RULE_INT ) ) )
                    // InternalMycnl.g:6787:4: otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'design' otherlv_5= 'plan' otherlv_6= 'for' otherlv_7= 'educational' otherlv_8= 'area' otherlv_9= 'for' ( (lv_no_of_people_10_0= RULE_INT ) ) otherlv_11= 'people' otherlv_12= 'in' otherlv_13= 'region' ( (lv_region_14_0= RULE_INT ) )
                    {
                    otherlv_0=(Token)match(input,25,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getDesignEducationalAccess().getWhatKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDesignEducationalAccess().getWillKeyword_0_1());
                      			
                    }
                    otherlv_2=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDesignEducationalAccess().getBeKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,28,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDesignEducationalAccess().getTheKeyword_0_3());
                      			
                    }
                    otherlv_4=(Token)match(input,74,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDesignEducationalAccess().getDesignKeyword_0_4());
                      			
                    }
                    otherlv_5=(Token)match(input,75,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getDesignEducationalAccess().getPlanKeyword_0_5());
                      			
                    }
                    otherlv_6=(Token)match(input,76,FOLLOW_111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getDesignEducationalAccess().getForKeyword_0_6());
                      			
                    }
                    otherlv_7=(Token)match(input,125,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getDesignEducationalAccess().getEducationalKeyword_0_7());
                      			
                    }
                    otherlv_8=(Token)match(input,78,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getDesignEducationalAccess().getAreaKeyword_0_8());
                      			
                    }
                    otherlv_9=(Token)match(input,76,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getDesignEducationalAccess().getForKeyword_0_9());
                      			
                    }
                    // InternalMycnl.g:6827:4: ( (lv_no_of_people_10_0= RULE_INT ) )
                    // InternalMycnl.g:6828:5: (lv_no_of_people_10_0= RULE_INT )
                    {
                    // InternalMycnl.g:6828:5: (lv_no_of_people_10_0= RULE_INT )
                    // InternalMycnl.g:6829:6: lv_no_of_people_10_0= RULE_INT
                    {
                    lv_no_of_people_10_0=(Token)match(input,RULE_INT,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_people_10_0, grammarAccess.getDesignEducationalAccess().getNo_of_peopleINTTerminalRuleCall_0_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignEducationalRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_people",
                      							lv_no_of_people_10_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_11=(Token)match(input,79,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getDesignEducationalAccess().getPeopleKeyword_0_11());
                      			
                    }
                    otherlv_12=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getDesignEducationalAccess().getInKeyword_0_12());
                      			
                    }
                    otherlv_13=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getDesignEducationalAccess().getRegionKeyword_0_13());
                      			
                    }
                    // InternalMycnl.g:6857:4: ( (lv_region_14_0= RULE_INT ) )
                    // InternalMycnl.g:6858:5: (lv_region_14_0= RULE_INT )
                    {
                    // InternalMycnl.g:6858:5: (lv_region_14_0= RULE_INT )
                    // InternalMycnl.g:6859:6: lv_region_14_0= RULE_INT
                    {
                    lv_region_14_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_14_0, grammarAccess.getDesignEducationalAccess().getRegionINTTerminalRuleCall_0_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignEducationalRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_14_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:6877:3: (otherlv_15= 'What' otherlv_16= 'will' otherlv_17= 'be' otherlv_18= 'the' otherlv_19= 'design' otherlv_20= 'plan' otherlv_21= 'for' otherlv_22= 'educational' otherlv_23= 'area' otherlv_24= 'for' ( (lv_no_of_people_25_0= RULE_INT ) ) otherlv_26= 'people' otherlv_27= 'in' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:6877:3: (otherlv_15= 'What' otherlv_16= 'will' otherlv_17= 'be' otherlv_18= 'the' otherlv_19= 'design' otherlv_20= 'plan' otherlv_21= 'for' otherlv_22= 'educational' otherlv_23= 'area' otherlv_24= 'for' ( (lv_no_of_people_25_0= RULE_INT ) ) otherlv_26= 'people' otherlv_27= 'in' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) ) )
                    // InternalMycnl.g:6878:4: otherlv_15= 'What' otherlv_16= 'will' otherlv_17= 'be' otherlv_18= 'the' otherlv_19= 'design' otherlv_20= 'plan' otherlv_21= 'for' otherlv_22= 'educational' otherlv_23= 'area' otherlv_24= 'for' ( (lv_no_of_people_25_0= RULE_INT ) ) otherlv_26= 'people' otherlv_27= 'in' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) )
                    {
                    otherlv_15=(Token)match(input,37,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getDesignEducationalAccess().getWhatKeyword_1_0());
                      			
                    }
                    otherlv_16=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getDesignEducationalAccess().getWillKeyword_1_1());
                      			
                    }
                    otherlv_17=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getDesignEducationalAccess().getBeKeyword_1_2());
                      			
                    }
                    otherlv_18=(Token)match(input,28,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getDesignEducationalAccess().getTheKeyword_1_3());
                      			
                    }
                    otherlv_19=(Token)match(input,74,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getDesignEducationalAccess().getDesignKeyword_1_4());
                      			
                    }
                    otherlv_20=(Token)match(input,75,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getDesignEducationalAccess().getPlanKeyword_1_5());
                      			
                    }
                    otherlv_21=(Token)match(input,76,FOLLOW_111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_21, grammarAccess.getDesignEducationalAccess().getForKeyword_1_6());
                      			
                    }
                    otherlv_22=(Token)match(input,125,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getDesignEducationalAccess().getEducationalKeyword_1_7());
                      			
                    }
                    otherlv_23=(Token)match(input,78,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getDesignEducationalAccess().getAreaKeyword_1_8());
                      			
                    }
                    otherlv_24=(Token)match(input,76,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_24, grammarAccess.getDesignEducationalAccess().getForKeyword_1_9());
                      			
                    }
                    // InternalMycnl.g:6918:4: ( (lv_no_of_people_25_0= RULE_INT ) )
                    // InternalMycnl.g:6919:5: (lv_no_of_people_25_0= RULE_INT )
                    {
                    // InternalMycnl.g:6919:5: (lv_no_of_people_25_0= RULE_INT )
                    // InternalMycnl.g:6920:6: lv_no_of_people_25_0= RULE_INT
                    {
                    lv_no_of_people_25_0=(Token)match(input,RULE_INT,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_people_25_0, grammarAccess.getDesignEducationalAccess().getNo_of_peopleINTTerminalRuleCall_1_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignEducationalRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_people",
                      							lv_no_of_people_25_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_26=(Token)match(input,79,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getDesignEducationalAccess().getPeopleKeyword_1_11());
                      			
                    }
                    otherlv_27=(Token)match(input,36,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_27, grammarAccess.getDesignEducationalAccess().getInKeyword_1_12());
                      			
                    }
                    otherlv_28=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getDesignEducationalAccess().getRegionKeyword_1_13());
                      			
                    }
                    // InternalMycnl.g:6948:4: ( (lv_region_29_0= RULE_INT ) )
                    // InternalMycnl.g:6949:5: (lv_region_29_0= RULE_INT )
                    {
                    // InternalMycnl.g:6949:5: (lv_region_29_0= RULE_INT )
                    // InternalMycnl.g:6950:6: lv_region_29_0= RULE_INT
                    {
                    lv_region_29_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_29_0, grammarAccess.getDesignEducationalAccess().getRegionINTTerminalRuleCall_1_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignEducationalRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_29_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalMycnl.g:6968:3: (otherlv_30= 'What' otherlv_31= 'Will' otherlv_32= 'Be' otherlv_33= 'The' otherlv_34= 'Design' otherlv_35= 'Plan' otherlv_36= 'For' otherlv_37= 'Educational' otherlv_38= 'Area' otherlv_39= 'For' ( (lv_no_of_people_40_0= RULE_INT ) ) otherlv_41= 'People' otherlv_42= 'In' otherlv_43= 'Region' ( (lv_region_44_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:6968:3: (otherlv_30= 'What' otherlv_31= 'Will' otherlv_32= 'Be' otherlv_33= 'The' otherlv_34= 'Design' otherlv_35= 'Plan' otherlv_36= 'For' otherlv_37= 'Educational' otherlv_38= 'Area' otherlv_39= 'For' ( (lv_no_of_people_40_0= RULE_INT ) ) otherlv_41= 'People' otherlv_42= 'In' otherlv_43= 'Region' ( (lv_region_44_0= RULE_INT ) ) )
                    // InternalMycnl.g:6969:4: otherlv_30= 'What' otherlv_31= 'Will' otherlv_32= 'Be' otherlv_33= 'The' otherlv_34= 'Design' otherlv_35= 'Plan' otherlv_36= 'For' otherlv_37= 'Educational' otherlv_38= 'Area' otherlv_39= 'For' ( (lv_no_of_people_40_0= RULE_INT ) ) otherlv_41= 'People' otherlv_42= 'In' otherlv_43= 'Region' ( (lv_region_44_0= RULE_INT ) )
                    {
                    otherlv_30=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_30, grammarAccess.getDesignEducationalAccess().getWhatKeyword_2_0());
                      			
                    }
                    otherlv_31=(Token)match(input,38,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getDesignEducationalAccess().getWillKeyword_2_1());
                      			
                    }
                    otherlv_32=(Token)match(input,39,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_32, grammarAccess.getDesignEducationalAccess().getBeKeyword_2_2());
                      			
                    }
                    otherlv_33=(Token)match(input,40,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_33, grammarAccess.getDesignEducationalAccess().getTheKeyword_2_3());
                      			
                    }
                    otherlv_34=(Token)match(input,80,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_34, grammarAccess.getDesignEducationalAccess().getDesignKeyword_2_4());
                      			
                    }
                    otherlv_35=(Token)match(input,81,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_35, grammarAccess.getDesignEducationalAccess().getPlanKeyword_2_5());
                      			
                    }
                    otherlv_36=(Token)match(input,82,FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_36, grammarAccess.getDesignEducationalAccess().getForKeyword_2_6());
                      			
                    }
                    otherlv_37=(Token)match(input,126,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_37, grammarAccess.getDesignEducationalAccess().getEducationalKeyword_2_7());
                      			
                    }
                    otherlv_38=(Token)match(input,84,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_38, grammarAccess.getDesignEducationalAccess().getAreaKeyword_2_8());
                      			
                    }
                    otherlv_39=(Token)match(input,82,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_39, grammarAccess.getDesignEducationalAccess().getForKeyword_2_9());
                      			
                    }
                    // InternalMycnl.g:7009:4: ( (lv_no_of_people_40_0= RULE_INT ) )
                    // InternalMycnl.g:7010:5: (lv_no_of_people_40_0= RULE_INT )
                    {
                    // InternalMycnl.g:7010:5: (lv_no_of_people_40_0= RULE_INT )
                    // InternalMycnl.g:7011:6: lv_no_of_people_40_0= RULE_INT
                    {
                    lv_no_of_people_40_0=(Token)match(input,RULE_INT,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_people_40_0, grammarAccess.getDesignEducationalAccess().getNo_of_peopleINTTerminalRuleCall_2_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignEducationalRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_people",
                      							lv_no_of_people_40_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_41=(Token)match(input,85,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_41, grammarAccess.getDesignEducationalAccess().getPeopleKeyword_2_11());
                      			
                    }
                    otherlv_42=(Token)match(input,47,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getDesignEducationalAccess().getInKeyword_2_12());
                      			
                    }
                    otherlv_43=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_43, grammarAccess.getDesignEducationalAccess().getRegionKeyword_2_13());
                      			
                    }
                    // InternalMycnl.g:7039:4: ( (lv_region_44_0= RULE_INT ) )
                    // InternalMycnl.g:7040:5: (lv_region_44_0= RULE_INT )
                    {
                    // InternalMycnl.g:7040:5: (lv_region_44_0= RULE_INT )
                    // InternalMycnl.g:7041:6: lv_region_44_0= RULE_INT
                    {
                    lv_region_44_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_44_0, grammarAccess.getDesignEducationalAccess().getRegionINTTerminalRuleCall_2_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignEducationalRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_44_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalMycnl.g:7059:3: (otherlv_45= 'What' otherlv_46= 'Will' otherlv_47= 'be' otherlv_48= 'the' otherlv_49= 'Design' otherlv_50= 'Plan' otherlv_51= 'for' otherlv_52= 'Educational' otherlv_53= 'Area' otherlv_54= 'for' ( (lv_no_of_people_55_0= RULE_INT ) ) otherlv_56= 'People' otherlv_57= 'in' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:7059:3: (otherlv_45= 'What' otherlv_46= 'Will' otherlv_47= 'be' otherlv_48= 'the' otherlv_49= 'Design' otherlv_50= 'Plan' otherlv_51= 'for' otherlv_52= 'Educational' otherlv_53= 'Area' otherlv_54= 'for' ( (lv_no_of_people_55_0= RULE_INT ) ) otherlv_56= 'People' otherlv_57= 'in' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) ) )
                    // InternalMycnl.g:7060:4: otherlv_45= 'What' otherlv_46= 'Will' otherlv_47= 'be' otherlv_48= 'the' otherlv_49= 'Design' otherlv_50= 'Plan' otherlv_51= 'for' otherlv_52= 'Educational' otherlv_53= 'Area' otherlv_54= 'for' ( (lv_no_of_people_55_0= RULE_INT ) ) otherlv_56= 'People' otherlv_57= 'in' otherlv_58= 'Region' ( (lv_region_59_0= RULE_INT ) )
                    {
                    otherlv_45=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_45, grammarAccess.getDesignEducationalAccess().getWhatKeyword_3_0());
                      			
                    }
                    otherlv_46=(Token)match(input,38,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_46, grammarAccess.getDesignEducationalAccess().getWillKeyword_3_1());
                      			
                    }
                    otherlv_47=(Token)match(input,27,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_47, grammarAccess.getDesignEducationalAccess().getBeKeyword_3_2());
                      			
                    }
                    otherlv_48=(Token)match(input,28,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getDesignEducationalAccess().getTheKeyword_3_3());
                      			
                    }
                    otherlv_49=(Token)match(input,80,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_49, grammarAccess.getDesignEducationalAccess().getDesignKeyword_3_4());
                      			
                    }
                    otherlv_50=(Token)match(input,81,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_50, grammarAccess.getDesignEducationalAccess().getPlanKeyword_3_5());
                      			
                    }
                    otherlv_51=(Token)match(input,76,FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_51, grammarAccess.getDesignEducationalAccess().getForKeyword_3_6());
                      			
                    }
                    otherlv_52=(Token)match(input,126,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_52, grammarAccess.getDesignEducationalAccess().getEducationalKeyword_3_7());
                      			
                    }
                    otherlv_53=(Token)match(input,84,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_53, grammarAccess.getDesignEducationalAccess().getAreaKeyword_3_8());
                      			
                    }
                    otherlv_54=(Token)match(input,76,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_54, grammarAccess.getDesignEducationalAccess().getForKeyword_3_9());
                      			
                    }
                    // InternalMycnl.g:7100:4: ( (lv_no_of_people_55_0= RULE_INT ) )
                    // InternalMycnl.g:7101:5: (lv_no_of_people_55_0= RULE_INT )
                    {
                    // InternalMycnl.g:7101:5: (lv_no_of_people_55_0= RULE_INT )
                    // InternalMycnl.g:7102:6: lv_no_of_people_55_0= RULE_INT
                    {
                    lv_no_of_people_55_0=(Token)match(input,RULE_INT,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_people_55_0, grammarAccess.getDesignEducationalAccess().getNo_of_peopleINTTerminalRuleCall_3_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignEducationalRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_people",
                      							lv_no_of_people_55_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_56=(Token)match(input,85,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_56, grammarAccess.getDesignEducationalAccess().getPeopleKeyword_3_11());
                      			
                    }
                    otherlv_57=(Token)match(input,36,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_57, grammarAccess.getDesignEducationalAccess().getInKeyword_3_12());
                      			
                    }
                    otherlv_58=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_58, grammarAccess.getDesignEducationalAccess().getRegionKeyword_3_13());
                      			
                    }
                    // InternalMycnl.g:7130:4: ( (lv_region_59_0= RULE_INT ) )
                    // InternalMycnl.g:7131:5: (lv_region_59_0= RULE_INT )
                    {
                    // InternalMycnl.g:7131:5: (lv_region_59_0= RULE_INT )
                    // InternalMycnl.g:7132:6: lv_region_59_0= RULE_INT
                    {
                    lv_region_59_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_59_0, grammarAccess.getDesignEducationalAccess().getRegionINTTerminalRuleCall_3_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignEducationalRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_59_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalMycnl.g:7150:3: (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'DESIGN' otherlv_65= 'PLAN' otherlv_66= 'FOR' otherlv_67= 'EDUCATIONAL' otherlv_68= 'AREA' otherlv_69= 'FOR' ( (lv_no_of_people_70_0= RULE_INT ) ) otherlv_71= 'PEOPLE' otherlv_72= 'IN' otherlv_73= 'REGION' ( (lv_region_74_0= RULE_INT ) ) )
                    {
                    // InternalMycnl.g:7150:3: (otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'DESIGN' otherlv_65= 'PLAN' otherlv_66= 'FOR' otherlv_67= 'EDUCATIONAL' otherlv_68= 'AREA' otherlv_69= 'FOR' ( (lv_no_of_people_70_0= RULE_INT ) ) otherlv_71= 'PEOPLE' otherlv_72= 'IN' otherlv_73= 'REGION' ( (lv_region_74_0= RULE_INT ) ) )
                    // InternalMycnl.g:7151:4: otherlv_60= 'WHAT' otherlv_61= 'WILL' otherlv_62= 'BE' otherlv_63= 'THE' otherlv_64= 'DESIGN' otherlv_65= 'PLAN' otherlv_66= 'FOR' otherlv_67= 'EDUCATIONAL' otherlv_68= 'AREA' otherlv_69= 'FOR' ( (lv_no_of_people_70_0= RULE_INT ) ) otherlv_71= 'PEOPLE' otherlv_72= 'IN' otherlv_73= 'REGION' ( (lv_region_74_0= RULE_INT ) )
                    {
                    otherlv_60=(Token)match(input,48,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_60, grammarAccess.getDesignEducationalAccess().getWHATKeyword_4_0());
                      			
                    }
                    otherlv_61=(Token)match(input,49,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_61, grammarAccess.getDesignEducationalAccess().getWILLKeyword_4_1());
                      			
                    }
                    otherlv_62=(Token)match(input,50,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_62, grammarAccess.getDesignEducationalAccess().getBEKeyword_4_2());
                      			
                    }
                    otherlv_63=(Token)match(input,51,FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_63, grammarAccess.getDesignEducationalAccess().getTHEKeyword_4_3());
                      			
                    }
                    otherlv_64=(Token)match(input,86,FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_64, grammarAccess.getDesignEducationalAccess().getDESIGNKeyword_4_4());
                      			
                    }
                    otherlv_65=(Token)match(input,87,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_65, grammarAccess.getDesignEducationalAccess().getPLANKeyword_4_5());
                      			
                    }
                    otherlv_66=(Token)match(input,88,FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_66, grammarAccess.getDesignEducationalAccess().getFORKeyword_4_6());
                      			
                    }
                    otherlv_67=(Token)match(input,127,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_67, grammarAccess.getDesignEducationalAccess().getEDUCATIONALKeyword_4_7());
                      			
                    }
                    otherlv_68=(Token)match(input,90,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_68, grammarAccess.getDesignEducationalAccess().getAREAKeyword_4_8());
                      			
                    }
                    otherlv_69=(Token)match(input,88,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_69, grammarAccess.getDesignEducationalAccess().getFORKeyword_4_9());
                      			
                    }
                    // InternalMycnl.g:7191:4: ( (lv_no_of_people_70_0= RULE_INT ) )
                    // InternalMycnl.g:7192:5: (lv_no_of_people_70_0= RULE_INT )
                    {
                    // InternalMycnl.g:7192:5: (lv_no_of_people_70_0= RULE_INT )
                    // InternalMycnl.g:7193:6: lv_no_of_people_70_0= RULE_INT
                    {
                    lv_no_of_people_70_0=(Token)match(input,RULE_INT,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_no_of_people_70_0, grammarAccess.getDesignEducationalAccess().getNo_of_peopleINTTerminalRuleCall_4_10_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignEducationalRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"no_of_people",
                      							lv_no_of_people_70_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_71=(Token)match(input,91,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_71, grammarAccess.getDesignEducationalAccess().getPEOPLEKeyword_4_11());
                      			
                    }
                    otherlv_72=(Token)match(input,58,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_72, grammarAccess.getDesignEducationalAccess().getINKeyword_4_12());
                      			
                    }
                    otherlv_73=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_73, grammarAccess.getDesignEducationalAccess().getREGIONKeyword_4_13());
                      			
                    }
                    // InternalMycnl.g:7221:4: ( (lv_region_74_0= RULE_INT ) )
                    // InternalMycnl.g:7222:5: (lv_region_74_0= RULE_INT )
                    {
                    // InternalMycnl.g:7222:5: (lv_region_74_0= RULE_INT )
                    // InternalMycnl.g:7223:6: lv_region_74_0= RULE_INT
                    {
                    lv_region_74_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_region_74_0, grammarAccess.getDesignEducationalAccess().getRegionINTTerminalRuleCall_4_14_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignEducationalRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"region",
                      							lv_region_74_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDesignEducational"


    // $ANTLR start "entryRuleXExpression"
    // InternalMycnl.g:7244:1: entryRuleXExpression returns [EObject current=null] : iv_ruleXExpression= ruleXExpression EOF ;
    public final EObject entryRuleXExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpression = null;


        try {
            // InternalMycnl.g:7244:52: (iv_ruleXExpression= ruleXExpression EOF )
            // InternalMycnl.g:7245:2: iv_ruleXExpression= ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpression=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // InternalMycnl.g:7251:1: ruleXExpression returns [EObject current=null] : this_XAssignment_0= ruleXAssignment ;
    public final EObject ruleXExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAssignment_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:7257:2: (this_XAssignment_0= ruleXAssignment )
            // InternalMycnl.g:7258:2: this_XAssignment_0= ruleXAssignment
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_XAssignment_0=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_XAssignment_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXAssignment"
    // InternalMycnl.g:7269:1: entryRuleXAssignment returns [EObject current=null] : iv_ruleXAssignment= ruleXAssignment EOF ;
    public final EObject entryRuleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAssignment = null;


        try {
            // InternalMycnl.g:7269:52: (iv_ruleXAssignment= ruleXAssignment EOF )
            // InternalMycnl.g:7270:2: iv_ruleXAssignment= ruleXAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAssignment=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAssignment"


    // $ANTLR start "ruleXAssignment"
    // InternalMycnl.g:7276:1: ruleXAssignment returns [EObject current=null] : ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) ;
    public final EObject ruleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject lv_value_3_0 = null;

        EObject this_XOrExpression_4 = null;

        EObject lv_rightOperand_7_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:7282:2: ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) )
            // InternalMycnl.g:7283:2: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            {
            // InternalMycnl.g:7283:2: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            int alt22=2;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA22_1 = input.LA(2);

                if ( (LA22_1==EOF||(LA22_1>=RULE_INT && LA22_1<=RULE_ID)||LA22_1==30||LA22_1==76||(LA22_1>=129 && LA22_1<=170)||(LA22_1>=172 && LA22_1<=197)) ) {
                    alt22=2;
                }
                else if ( (LA22_1==128) ) {
                    alt22=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 1, input);

                    throw nvae;
                }
                }
                break;
            case 182:
                {
                int LA22_2 = input.LA(2);

                if ( (LA22_2==EOF||(LA22_2>=RULE_INT && LA22_2<=RULE_ID)||LA22_2==30||LA22_2==76||(LA22_2>=129 && LA22_2<=170)||(LA22_2>=172 && LA22_2<=197)) ) {
                    alt22=2;
                }
                else if ( (LA22_2==128) ) {
                    alt22=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 2, input);

                    throw nvae;
                }
                }
                break;
            case 183:
                {
                int LA22_3 = input.LA(2);

                if ( (LA22_3==EOF||(LA22_3>=RULE_INT && LA22_3<=RULE_ID)||LA22_3==30||LA22_3==76||(LA22_3>=129 && LA22_3<=170)||(LA22_3>=172 && LA22_3<=197)) ) {
                    alt22=2;
                }
                else if ( (LA22_3==128) ) {
                    alt22=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 3, input);

                    throw nvae;
                }
                }
                break;
            case 184:
                {
                int LA22_4 = input.LA(2);

                if ( (LA22_4==EOF||(LA22_4>=RULE_INT && LA22_4<=RULE_ID)||LA22_4==30||LA22_4==76||(LA22_4>=129 && LA22_4<=170)||(LA22_4>=172 && LA22_4<=197)) ) {
                    alt22=2;
                }
                else if ( (LA22_4==128) ) {
                    alt22=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 4, input);

                    throw nvae;
                }
                }
                break;
            case 185:
                {
                int LA22_5 = input.LA(2);

                if ( (LA22_5==128) ) {
                    alt22=1;
                }
                else if ( (LA22_5==EOF||(LA22_5>=RULE_INT && LA22_5<=RULE_ID)||LA22_5==30||LA22_5==76||(LA22_5>=129 && LA22_5<=170)||(LA22_5>=172 && LA22_5<=197)) ) {
                    alt22=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 5, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
            case RULE_STRING:
            case RULE_HEX:
            case RULE_DECIMAL:
            case 30:
            case 76:
            case 134:
            case 150:
            case 151:
            case 156:
            case 164:
            case 166:
            case 167:
            case 169:
            case 174:
            case 178:
            case 179:
            case 186:
            case 187:
            case 188:
            case 189:
            case 190:
            case 191:
            case 192:
            case 193:
            case 194:
            case 196:
                {
                alt22=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalMycnl.g:7284:3: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    {
                    // InternalMycnl.g:7284:3: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    // InternalMycnl.g:7285:4: () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) )
                    {
                    // InternalMycnl.g:7285:4: ()
                    // InternalMycnl.g:7286:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalMycnl.g:7292:4: ( ( ruleFeatureCallID ) )
                    // InternalMycnl.g:7293:5: ( ruleFeatureCallID )
                    {
                    // InternalMycnl.g:7293:5: ( ruleFeatureCallID )
                    // InternalMycnl.g:7294:6: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXAssignmentRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_114);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2());
                      			
                    }
                    pushFollow(FOLLOW_115);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalMycnl.g:7315:4: ( (lv_value_3_0= ruleXAssignment ) )
                    // InternalMycnl.g:7316:5: (lv_value_3_0= ruleXAssignment )
                    {
                    // InternalMycnl.g:7316:5: (lv_value_3_0= ruleXAssignment )
                    // InternalMycnl.g:7317:6: lv_value_3_0= ruleXAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:7336:3: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    {
                    // InternalMycnl.g:7336:3: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    // InternalMycnl.g:7337:4: this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_116);
                    this_XOrExpression_4=ruleXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XOrExpression_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalMycnl.g:7345:4: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    int alt21=2;
                    alt21 = dfa21.predict(input);
                    switch (alt21) {
                        case 1 :
                            // InternalMycnl.g:7346:5: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            {
                            // InternalMycnl.g:7346:5: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) )
                            // InternalMycnl.g:7347:6: ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) )
                            {
                            // InternalMycnl.g:7357:6: ( () ( ( ruleOpMultiAssign ) ) )
                            // InternalMycnl.g:7358:7: () ( ( ruleOpMultiAssign ) )
                            {
                            // InternalMycnl.g:7358:7: ()
                            // InternalMycnl.g:7359:8: 
                            {
                            if ( state.backtracking==0 ) {

                              								current = forceCreateModelElementAndSet(
                              									grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
                              									current);
                              							
                            }

                            }

                            // InternalMycnl.g:7365:7: ( ( ruleOpMultiAssign ) )
                            // InternalMycnl.g:7366:8: ( ruleOpMultiAssign )
                            {
                            // InternalMycnl.g:7366:8: ( ruleOpMultiAssign )
                            // InternalMycnl.g:7367:9: ruleOpMultiAssign
                            {
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getXAssignmentRule());
                              									}
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
                              								
                            }
                            pushFollow(FOLLOW_115);
                            ruleOpMultiAssign();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }


                            }


                            }

                            // InternalMycnl.g:7383:5: ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            // InternalMycnl.g:7384:6: (lv_rightOperand_7_0= ruleXAssignment )
                            {
                            // InternalMycnl.g:7384:6: (lv_rightOperand_7_0= ruleXAssignment )
                            // InternalMycnl.g:7385:7: lv_rightOperand_7_0= ruleXAssignment
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_rightOperand_7_0=ruleXAssignment();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              							}
                              							set(
                              								current,
                              								"rightOperand",
                              								lv_rightOperand_7_0,
                              								"org.eclipse.xtext.xbase.Xbase.XAssignment");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAssignment"


    // $ANTLR start "entryRuleOpSingleAssign"
    // InternalMycnl.g:7408:1: entryRuleOpSingleAssign returns [String current=null] : iv_ruleOpSingleAssign= ruleOpSingleAssign EOF ;
    public final String entryRuleOpSingleAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpSingleAssign = null;


        try {
            // InternalMycnl.g:7408:54: (iv_ruleOpSingleAssign= ruleOpSingleAssign EOF )
            // InternalMycnl.g:7409:2: iv_ruleOpSingleAssign= ruleOpSingleAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpSingleAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpSingleAssign=ruleOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpSingleAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpSingleAssign"


    // $ANTLR start "ruleOpSingleAssign"
    // InternalMycnl.g:7415:1: ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '=' ;
    public final AntlrDatatypeRuleToken ruleOpSingleAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMycnl.g:7421:2: (kw= '=' )
            // InternalMycnl.g:7422:2: kw= '='
            {
            kw=(Token)match(input,128,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpSingleAssign"


    // $ANTLR start "entryRuleOpMultiAssign"
    // InternalMycnl.g:7430:1: entryRuleOpMultiAssign returns [String current=null] : iv_ruleOpMultiAssign= ruleOpMultiAssign EOF ;
    public final String entryRuleOpMultiAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMultiAssign = null;


        try {
            // InternalMycnl.g:7430:53: (iv_ruleOpMultiAssign= ruleOpMultiAssign EOF )
            // InternalMycnl.g:7431:2: iv_ruleOpMultiAssign= ruleOpMultiAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMultiAssign=ruleOpMultiAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMultiAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMultiAssign"


    // $ANTLR start "ruleOpMultiAssign"
    // InternalMycnl.g:7437:1: ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) ;
    public final AntlrDatatypeRuleToken ruleOpMultiAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMycnl.g:7443:2: ( (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) )
            // InternalMycnl.g:7444:2: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            {
            // InternalMycnl.g:7444:2: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            int alt24=7;
            switch ( input.LA(1) ) {
            case 129:
                {
                alt24=1;
                }
                break;
            case 130:
                {
                alt24=2;
                }
                break;
            case 131:
                {
                alt24=3;
                }
                break;
            case 132:
                {
                alt24=4;
                }
                break;
            case 133:
                {
                alt24=5;
                }
                break;
            case 134:
                {
                alt24=6;
                }
                break;
            case 135:
                {
                alt24=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalMycnl.g:7445:3: kw= '+='
                    {
                    kw=(Token)match(input,129,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMycnl.g:7451:3: kw= '-='
                    {
                    kw=(Token)match(input,130,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMycnl.g:7457:3: kw= '*='
                    {
                    kw=(Token)match(input,131,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMycnl.g:7463:3: kw= '/='
                    {
                    kw=(Token)match(input,132,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMycnl.g:7469:3: kw= '%='
                    {
                    kw=(Token)match(input,133,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMycnl.g:7475:3: (kw= '<' kw= '<' kw= '=' )
                    {
                    // InternalMycnl.g:7475:3: (kw= '<' kw= '<' kw= '=' )
                    // InternalMycnl.g:7476:4: kw= '<' kw= '<' kw= '='
                    {
                    kw=(Token)match(input,134,FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_0());
                      			
                    }
                    kw=(Token)match(input,134,FOLLOW_114); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_1());
                      			
                    }
                    kw=(Token)match(input,128,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_5_2());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalMycnl.g:7493:3: (kw= '>' (kw= '>' )? kw= '>=' )
                    {
                    // InternalMycnl.g:7493:3: (kw= '>' (kw= '>' )? kw= '>=' )
                    // InternalMycnl.g:7494:4: kw= '>' (kw= '>' )? kw= '>='
                    {
                    kw=(Token)match(input,135,FOLLOW_118); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0());
                      			
                    }
                    // InternalMycnl.g:7499:4: (kw= '>' )?
                    int alt23=2;
                    int LA23_0 = input.LA(1);

                    if ( (LA23_0==135) ) {
                        alt23=1;
                    }
                    switch (alt23) {
                        case 1 :
                            // InternalMycnl.g:7500:5: kw= '>'
                            {
                            kw=(Token)match(input,135,FOLLOW_119); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1());
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,136,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMultiAssign"


    // $ANTLR start "entryRuleXOrExpression"
    // InternalMycnl.g:7516:1: entryRuleXOrExpression returns [EObject current=null] : iv_ruleXOrExpression= ruleXOrExpression EOF ;
    public final EObject entryRuleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOrExpression = null;


        try {
            // InternalMycnl.g:7516:54: (iv_ruleXOrExpression= ruleXOrExpression EOF )
            // InternalMycnl.g:7517:2: iv_ruleXOrExpression= ruleXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOrExpression=ruleXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOrExpression"


    // $ANTLR start "ruleXOrExpression"
    // InternalMycnl.g:7523:1: ruleXOrExpression returns [EObject current=null] : (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) ;
    public final EObject ruleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAndExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:7529:2: ( (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) )
            // InternalMycnl.g:7530:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            {
            // InternalMycnl.g:7530:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            // InternalMycnl.g:7531:3: this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_120);
            this_XAndExpression_0=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMycnl.g:7539:3: ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( (LA25_0==137) ) {
                    int LA25_2 = input.LA(2);

                    if ( (synpred2_InternalMycnl()) ) {
                        alt25=1;
                    }


                }


                switch (alt25) {
            	case 1 :
            	    // InternalMycnl.g:7540:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    {
            	    // InternalMycnl.g:7540:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) )
            	    // InternalMycnl.g:7541:5: ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) )
            	    {
            	    // InternalMycnl.g:7551:5: ( () ( ( ruleOpOr ) ) )
            	    // InternalMycnl.g:7552:6: () ( ( ruleOpOr ) )
            	    {
            	    // InternalMycnl.g:7552:6: ()
            	    // InternalMycnl.g:7553:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalMycnl.g:7559:6: ( ( ruleOpOr ) )
            	    // InternalMycnl.g:7560:7: ( ruleOpOr )
            	    {
            	    // InternalMycnl.g:7560:7: ( ruleOpOr )
            	    // InternalMycnl.g:7561:8: ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOrExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_115);
            	    ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalMycnl.g:7577:4: ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    // InternalMycnl.g:7578:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    {
            	    // InternalMycnl.g:7578:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    // InternalMycnl.g:7579:6: lv_rightOperand_3_0= ruleXAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_120);
            	    lv_rightOperand_3_0=ruleXAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XAndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOrExpression"


    // $ANTLR start "entryRuleOpOr"
    // InternalMycnl.g:7601:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // InternalMycnl.g:7601:44: (iv_ruleOpOr= ruleOpOr EOF )
            // InternalMycnl.g:7602:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // InternalMycnl.g:7608:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '||' ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMycnl.g:7614:2: (kw= '||' )
            // InternalMycnl.g:7615:2: kw= '||'
            {
            kw=(Token)match(input,137,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleXAndExpression"
    // InternalMycnl.g:7623:1: entryRuleXAndExpression returns [EObject current=null] : iv_ruleXAndExpression= ruleXAndExpression EOF ;
    public final EObject entryRuleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAndExpression = null;


        try {
            // InternalMycnl.g:7623:55: (iv_ruleXAndExpression= ruleXAndExpression EOF )
            // InternalMycnl.g:7624:2: iv_ruleXAndExpression= ruleXAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAndExpression=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAndExpression"


    // $ANTLR start "ruleXAndExpression"
    // InternalMycnl.g:7630:1: ruleXAndExpression returns [EObject current=null] : (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) ;
    public final EObject ruleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XEqualityExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:7636:2: ( (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) )
            // InternalMycnl.g:7637:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            {
            // InternalMycnl.g:7637:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            // InternalMycnl.g:7638:3: this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_121);
            this_XEqualityExpression_0=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XEqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMycnl.g:7646:3: ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==138) ) {
                    int LA26_2 = input.LA(2);

                    if ( (synpred3_InternalMycnl()) ) {
                        alt26=1;
                    }


                }


                switch (alt26) {
            	case 1 :
            	    // InternalMycnl.g:7647:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    {
            	    // InternalMycnl.g:7647:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) )
            	    // InternalMycnl.g:7648:5: ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) )
            	    {
            	    // InternalMycnl.g:7658:5: ( () ( ( ruleOpAnd ) ) )
            	    // InternalMycnl.g:7659:6: () ( ( ruleOpAnd ) )
            	    {
            	    // InternalMycnl.g:7659:6: ()
            	    // InternalMycnl.g:7660:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalMycnl.g:7666:6: ( ( ruleOpAnd ) )
            	    // InternalMycnl.g:7667:7: ( ruleOpAnd )
            	    {
            	    // InternalMycnl.g:7667:7: ( ruleOpAnd )
            	    // InternalMycnl.g:7668:8: ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAndExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_115);
            	    ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalMycnl.g:7684:4: ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    // InternalMycnl.g:7685:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    {
            	    // InternalMycnl.g:7685:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    // InternalMycnl.g:7686:6: lv_rightOperand_3_0= ruleXEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_rightOperand_3_0=ruleXEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XEqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAndExpression"


    // $ANTLR start "entryRuleOpAnd"
    // InternalMycnl.g:7708:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // InternalMycnl.g:7708:45: (iv_ruleOpAnd= ruleOpAnd EOF )
            // InternalMycnl.g:7709:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // InternalMycnl.g:7715:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&&' ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMycnl.g:7721:2: (kw= '&&' )
            // InternalMycnl.g:7722:2: kw= '&&'
            {
            kw=(Token)match(input,138,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleXEqualityExpression"
    // InternalMycnl.g:7730:1: entryRuleXEqualityExpression returns [EObject current=null] : iv_ruleXEqualityExpression= ruleXEqualityExpression EOF ;
    public final EObject entryRuleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXEqualityExpression = null;


        try {
            // InternalMycnl.g:7730:60: (iv_ruleXEqualityExpression= ruleXEqualityExpression EOF )
            // InternalMycnl.g:7731:2: iv_ruleXEqualityExpression= ruleXEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXEqualityExpression=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXEqualityExpression"


    // $ANTLR start "ruleXEqualityExpression"
    // InternalMycnl.g:7737:1: ruleXEqualityExpression returns [EObject current=null] : (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) ;
    public final EObject ruleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XRelationalExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:7743:2: ( (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) )
            // InternalMycnl.g:7744:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            {
            // InternalMycnl.g:7744:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            // InternalMycnl.g:7745:3: this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_122);
            this_XRelationalExpression_0=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XRelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMycnl.g:7753:3: ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            loop27:
            do {
                int alt27=2;
                switch ( input.LA(1) ) {
                case 139:
                    {
                    int LA27_2 = input.LA(2);

                    if ( (synpred4_InternalMycnl()) ) {
                        alt27=1;
                    }


                    }
                    break;
                case 140:
                    {
                    int LA27_3 = input.LA(2);

                    if ( (synpred4_InternalMycnl()) ) {
                        alt27=1;
                    }


                    }
                    break;
                case 141:
                    {
                    int LA27_4 = input.LA(2);

                    if ( (synpred4_InternalMycnl()) ) {
                        alt27=1;
                    }


                    }
                    break;
                case 142:
                    {
                    int LA27_5 = input.LA(2);

                    if ( (synpred4_InternalMycnl()) ) {
                        alt27=1;
                    }


                    }
                    break;

                }

                switch (alt27) {
            	case 1 :
            	    // InternalMycnl.g:7754:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    {
            	    // InternalMycnl.g:7754:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) )
            	    // InternalMycnl.g:7755:5: ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) )
            	    {
            	    // InternalMycnl.g:7765:5: ( () ( ( ruleOpEquality ) ) )
            	    // InternalMycnl.g:7766:6: () ( ( ruleOpEquality ) )
            	    {
            	    // InternalMycnl.g:7766:6: ()
            	    // InternalMycnl.g:7767:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalMycnl.g:7773:6: ( ( ruleOpEquality ) )
            	    // InternalMycnl.g:7774:7: ( ruleOpEquality )
            	    {
            	    // InternalMycnl.g:7774:7: ( ruleOpEquality )
            	    // InternalMycnl.g:7775:8: ruleOpEquality
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXEqualityExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_115);
            	    ruleOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalMycnl.g:7791:4: ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    // InternalMycnl.g:7792:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    {
            	    // InternalMycnl.g:7792:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    // InternalMycnl.g:7793:6: lv_rightOperand_3_0= ruleXRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_122);
            	    lv_rightOperand_3_0=ruleXRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XRelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXEqualityExpression"


    // $ANTLR start "entryRuleOpEquality"
    // InternalMycnl.g:7815:1: entryRuleOpEquality returns [String current=null] : iv_ruleOpEquality= ruleOpEquality EOF ;
    public final String entryRuleOpEquality() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpEquality = null;


        try {
            // InternalMycnl.g:7815:50: (iv_ruleOpEquality= ruleOpEquality EOF )
            // InternalMycnl.g:7816:2: iv_ruleOpEquality= ruleOpEquality EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpEqualityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpEquality=ruleOpEquality();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpEquality.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpEquality"


    // $ANTLR start "ruleOpEquality"
    // InternalMycnl.g:7822:1: ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' ) ;
    public final AntlrDatatypeRuleToken ruleOpEquality() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMycnl.g:7828:2: ( (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' ) )
            // InternalMycnl.g:7829:2: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' )
            {
            // InternalMycnl.g:7829:2: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' )
            int alt28=4;
            switch ( input.LA(1) ) {
            case 139:
                {
                alt28=1;
                }
                break;
            case 140:
                {
                alt28=2;
                }
                break;
            case 141:
                {
                alt28=3;
                }
                break;
            case 142:
                {
                alt28=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }

            switch (alt28) {
                case 1 :
                    // InternalMycnl.g:7830:3: kw= '=='
                    {
                    kw=(Token)match(input,139,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMycnl.g:7836:3: kw= '!='
                    {
                    kw=(Token)match(input,140,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMycnl.g:7842:3: kw= '==='
                    {
                    kw=(Token)match(input,141,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMycnl.g:7848:3: kw= '!=='
                    {
                    kw=(Token)match(input,142,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpEquality"


    // $ANTLR start "entryRuleXRelationalExpression"
    // InternalMycnl.g:7857:1: entryRuleXRelationalExpression returns [EObject current=null] : iv_ruleXRelationalExpression= ruleXRelationalExpression EOF ;
    public final EObject entryRuleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXRelationalExpression = null;


        try {
            // InternalMycnl.g:7857:62: (iv_ruleXRelationalExpression= ruleXRelationalExpression EOF )
            // InternalMycnl.g:7858:2: iv_ruleXRelationalExpression= ruleXRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXRelationalExpression=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXRelationalExpression"


    // $ANTLR start "ruleXRelationalExpression"
    // InternalMycnl.g:7864:1: ruleXRelationalExpression returns [EObject current=null] : (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) ;
    public final EObject ruleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XOtherOperatorExpression_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_rightOperand_6_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:7870:2: ( (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) )
            // InternalMycnl.g:7871:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            {
            // InternalMycnl.g:7871:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            // InternalMycnl.g:7872:3: this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_123);
            this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XOtherOperatorExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMycnl.g:7880:3: ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            loop29:
            do {
                int alt29=3;
                switch ( input.LA(1) ) {
                case 134:
                    {
                    int LA29_2 = input.LA(2);

                    if ( (synpred6_InternalMycnl()) ) {
                        alt29=2;
                    }


                    }
                    break;
                case 135:
                    {
                    int LA29_3 = input.LA(2);

                    if ( (synpred6_InternalMycnl()) ) {
                        alt29=2;
                    }


                    }
                    break;
                case 143:
                    {
                    int LA29_4 = input.LA(2);

                    if ( (synpred5_InternalMycnl()) ) {
                        alt29=1;
                    }


                    }
                    break;
                case 136:
                    {
                    int LA29_5 = input.LA(2);

                    if ( (synpred6_InternalMycnl()) ) {
                        alt29=2;
                    }


                    }
                    break;

                }

                switch (alt29) {
            	case 1 :
            	    // InternalMycnl.g:7881:4: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    {
            	    // InternalMycnl.g:7881:4: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    // InternalMycnl.g:7882:5: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalMycnl.g:7882:5: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) )
            	    // InternalMycnl.g:7883:6: ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' )
            	    {
            	    // InternalMycnl.g:7889:6: ( () otherlv_2= 'instanceof' )
            	    // InternalMycnl.g:7890:7: () otherlv_2= 'instanceof'
            	    {
            	    // InternalMycnl.g:7890:7: ()
            	    // InternalMycnl.g:7891:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    otherlv_2=(Token)match(input,143,FOLLOW_124); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
            	      						
            	    }

            	    }


            	    }

            	    // InternalMycnl.g:7903:5: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalMycnl.g:7904:6: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalMycnl.g:7904:6: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalMycnl.g:7905:7: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"type",
            	      								lv_type_3_0,
            	      								"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMycnl.g:7924:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    {
            	    // InternalMycnl.g:7924:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    // InternalMycnl.g:7925:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    {
            	    // InternalMycnl.g:7925:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) )
            	    // InternalMycnl.g:7926:6: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) )
            	    {
            	    // InternalMycnl.g:7936:6: ( () ( ( ruleOpCompare ) ) )
            	    // InternalMycnl.g:7937:7: () ( ( ruleOpCompare ) )
            	    {
            	    // InternalMycnl.g:7937:7: ()
            	    // InternalMycnl.g:7938:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalMycnl.g:7944:7: ( ( ruleOpCompare ) )
            	    // InternalMycnl.g:7945:8: ( ruleOpCompare )
            	    {
            	    // InternalMycnl.g:7945:8: ( ruleOpCompare )
            	    // InternalMycnl.g:7946:9: ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXRelationalExpressionRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_115);
            	    ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalMycnl.g:7962:5: ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    // InternalMycnl.g:7963:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    {
            	    // InternalMycnl.g:7963:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    // InternalMycnl.g:7964:7: lv_rightOperand_6_0= ruleXOtherOperatorExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_rightOperand_6_0=ruleXOtherOperatorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"rightOperand",
            	      								lv_rightOperand_6_0,
            	      								"org.eclipse.xtext.xbase.Xbase.XOtherOperatorExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXRelationalExpression"


    // $ANTLR start "entryRuleOpCompare"
    // InternalMycnl.g:7987:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // InternalMycnl.g:7987:49: (iv_ruleOpCompare= ruleOpCompare EOF )
            // InternalMycnl.g:7988:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // InternalMycnl.g:7994:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMycnl.g:8000:2: ( (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) )
            // InternalMycnl.g:8001:2: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            {
            // InternalMycnl.g:8001:2: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            int alt30=4;
            switch ( input.LA(1) ) {
            case 136:
                {
                alt30=1;
                }
                break;
            case 134:
                {
                int LA30_2 = input.LA(2);

                if ( (LA30_2==EOF||(LA30_2>=RULE_INT && LA30_2<=RULE_ID)||LA30_2==30||LA30_2==76||LA30_2==134||(LA30_2>=150 && LA30_2<=151)||LA30_2==156||LA30_2==164||(LA30_2>=166 && LA30_2<=167)||LA30_2==169||LA30_2==174||(LA30_2>=178 && LA30_2<=179)||(LA30_2>=182 && LA30_2<=194)||LA30_2==196) ) {
                    alt30=4;
                }
                else if ( (LA30_2==128) ) {
                    alt30=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 30, 2, input);

                    throw nvae;
                }
                }
                break;
            case 135:
                {
                alt30=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }

            switch (alt30) {
                case 1 :
                    // InternalMycnl.g:8002:3: kw= '>='
                    {
                    kw=(Token)match(input,136,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMycnl.g:8008:3: (kw= '<' kw= '=' )
                    {
                    // InternalMycnl.g:8008:3: (kw= '<' kw= '=' )
                    // InternalMycnl.g:8009:4: kw= '<' kw= '='
                    {
                    kw=(Token)match(input,134,FOLLOW_114); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0());
                      			
                    }
                    kw=(Token)match(input,128,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMycnl.g:8021:3: kw= '>'
                    {
                    kw=(Token)match(input,135,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMycnl.g:8027:3: kw= '<'
                    {
                    kw=(Token)match(input,134,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleXOtherOperatorExpression"
    // InternalMycnl.g:8036:1: entryRuleXOtherOperatorExpression returns [EObject current=null] : iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF ;
    public final EObject entryRuleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOtherOperatorExpression = null;


        try {
            // InternalMycnl.g:8036:65: (iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF )
            // InternalMycnl.g:8037:2: iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOtherOperatorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOtherOperatorExpression"


    // $ANTLR start "ruleXOtherOperatorExpression"
    // InternalMycnl.g:8043:1: ruleXOtherOperatorExpression returns [EObject current=null] : (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) ;
    public final EObject ruleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAdditiveExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:8049:2: ( (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) )
            // InternalMycnl.g:8050:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            {
            // InternalMycnl.g:8050:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            // InternalMycnl.g:8051:3: this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_125);
            this_XAdditiveExpression_0=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAdditiveExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMycnl.g:8059:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            loop31:
            do {
                int alt31=2;
                alt31 = dfa31.predict(input);
                switch (alt31) {
            	case 1 :
            	    // InternalMycnl.g:8060:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    {
            	    // InternalMycnl.g:8060:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) )
            	    // InternalMycnl.g:8061:5: ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) )
            	    {
            	    // InternalMycnl.g:8071:5: ( () ( ( ruleOpOther ) ) )
            	    // InternalMycnl.g:8072:6: () ( ( ruleOpOther ) )
            	    {
            	    // InternalMycnl.g:8072:6: ()
            	    // InternalMycnl.g:8073:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalMycnl.g:8079:6: ( ( ruleOpOther ) )
            	    // InternalMycnl.g:8080:7: ( ruleOpOther )
            	    {
            	    // InternalMycnl.g:8080:7: ( ruleOpOther )
            	    // InternalMycnl.g:8081:8: ruleOpOther
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_115);
            	    ruleOpOther();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalMycnl.g:8097:4: ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    // InternalMycnl.g:8098:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    {
            	    // InternalMycnl.g:8098:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    // InternalMycnl.g:8099:6: lv_rightOperand_3_0= ruleXAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_125);
            	    lv_rightOperand_3_0=ruleXAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XAdditiveExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOtherOperatorExpression"


    // $ANTLR start "entryRuleOpOther"
    // InternalMycnl.g:8121:1: entryRuleOpOther returns [String current=null] : iv_ruleOpOther= ruleOpOther EOF ;
    public final String entryRuleOpOther() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOther = null;


        try {
            // InternalMycnl.g:8121:47: (iv_ruleOpOther= ruleOpOther EOF )
            // InternalMycnl.g:8122:2: iv_ruleOpOther= ruleOpOther EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOtherRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOther=ruleOpOther();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOther.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOther"


    // $ANTLR start "ruleOpOther"
    // InternalMycnl.g:8128:1: ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' ) ;
    public final AntlrDatatypeRuleToken ruleOpOther() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMycnl.g:8134:2: ( (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' ) )
            // InternalMycnl.g:8135:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )
            {
            // InternalMycnl.g:8135:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )
            int alt34=9;
            alt34 = dfa34.predict(input);
            switch (alt34) {
                case 1 :
                    // InternalMycnl.g:8136:3: kw= '->'
                    {
                    kw=(Token)match(input,144,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMycnl.g:8142:3: kw= '..<'
                    {
                    kw=(Token)match(input,145,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMycnl.g:8148:3: (kw= '>' kw= '..' )
                    {
                    // InternalMycnl.g:8148:3: (kw= '>' kw= '..' )
                    // InternalMycnl.g:8149:4: kw= '>' kw= '..'
                    {
                    kw=(Token)match(input,135,FOLLOW_126); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0());
                      			
                    }
                    kw=(Token)match(input,146,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMycnl.g:8161:3: kw= '..'
                    {
                    kw=(Token)match(input,146,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMycnl.g:8167:3: kw= '=>'
                    {
                    kw=(Token)match(input,147,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMycnl.g:8173:3: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    {
                    // InternalMycnl.g:8173:3: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    // InternalMycnl.g:8174:4: kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    {
                    kw=(Token)match(input,135,FOLLOW_127); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0());
                      			
                    }
                    // InternalMycnl.g:8179:4: ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    int alt32=2;
                    int LA32_0 = input.LA(1);

                    if ( (LA32_0==135) ) {
                        int LA32_1 = input.LA(2);

                        if ( (LA32_1==EOF||(LA32_1>=RULE_INT && LA32_1<=RULE_ID)||LA32_1==30||LA32_1==76||LA32_1==134||(LA32_1>=150 && LA32_1<=151)||LA32_1==156||LA32_1==164||(LA32_1>=166 && LA32_1<=167)||LA32_1==169||LA32_1==174||(LA32_1>=178 && LA32_1<=179)||(LA32_1>=182 && LA32_1<=194)||LA32_1==196) ) {
                            alt32=2;
                        }
                        else if ( (LA32_1==135) && (synpred8_InternalMycnl())) {
                            alt32=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 32, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 32, 0, input);

                        throw nvae;
                    }
                    switch (alt32) {
                        case 1 :
                            // InternalMycnl.g:8180:5: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            {
                            // InternalMycnl.g:8180:5: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            // InternalMycnl.g:8181:6: ( ( '>' '>' ) )=> (kw= '>' kw= '>' )
                            {
                            // InternalMycnl.g:8186:6: (kw= '>' kw= '>' )
                            // InternalMycnl.g:8187:7: kw= '>' kw= '>'
                            {
                            kw=(Token)match(input,135,FOLLOW_127); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0());
                              						
                            }
                            kw=(Token)match(input,135,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1());
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMycnl.g:8200:5: kw= '>'
                            {
                            kw=(Token)match(input,135,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalMycnl.g:8208:3: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) )
                    {
                    // InternalMycnl.g:8208:3: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) )
                    // InternalMycnl.g:8209:4: kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' )
                    {
                    kw=(Token)match(input,134,FOLLOW_128); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0());
                      			
                    }
                    // InternalMycnl.g:8214:4: ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' )
                    int alt33=3;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==134) ) {
                        int LA33_1 = input.LA(2);

                        if ( (synpred9_InternalMycnl()) ) {
                            alt33=1;
                        }
                        else if ( (true) ) {
                            alt33=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 33, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA33_0==147) ) {
                        alt33=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 33, 0, input);

                        throw nvae;
                    }
                    switch (alt33) {
                        case 1 :
                            // InternalMycnl.g:8215:5: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            {
                            // InternalMycnl.g:8215:5: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            // InternalMycnl.g:8216:6: ( ( '<' '<' ) )=> (kw= '<' kw= '<' )
                            {
                            // InternalMycnl.g:8221:6: (kw= '<' kw= '<' )
                            // InternalMycnl.g:8222:7: kw= '<' kw= '<'
                            {
                            kw=(Token)match(input,134,FOLLOW_117); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0());
                              						
                            }
                            kw=(Token)match(input,134,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1());
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMycnl.g:8235:5: kw= '<'
                            {
                            kw=(Token)match(input,134,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalMycnl.g:8241:5: kw= '=>'
                            {
                            kw=(Token)match(input,147,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_6_1_2());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalMycnl.g:8249:3: kw= '<>'
                    {
                    kw=(Token)match(input,148,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalMycnl.g:8255:3: kw= '?:'
                    {
                    kw=(Token)match(input,149,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOther"


    // $ANTLR start "entryRuleXAdditiveExpression"
    // InternalMycnl.g:8264:1: entryRuleXAdditiveExpression returns [EObject current=null] : iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF ;
    public final EObject entryRuleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAdditiveExpression = null;


        try {
            // InternalMycnl.g:8264:60: (iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF )
            // InternalMycnl.g:8265:2: iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAdditiveExpression=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAdditiveExpression"


    // $ANTLR start "ruleXAdditiveExpression"
    // InternalMycnl.g:8271:1: ruleXAdditiveExpression returns [EObject current=null] : (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XMultiplicativeExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:8277:2: ( (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) )
            // InternalMycnl.g:8278:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            {
            // InternalMycnl.g:8278:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            // InternalMycnl.g:8279:3: this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_129);
            this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XMultiplicativeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMycnl.g:8287:3: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==150) ) {
                    int LA35_2 = input.LA(2);

                    if ( (synpred10_InternalMycnl()) ) {
                        alt35=1;
                    }


                }
                else if ( (LA35_0==151) ) {
                    int LA35_3 = input.LA(2);

                    if ( (synpred10_InternalMycnl()) ) {
                        alt35=1;
                    }


                }


                switch (alt35) {
            	case 1 :
            	    // InternalMycnl.g:8288:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    {
            	    // InternalMycnl.g:8288:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) )
            	    // InternalMycnl.g:8289:5: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) )
            	    {
            	    // InternalMycnl.g:8299:5: ( () ( ( ruleOpAdd ) ) )
            	    // InternalMycnl.g:8300:6: () ( ( ruleOpAdd ) )
            	    {
            	    // InternalMycnl.g:8300:6: ()
            	    // InternalMycnl.g:8301:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalMycnl.g:8307:6: ( ( ruleOpAdd ) )
            	    // InternalMycnl.g:8308:7: ( ruleOpAdd )
            	    {
            	    // InternalMycnl.g:8308:7: ( ruleOpAdd )
            	    // InternalMycnl.g:8309:8: ruleOpAdd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_115);
            	    ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalMycnl.g:8325:4: ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    // InternalMycnl.g:8326:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    {
            	    // InternalMycnl.g:8326:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    // InternalMycnl.g:8327:6: lv_rightOperand_3_0= ruleXMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_129);
            	    lv_rightOperand_3_0=ruleXMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XMultiplicativeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAdditiveExpression"


    // $ANTLR start "entryRuleOpAdd"
    // InternalMycnl.g:8349:1: entryRuleOpAdd returns [String current=null] : iv_ruleOpAdd= ruleOpAdd EOF ;
    public final String entryRuleOpAdd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAdd = null;


        try {
            // InternalMycnl.g:8349:45: (iv_ruleOpAdd= ruleOpAdd EOF )
            // InternalMycnl.g:8350:2: iv_ruleOpAdd= ruleOpAdd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAddRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAdd=ruleOpAdd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAdd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAdd"


    // $ANTLR start "ruleOpAdd"
    // InternalMycnl.g:8356:1: ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' ) ;
    public final AntlrDatatypeRuleToken ruleOpAdd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMycnl.g:8362:2: ( (kw= '+' | kw= '-' ) )
            // InternalMycnl.g:8363:2: (kw= '+' | kw= '-' )
            {
            // InternalMycnl.g:8363:2: (kw= '+' | kw= '-' )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==150) ) {
                alt36=1;
            }
            else if ( (LA36_0==151) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // InternalMycnl.g:8364:3: kw= '+'
                    {
                    kw=(Token)match(input,150,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMycnl.g:8370:3: kw= '-'
                    {
                    kw=(Token)match(input,151,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAdd"


    // $ANTLR start "entryRuleXMultiplicativeExpression"
    // InternalMycnl.g:8379:1: entryRuleXMultiplicativeExpression returns [EObject current=null] : iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF ;
    public final EObject entryRuleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMultiplicativeExpression = null;


        try {
            // InternalMycnl.g:8379:66: (iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF )
            // InternalMycnl.g:8380:2: iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMultiplicativeExpression"


    // $ANTLR start "ruleXMultiplicativeExpression"
    // InternalMycnl.g:8386:1: ruleXMultiplicativeExpression returns [EObject current=null] : (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) ;
    public final EObject ruleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XUnaryOperation_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:8392:2: ( (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) )
            // InternalMycnl.g:8393:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            {
            // InternalMycnl.g:8393:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            // InternalMycnl.g:8394:3: this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_130);
            this_XUnaryOperation_0=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XUnaryOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMycnl.g:8402:3: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            loop37:
            do {
                int alt37=2;
                switch ( input.LA(1) ) {
                case 152:
                    {
                    int LA37_2 = input.LA(2);

                    if ( (synpred11_InternalMycnl()) ) {
                        alt37=1;
                    }


                    }
                    break;
                case 153:
                    {
                    int LA37_3 = input.LA(2);

                    if ( (synpred11_InternalMycnl()) ) {
                        alt37=1;
                    }


                    }
                    break;
                case 154:
                    {
                    int LA37_4 = input.LA(2);

                    if ( (synpred11_InternalMycnl()) ) {
                        alt37=1;
                    }


                    }
                    break;
                case 155:
                    {
                    int LA37_5 = input.LA(2);

                    if ( (synpred11_InternalMycnl()) ) {
                        alt37=1;
                    }


                    }
                    break;

                }

                switch (alt37) {
            	case 1 :
            	    // InternalMycnl.g:8403:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    {
            	    // InternalMycnl.g:8403:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) )
            	    // InternalMycnl.g:8404:5: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) )
            	    {
            	    // InternalMycnl.g:8414:5: ( () ( ( ruleOpMulti ) ) )
            	    // InternalMycnl.g:8415:6: () ( ( ruleOpMulti ) )
            	    {
            	    // InternalMycnl.g:8415:6: ()
            	    // InternalMycnl.g:8416:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalMycnl.g:8422:6: ( ( ruleOpMulti ) )
            	    // InternalMycnl.g:8423:7: ( ruleOpMulti )
            	    {
            	    // InternalMycnl.g:8423:7: ( ruleOpMulti )
            	    // InternalMycnl.g:8424:8: ruleOpMulti
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_115);
            	    ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalMycnl.g:8440:4: ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    // InternalMycnl.g:8441:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    {
            	    // InternalMycnl.g:8441:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    // InternalMycnl.g:8442:6: lv_rightOperand_3_0= ruleXUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_130);
            	    lv_rightOperand_3_0=ruleXUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMultiplicativeExpression"


    // $ANTLR start "entryRuleOpMulti"
    // InternalMycnl.g:8464:1: entryRuleOpMulti returns [String current=null] : iv_ruleOpMulti= ruleOpMulti EOF ;
    public final String entryRuleOpMulti() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMulti = null;


        try {
            // InternalMycnl.g:8464:47: (iv_ruleOpMulti= ruleOpMulti EOF )
            // InternalMycnl.g:8465:2: iv_ruleOpMulti= ruleOpMulti EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMulti=ruleOpMulti();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMulti.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMulti"


    // $ANTLR start "ruleOpMulti"
    // InternalMycnl.g:8471:1: ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) ;
    public final AntlrDatatypeRuleToken ruleOpMulti() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMycnl.g:8477:2: ( (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) )
            // InternalMycnl.g:8478:2: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            {
            // InternalMycnl.g:8478:2: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            int alt38=4;
            switch ( input.LA(1) ) {
            case 152:
                {
                alt38=1;
                }
                break;
            case 153:
                {
                alt38=2;
                }
                break;
            case 154:
                {
                alt38=3;
                }
                break;
            case 155:
                {
                alt38=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }

            switch (alt38) {
                case 1 :
                    // InternalMycnl.g:8479:3: kw= '*'
                    {
                    kw=(Token)match(input,152,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMycnl.g:8485:3: kw= '**'
                    {
                    kw=(Token)match(input,153,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMycnl.g:8491:3: kw= '/'
                    {
                    kw=(Token)match(input,154,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMycnl.g:8497:3: kw= '%'
                    {
                    kw=(Token)match(input,155,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMulti"


    // $ANTLR start "entryRuleXUnaryOperation"
    // InternalMycnl.g:8506:1: entryRuleXUnaryOperation returns [EObject current=null] : iv_ruleXUnaryOperation= ruleXUnaryOperation EOF ;
    public final EObject entryRuleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXUnaryOperation = null;


        try {
            // InternalMycnl.g:8506:56: (iv_ruleXUnaryOperation= ruleXUnaryOperation EOF )
            // InternalMycnl.g:8507:2: iv_ruleXUnaryOperation= ruleXUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXUnaryOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXUnaryOperation=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXUnaryOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXUnaryOperation"


    // $ANTLR start "ruleXUnaryOperation"
    // InternalMycnl.g:8513:1: ruleXUnaryOperation returns [EObject current=null] : ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) ;
    public final EObject ruleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject lv_operand_2_0 = null;

        EObject this_XCastedExpression_3 = null;



        	enterRule();

        try {
            // InternalMycnl.g:8519:2: ( ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) )
            // InternalMycnl.g:8520:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            {
            // InternalMycnl.g:8520:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( ((LA39_0>=150 && LA39_0<=151)||LA39_0==156) ) {
                alt39=1;
            }
            else if ( ((LA39_0>=RULE_INT && LA39_0<=RULE_ID)||LA39_0==30||LA39_0==76||LA39_0==134||LA39_0==164||(LA39_0>=166 && LA39_0<=167)||LA39_0==169||LA39_0==174||(LA39_0>=178 && LA39_0<=179)||(LA39_0>=182 && LA39_0<=194)||LA39_0==196) ) {
                alt39=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }
            switch (alt39) {
                case 1 :
                    // InternalMycnl.g:8521:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    {
                    // InternalMycnl.g:8521:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    // InternalMycnl.g:8522:4: () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    {
                    // InternalMycnl.g:8522:4: ()
                    // InternalMycnl.g:8523:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalMycnl.g:8529:4: ( ( ruleOpUnary ) )
                    // InternalMycnl.g:8530:5: ( ruleOpUnary )
                    {
                    // InternalMycnl.g:8530:5: ( ruleOpUnary )
                    // InternalMycnl.g:8531:6: ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXUnaryOperationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_115);
                    ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMycnl.g:8545:4: ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    // InternalMycnl.g:8546:5: (lv_operand_2_0= ruleXUnaryOperation )
                    {
                    // InternalMycnl.g:8546:5: (lv_operand_2_0= ruleXUnaryOperation )
                    // InternalMycnl.g:8547:6: lv_operand_2_0= ruleXUnaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleXUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operand",
                      							lv_operand_2_0,
                      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:8566:3: this_XCastedExpression_3= ruleXCastedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCastedExpression_3=ruleXCastedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCastedExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXUnaryOperation"


    // $ANTLR start "entryRuleOpUnary"
    // InternalMycnl.g:8578:1: entryRuleOpUnary returns [String current=null] : iv_ruleOpUnary= ruleOpUnary EOF ;
    public final String entryRuleOpUnary() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpUnary = null;


        try {
            // InternalMycnl.g:8578:47: (iv_ruleOpUnary= ruleOpUnary EOF )
            // InternalMycnl.g:8579:2: iv_ruleOpUnary= ruleOpUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpUnaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpUnary=ruleOpUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpUnary.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpUnary"


    // $ANTLR start "ruleOpUnary"
    // InternalMycnl.g:8585:1: ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '!' | kw= '-' | kw= '+' ) ;
    public final AntlrDatatypeRuleToken ruleOpUnary() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMycnl.g:8591:2: ( (kw= '!' | kw= '-' | kw= '+' ) )
            // InternalMycnl.g:8592:2: (kw= '!' | kw= '-' | kw= '+' )
            {
            // InternalMycnl.g:8592:2: (kw= '!' | kw= '-' | kw= '+' )
            int alt40=3;
            switch ( input.LA(1) ) {
            case 156:
                {
                alt40=1;
                }
                break;
            case 151:
                {
                alt40=2;
                }
                break;
            case 150:
                {
                alt40=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }

            switch (alt40) {
                case 1 :
                    // InternalMycnl.g:8593:3: kw= '!'
                    {
                    kw=(Token)match(input,156,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMycnl.g:8599:3: kw= '-'
                    {
                    kw=(Token)match(input,151,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMycnl.g:8605:3: kw= '+'
                    {
                    kw=(Token)match(input,150,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpUnary"


    // $ANTLR start "entryRuleXCastedExpression"
    // InternalMycnl.g:8614:1: entryRuleXCastedExpression returns [EObject current=null] : iv_ruleXCastedExpression= ruleXCastedExpression EOF ;
    public final EObject entryRuleXCastedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCastedExpression = null;


        try {
            // InternalMycnl.g:8614:58: (iv_ruleXCastedExpression= ruleXCastedExpression EOF )
            // InternalMycnl.g:8615:2: iv_ruleXCastedExpression= ruleXCastedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCastedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCastedExpression=ruleXCastedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCastedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCastedExpression"


    // $ANTLR start "ruleXCastedExpression"
    // InternalMycnl.g:8621:1: ruleXCastedExpression returns [EObject current=null] : (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) ;
    public final EObject ruleXCastedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XPostfixOperation_0 = null;

        EObject lv_type_3_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:8627:2: ( (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) )
            // InternalMycnl.g:8628:2: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            {
            // InternalMycnl.g:8628:2: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            // InternalMycnl.g:8629:3: this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_131);
            this_XPostfixOperation_0=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XPostfixOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMycnl.g:8637:3: ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==157) ) {
                    int LA41_2 = input.LA(2);

                    if ( (synpred12_InternalMycnl()) ) {
                        alt41=1;
                    }


                }


                switch (alt41) {
            	case 1 :
            	    // InternalMycnl.g:8638:4: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalMycnl.g:8638:4: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) )
            	    // InternalMycnl.g:8639:5: ( ( () 'as' ) )=> ( () otherlv_2= 'as' )
            	    {
            	    // InternalMycnl.g:8645:5: ( () otherlv_2= 'as' )
            	    // InternalMycnl.g:8646:6: () otherlv_2= 'as'
            	    {
            	    // InternalMycnl.g:8646:6: ()
            	    // InternalMycnl.g:8647:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    otherlv_2=(Token)match(input,157,FOLLOW_124); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
            	      					
            	    }

            	    }


            	    }

            	    // InternalMycnl.g:8659:4: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalMycnl.g:8660:5: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalMycnl.g:8660:5: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalMycnl.g:8661:6: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_131);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"type",
            	      							lv_type_3_0,
            	      							"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCastedExpression"


    // $ANTLR start "entryRuleXPostfixOperation"
    // InternalMycnl.g:8683:1: entryRuleXPostfixOperation returns [EObject current=null] : iv_ruleXPostfixOperation= ruleXPostfixOperation EOF ;
    public final EObject entryRuleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPostfixOperation = null;


        try {
            // InternalMycnl.g:8683:58: (iv_ruleXPostfixOperation= ruleXPostfixOperation EOF )
            // InternalMycnl.g:8684:2: iv_ruleXPostfixOperation= ruleXPostfixOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPostfixOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPostfixOperation=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPostfixOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPostfixOperation"


    // $ANTLR start "ruleXPostfixOperation"
    // InternalMycnl.g:8690:1: ruleXPostfixOperation returns [EObject current=null] : (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) ;
    public final EObject ruleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject this_XMemberFeatureCall_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:8696:2: ( (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) )
            // InternalMycnl.g:8697:2: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            {
            // InternalMycnl.g:8697:2: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            // InternalMycnl.g:8698:3: this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXPostfixOperationAccess().getXMemberFeatureCallParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_132);
            this_XMemberFeatureCall_0=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XMemberFeatureCall_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMycnl.g:8706:3: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==158) ) {
                int LA42_1 = input.LA(2);

                if ( (synpred13_InternalMycnl()) ) {
                    alt42=1;
                }
            }
            else if ( (LA42_0==159) ) {
                int LA42_2 = input.LA(2);

                if ( (synpred13_InternalMycnl()) ) {
                    alt42=1;
                }
            }
            switch (alt42) {
                case 1 :
                    // InternalMycnl.g:8707:4: ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) )
                    {
                    // InternalMycnl.g:8717:4: ( () ( ( ruleOpPostfix ) ) )
                    // InternalMycnl.g:8718:5: () ( ( ruleOpPostfix ) )
                    {
                    // InternalMycnl.g:8718:5: ()
                    // InternalMycnl.g:8719:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndSet(
                      							grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalMycnl.g:8725:5: ( ( ruleOpPostfix ) )
                    // InternalMycnl.g:8726:6: ( ruleOpPostfix )
                    {
                    // InternalMycnl.g:8726:6: ( ruleOpPostfix )
                    // InternalMycnl.g:8727:7: ruleOpPostfix
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXPostfixOperationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpPostfix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPostfixOperation"


    // $ANTLR start "entryRuleOpPostfix"
    // InternalMycnl.g:8747:1: entryRuleOpPostfix returns [String current=null] : iv_ruleOpPostfix= ruleOpPostfix EOF ;
    public final String entryRuleOpPostfix() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpPostfix = null;


        try {
            // InternalMycnl.g:8747:49: (iv_ruleOpPostfix= ruleOpPostfix EOF )
            // InternalMycnl.g:8748:2: iv_ruleOpPostfix= ruleOpPostfix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpPostfixRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpPostfix=ruleOpPostfix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpPostfix.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpPostfix"


    // $ANTLR start "ruleOpPostfix"
    // InternalMycnl.g:8754:1: ruleOpPostfix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '++' | kw= '--' ) ;
    public final AntlrDatatypeRuleToken ruleOpPostfix() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMycnl.g:8760:2: ( (kw= '++' | kw= '--' ) )
            // InternalMycnl.g:8761:2: (kw= '++' | kw= '--' )
            {
            // InternalMycnl.g:8761:2: (kw= '++' | kw= '--' )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==158) ) {
                alt43=1;
            }
            else if ( (LA43_0==159) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalMycnl.g:8762:3: kw= '++'
                    {
                    kw=(Token)match(input,158,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMycnl.g:8768:3: kw= '--'
                    {
                    kw=(Token)match(input,159,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpPostfix"


    // $ANTLR start "entryRuleXMemberFeatureCall"
    // InternalMycnl.g:8777:1: entryRuleXMemberFeatureCall returns [EObject current=null] : iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF ;
    public final EObject entryRuleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMemberFeatureCall = null;


        try {
            // InternalMycnl.g:8777:59: (iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF )
            // InternalMycnl.g:8778:2: iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMemberFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMemberFeatureCall"


    // $ANTLR start "ruleXMemberFeatureCall"
    // InternalMycnl.g:8784:1: ruleXMemberFeatureCall returns [EObject current=null] : (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) ;
    public final EObject ruleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitStatic_3_0=null;
        Token otherlv_8=null;
        Token lv_nullSafe_9_0=null;
        Token lv_explicitStatic_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_explicitOperationCall_17_0=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject this_XPrimaryExpression_0 = null;

        EObject lv_value_6_0 = null;

        EObject lv_typeArguments_12_0 = null;

        EObject lv_typeArguments_14_0 = null;

        EObject lv_memberCallArguments_18_0 = null;

        EObject lv_memberCallArguments_19_0 = null;

        EObject lv_memberCallArguments_21_0 = null;

        EObject lv_memberCallArguments_23_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:8790:2: ( (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) )
            // InternalMycnl.g:8791:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            {
            // InternalMycnl.g:8791:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            // InternalMycnl.g:8792:3: this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_133);
            this_XPrimaryExpression_0=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XPrimaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMycnl.g:8800:3: ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            loop52:
            do {
                int alt52=3;
                switch ( input.LA(1) ) {
                case 160:
                    {
                    int LA52_2 = input.LA(2);

                    if ( (synpred14_InternalMycnl()) ) {
                        alt52=1;
                    }
                    else if ( (synpred15_InternalMycnl()) ) {
                        alt52=2;
                    }


                    }
                    break;
                case 161:
                    {
                    int LA52_3 = input.LA(2);

                    if ( (synpred14_InternalMycnl()) ) {
                        alt52=1;
                    }
                    else if ( (synpred15_InternalMycnl()) ) {
                        alt52=2;
                    }


                    }
                    break;
                case 162:
                    {
                    int LA52_4 = input.LA(2);

                    if ( (synpred15_InternalMycnl()) ) {
                        alt52=2;
                    }


                    }
                    break;

                }

                switch (alt52) {
            	case 1 :
            	    // InternalMycnl.g:8801:4: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    {
            	    // InternalMycnl.g:8801:4: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    // InternalMycnl.g:8802:5: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) )
            	    {
            	    // InternalMycnl.g:8802:5: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
            	    // InternalMycnl.g:8803:6: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    {
            	    // InternalMycnl.g:8823:6: ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    // InternalMycnl.g:8824:7: () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
            	    {
            	    // InternalMycnl.g:8824:7: ()
            	    // InternalMycnl.g:8825:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalMycnl.g:8831:7: (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) )
            	    int alt44=2;
            	    int LA44_0 = input.LA(1);

            	    if ( (LA44_0==160) ) {
            	        alt44=1;
            	    }
            	    else if ( (LA44_0==161) ) {
            	        alt44=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 44, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt44) {
            	        case 1 :
            	            // InternalMycnl.g:8832:8: otherlv_2= '.'
            	            {
            	            otherlv_2=(Token)match(input,160,FOLLOW_134); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0());
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMycnl.g:8837:8: ( (lv_explicitStatic_3_0= '::' ) )
            	            {
            	            // InternalMycnl.g:8837:8: ( (lv_explicitStatic_3_0= '::' ) )
            	            // InternalMycnl.g:8838:9: (lv_explicitStatic_3_0= '::' )
            	            {
            	            // InternalMycnl.g:8838:9: (lv_explicitStatic_3_0= '::' )
            	            // InternalMycnl.g:8839:10: lv_explicitStatic_3_0= '::'
            	            {
            	            lv_explicitStatic_3_0=(Token)match(input,161,FOLLOW_134); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_explicitStatic_3_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "explicitStatic", true, "::");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalMycnl.g:8852:7: ( ( ruleFeatureCallID ) )
            	    // InternalMycnl.g:8853:8: ( ruleFeatureCallID )
            	    {
            	    // InternalMycnl.g:8853:8: ( ruleFeatureCallID )
            	    // InternalMycnl.g:8854:9: ruleFeatureCallID
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_114);
            	    ruleFeatureCallID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3());
            	      						
            	    }
            	    pushFollow(FOLLOW_115);
            	    ruleOpSingleAssign();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalMycnl.g:8877:5: ( (lv_value_6_0= ruleXAssignment ) )
            	    // InternalMycnl.g:8878:6: (lv_value_6_0= ruleXAssignment )
            	    {
            	    // InternalMycnl.g:8878:6: (lv_value_6_0= ruleXAssignment )
            	    // InternalMycnl.g:8879:7: lv_value_6_0= ruleXAssignment
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_133);
            	    lv_value_6_0=ruleXAssignment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      							set(
            	      								current,
            	      								"value",
            	      								lv_value_6_0,
            	      								"org.eclipse.xtext.xbase.Xbase.XAssignment");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMycnl.g:8898:4: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    {
            	    // InternalMycnl.g:8898:4: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    // InternalMycnl.g:8899:5: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    {
            	    // InternalMycnl.g:8899:5: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) )
            	    // InternalMycnl.g:8900:6: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    {
            	    // InternalMycnl.g:8920:6: ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    // InternalMycnl.g:8921:7: () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    {
            	    // InternalMycnl.g:8921:7: ()
            	    // InternalMycnl.g:8922:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalMycnl.g:8928:7: (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    int alt45=3;
            	    switch ( input.LA(1) ) {
            	    case 160:
            	        {
            	        alt45=1;
            	        }
            	        break;
            	    case 162:
            	        {
            	        alt45=2;
            	        }
            	        break;
            	    case 161:
            	        {
            	        alt45=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 45, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt45) {
            	        case 1 :
            	            // InternalMycnl.g:8929:8: otherlv_8= '.'
            	            {
            	            otherlv_8=(Token)match(input,160,FOLLOW_135); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(otherlv_8, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMycnl.g:8934:8: ( (lv_nullSafe_9_0= '?.' ) )
            	            {
            	            // InternalMycnl.g:8934:8: ( (lv_nullSafe_9_0= '?.' ) )
            	            // InternalMycnl.g:8935:9: (lv_nullSafe_9_0= '?.' )
            	            {
            	            // InternalMycnl.g:8935:9: (lv_nullSafe_9_0= '?.' )
            	            // InternalMycnl.g:8936:10: lv_nullSafe_9_0= '?.'
            	            {
            	            lv_nullSafe_9_0=(Token)match(input,162,FOLLOW_135); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_nullSafe_9_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "nullSafe", true, "?.");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalMycnl.g:8949:8: ( (lv_explicitStatic_10_0= '::' ) )
            	            {
            	            // InternalMycnl.g:8949:8: ( (lv_explicitStatic_10_0= '::' ) )
            	            // InternalMycnl.g:8950:9: (lv_explicitStatic_10_0= '::' )
            	            {
            	            // InternalMycnl.g:8950:9: (lv_explicitStatic_10_0= '::' )
            	            // InternalMycnl.g:8951:10: lv_explicitStatic_10_0= '::'
            	            {
            	            lv_explicitStatic_10_0=(Token)match(input,161,FOLLOW_135); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_explicitStatic_10_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "explicitStatic", true, "::");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalMycnl.g:8966:5: (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )?
            	    int alt47=2;
            	    int LA47_0 = input.LA(1);

            	    if ( (LA47_0==134) ) {
            	        alt47=1;
            	    }
            	    switch (alt47) {
            	        case 1 :
            	            // InternalMycnl.g:8967:6: otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>'
            	            {
            	            otherlv_11=(Token)match(input,134,FOLLOW_136); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
            	              					
            	            }
            	            // InternalMycnl.g:8971:6: ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) )
            	            // InternalMycnl.g:8972:7: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            {
            	            // InternalMycnl.g:8972:7: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            // InternalMycnl.g:8973:8: lv_typeArguments_12_0= ruleJvmArgumentTypeReference
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_137);
            	            lv_typeArguments_12_0=ruleJvmArgumentTypeReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              								}
            	              								add(
            	              									current,
            	              									"typeArguments",
            	              									lv_typeArguments_12_0,
            	              									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalMycnl.g:8990:6: (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )*
            	            loop46:
            	            do {
            	                int alt46=2;
            	                int LA46_0 = input.LA(1);

            	                if ( (LA46_0==163) ) {
            	                    alt46=1;
            	                }


            	                switch (alt46) {
            	            	case 1 :
            	            	    // InternalMycnl.g:8991:7: otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    {
            	            	    otherlv_13=(Token)match(input,163,FOLLOW_136); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      							newLeafNode(otherlv_13, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
            	            	      						
            	            	    }
            	            	    // InternalMycnl.g:8995:7: ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    // InternalMycnl.g:8996:8: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    {
            	            	    // InternalMycnl.g:8996:8: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    // InternalMycnl.g:8997:9: lv_typeArguments_14_0= ruleJvmArgumentTypeReference
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0());
            	            	      								
            	            	    }
            	            	    pushFollow(FOLLOW_137);
            	            	    lv_typeArguments_14_0=ruleJvmArgumentTypeReference();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      									if (current==null) {
            	            	      										current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	            	      									}
            	            	      									add(
            	            	      										current,
            	            	      										"typeArguments",
            	            	      										lv_typeArguments_14_0,
            	            	      										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	            	      									afterParserOrEnumRuleCall();
            	            	      								
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop46;
            	                }
            	            } while (true);

            	            otherlv_15=(Token)match(input,135,FOLLOW_135); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
            	              					
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMycnl.g:9020:5: ( ( ruleIdOrSuper ) )
            	    // InternalMycnl.g:9021:6: ( ruleIdOrSuper )
            	    {
            	    // InternalMycnl.g:9021:6: ( ruleIdOrSuper )
            	    // InternalMycnl.g:9022:7: ruleIdOrSuper
            	    {
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_138);
            	    ruleIdOrSuper();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalMycnl.g:9036:5: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?
            	    int alt50=2;
            	    alt50 = dfa50.predict(input);
            	    switch (alt50) {
            	        case 1 :
            	            // InternalMycnl.g:9037:6: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')'
            	            {
            	            // InternalMycnl.g:9037:6: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) )
            	            // InternalMycnl.g:9038:7: ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' )
            	            {
            	            // InternalMycnl.g:9042:7: (lv_explicitOperationCall_17_0= '(' )
            	            // InternalMycnl.g:9043:8: lv_explicitOperationCall_17_0= '('
            	            {
            	            lv_explicitOperationCall_17_0=(Token)match(input,164,FOLLOW_139); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_explicitOperationCall_17_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              								}
            	              								setWithLastConsumed(current, "explicitOperationCall", true, "(");
            	              							
            	            }

            	            }


            	            }

            	            // InternalMycnl.g:9055:6: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?
            	            int alt49=3;
            	            alt49 = dfa49.predict(input);
            	            switch (alt49) {
            	                case 1 :
            	                    // InternalMycnl.g:9056:7: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    {
            	                    // InternalMycnl.g:9056:7: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    // InternalMycnl.g:9057:8: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    {
            	                    // InternalMycnl.g:9082:8: (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    // InternalMycnl.g:9083:9: lv_memberCallArguments_18_0= ruleXShortClosure
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0());
            	                      								
            	                    }
            	                    pushFollow(FOLLOW_140);
            	                    lv_memberCallArguments_18_0=ruleXShortClosure();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      									if (current==null) {
            	                      										current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      									}
            	                      									add(
            	                      										current,
            	                      										"memberCallArguments",
            	                      										lv_memberCallArguments_18_0,
            	                      										"org.eclipse.xtext.xbase.Xbase.XShortClosure");
            	                      									afterParserOrEnumRuleCall();
            	                      								
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMycnl.g:9101:7: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    {
            	                    // InternalMycnl.g:9101:7: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    // InternalMycnl.g:9102:8: ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    {
            	                    // InternalMycnl.g:9102:8: ( (lv_memberCallArguments_19_0= ruleXExpression ) )
            	                    // InternalMycnl.g:9103:9: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    {
            	                    // InternalMycnl.g:9103:9: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    // InternalMycnl.g:9104:10: lv_memberCallArguments_19_0= ruleXExpression
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      										newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0());
            	                      									
            	                    }
            	                    pushFollow(FOLLOW_141);
            	                    lv_memberCallArguments_19_0=ruleXExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      										if (current==null) {
            	                      											current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      										}
            	                      										add(
            	                      											current,
            	                      											"memberCallArguments",
            	                      											lv_memberCallArguments_19_0,
            	                      											"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                      										afterParserOrEnumRuleCall();
            	                      									
            	                    }

            	                    }


            	                    }

            	                    // InternalMycnl.g:9121:8: (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    loop48:
            	                    do {
            	                        int alt48=2;
            	                        int LA48_0 = input.LA(1);

            	                        if ( (LA48_0==163) ) {
            	                            alt48=1;
            	                        }


            	                        switch (alt48) {
            	                    	case 1 :
            	                    	    // InternalMycnl.g:9122:9: otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    {
            	                    	    otherlv_20=(Token)match(input,163,FOLLOW_115); if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      									newLeafNode(otherlv_20, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
            	                    	      								
            	                    	    }
            	                    	    // InternalMycnl.g:9126:9: ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    // InternalMycnl.g:9127:10: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    {
            	                    	    // InternalMycnl.g:9127:10: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    // InternalMycnl.g:9128:11: lv_memberCallArguments_21_0= ruleXExpression
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0());
            	                    	      										
            	                    	    }
            	                    	    pushFollow(FOLLOW_141);
            	                    	    lv_memberCallArguments_21_0=ruleXExpression();

            	                    	    state._fsp--;
            	                    	    if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											if (current==null) {
            	                    	      												current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                    	      											}
            	                    	      											add(
            	                    	      												current,
            	                    	      												"memberCallArguments",
            	                    	      												lv_memberCallArguments_21_0,
            	                    	      												"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                    	      											afterParserOrEnumRuleCall();
            	                    	      										
            	                    	    }

            	                    	    }


            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop48;
            	                        }
            	                    } while (true);


            	                    }


            	                    }
            	                    break;

            	            }

            	            otherlv_22=(Token)match(input,165,FOLLOW_142); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_22, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
            	              					
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMycnl.g:9153:5: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    int alt51=2;
            	    alt51 = dfa51.predict(input);
            	    switch (alt51) {
            	        case 1 :
            	            // InternalMycnl.g:9154:6: ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure )
            	            {
            	            // InternalMycnl.g:9160:6: (lv_memberCallArguments_23_0= ruleXClosure )
            	            // InternalMycnl.g:9161:7: lv_memberCallArguments_23_0= ruleXClosure
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_133);
            	            lv_memberCallArguments_23_0=ruleXClosure();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              							}
            	              							add(
            	              								current,
            	              								"memberCallArguments",
            	              								lv_memberCallArguments_23_0,
            	              								"org.eclipse.xtext.xbase.Xbase.XClosure");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMemberFeatureCall"


    // $ANTLR start "entryRuleXPrimaryExpression"
    // InternalMycnl.g:9184:1: entryRuleXPrimaryExpression returns [EObject current=null] : iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF ;
    public final EObject entryRuleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPrimaryExpression = null;


        try {
            // InternalMycnl.g:9184:59: (iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF )
            // InternalMycnl.g:9185:2: iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPrimaryExpression=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPrimaryExpression"


    // $ANTLR start "ruleXPrimaryExpression"
    // InternalMycnl.g:9191:1: ruleXPrimaryExpression returns [EObject current=null] : (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) ;
    public final EObject ruleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XConstructorCall_0 = null;

        EObject this_XBlockExpression_1 = null;

        EObject this_XSwitchExpression_2 = null;

        EObject this_XSynchronizedExpression_3 = null;

        EObject this_XFeatureCall_4 = null;

        EObject this_XLiteral_5 = null;

        EObject this_XIfExpression_6 = null;

        EObject this_XForLoopExpression_7 = null;

        EObject this_XBasicForLoopExpression_8 = null;

        EObject this_XWhileExpression_9 = null;

        EObject this_XDoWhileExpression_10 = null;

        EObject this_XThrowExpression_11 = null;

        EObject this_XReturnExpression_12 = null;

        EObject this_XTryCatchFinallyExpression_13 = null;

        EObject this_XParenthesizedExpression_14 = null;



        	enterRule();

        try {
            // InternalMycnl.g:9197:2: ( (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) )
            // InternalMycnl.g:9198:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            {
            // InternalMycnl.g:9198:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            int alt53=15;
            alt53 = dfa53.predict(input);
            switch (alt53) {
                case 1 :
                    // InternalMycnl.g:9199:3: this_XConstructorCall_0= ruleXConstructorCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XConstructorCall_0=ruleXConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XConstructorCall_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMycnl.g:9208:3: this_XBlockExpression_1= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBlockExpression_1=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBlockExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMycnl.g:9217:3: this_XSwitchExpression_2= ruleXSwitchExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XSwitchExpression_2=ruleXSwitchExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XSwitchExpression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMycnl.g:9226:3: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    {
                    // InternalMycnl.g:9226:3: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    // InternalMycnl.g:9227:4: ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSynchronizedExpressionParserRuleCall_3());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XSynchronizedExpression_3=ruleXSynchronizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XSynchronizedExpression_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalMycnl.g:9244:3: this_XFeatureCall_4= ruleXFeatureCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XFeatureCall_4=ruleXFeatureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XFeatureCall_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMycnl.g:9253:3: this_XLiteral_5= ruleXLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XLiteral_5=ruleXLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XLiteral_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalMycnl.g:9262:3: this_XIfExpression_6= ruleXIfExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XIfExpression_6=ruleXIfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XIfExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalMycnl.g:9271:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    {
                    // InternalMycnl.g:9271:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    // InternalMycnl.g:9272:4: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_7());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XForLoopExpression_7=ruleXForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XForLoopExpression_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalMycnl.g:9295:3: this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBasicForLoopExpressionParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBasicForLoopExpression_8=ruleXBasicForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBasicForLoopExpression_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalMycnl.g:9304:3: this_XWhileExpression_9= ruleXWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XWhileExpression_9=ruleXWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XWhileExpression_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalMycnl.g:9313:3: this_XDoWhileExpression_10= ruleXDoWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_10());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XDoWhileExpression_10=ruleXDoWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XDoWhileExpression_10;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalMycnl.g:9322:3: this_XThrowExpression_11= ruleXThrowExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_11());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XThrowExpression_11=ruleXThrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XThrowExpression_11;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalMycnl.g:9331:3: this_XReturnExpression_12= ruleXReturnExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_12());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XReturnExpression_12=ruleXReturnExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XReturnExpression_12;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalMycnl.g:9340:3: this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_13());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XTryCatchFinallyExpression_13=ruleXTryCatchFinallyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XTryCatchFinallyExpression_13;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 15 :
                    // InternalMycnl.g:9349:3: this_XParenthesizedExpression_14= ruleXParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_14());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XParenthesizedExpression_14=ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XParenthesizedExpression_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPrimaryExpression"


    // $ANTLR start "entryRuleXLiteral"
    // InternalMycnl.g:9361:1: entryRuleXLiteral returns [EObject current=null] : iv_ruleXLiteral= ruleXLiteral EOF ;
    public final EObject entryRuleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXLiteral = null;


        try {
            // InternalMycnl.g:9361:49: (iv_ruleXLiteral= ruleXLiteral EOF )
            // InternalMycnl.g:9362:2: iv_ruleXLiteral= ruleXLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXLiteral=ruleXLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXLiteral"


    // $ANTLR start "ruleXLiteral"
    // InternalMycnl.g:9368:1: ruleXLiteral returns [EObject current=null] : (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) ;
    public final EObject ruleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XCollectionLiteral_0 = null;

        EObject this_XClosure_1 = null;

        EObject this_XBooleanLiteral_2 = null;

        EObject this_XNumberLiteral_3 = null;

        EObject this_XNullLiteral_4 = null;

        EObject this_XStringLiteral_5 = null;

        EObject this_XTypeLiteral_6 = null;



        	enterRule();

        try {
            // InternalMycnl.g:9374:2: ( (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) )
            // InternalMycnl.g:9375:2: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            {
            // InternalMycnl.g:9375:2: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            int alt54=7;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==166) ) {
                alt54=1;
            }
            else if ( (LA54_0==169) && (synpred21_InternalMycnl())) {
                alt54=2;
            }
            else if ( ((LA54_0>=188 && LA54_0<=189)) ) {
                alt54=3;
            }
            else if ( (LA54_0==RULE_INT||(LA54_0>=RULE_HEX && LA54_0<=RULE_DECIMAL)) ) {
                alt54=4;
            }
            else if ( (LA54_0==190) ) {
                alt54=5;
            }
            else if ( (LA54_0==RULE_STRING) ) {
                alt54=6;
            }
            else if ( (LA54_0==191) ) {
                alt54=7;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }
            switch (alt54) {
                case 1 :
                    // InternalMycnl.g:9376:3: this_XCollectionLiteral_0= ruleXCollectionLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCollectionLiteral_0=ruleXCollectionLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCollectionLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMycnl.g:9385:3: ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure )
                    {
                    // InternalMycnl.g:9385:3: ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure )
                    // InternalMycnl.g:9386:4: ( ( () '[' ) )=>this_XClosure_1= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XClosure_1=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XClosure_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMycnl.g:9402:3: this_XBooleanLiteral_2= ruleXBooleanLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBooleanLiteral_2=ruleXBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBooleanLiteral_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMycnl.g:9411:3: this_XNumberLiteral_3= ruleXNumberLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNumberLiteral_3=ruleXNumberLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNumberLiteral_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMycnl.g:9420:3: this_XNullLiteral_4= ruleXNullLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNullLiteral_4=ruleXNullLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNullLiteral_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMycnl.g:9429:3: this_XStringLiteral_5= ruleXStringLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XStringLiteral_5=ruleXStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XStringLiteral_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalMycnl.g:9438:3: this_XTypeLiteral_6= ruleXTypeLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XTypeLiteral_6=ruleXTypeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XTypeLiteral_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXLiteral"


    // $ANTLR start "entryRuleXCollectionLiteral"
    // InternalMycnl.g:9450:1: entryRuleXCollectionLiteral returns [EObject current=null] : iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF ;
    public final EObject entryRuleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCollectionLiteral = null;


        try {
            // InternalMycnl.g:9450:59: (iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF )
            // InternalMycnl.g:9451:2: iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCollectionLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCollectionLiteral=ruleXCollectionLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCollectionLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCollectionLiteral"


    // $ANTLR start "ruleXCollectionLiteral"
    // InternalMycnl.g:9457:1: ruleXCollectionLiteral returns [EObject current=null] : (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) ;
    public final EObject ruleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XSetLiteral_0 = null;

        EObject this_XListLiteral_1 = null;



        	enterRule();

        try {
            // InternalMycnl.g:9463:2: ( (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) )
            // InternalMycnl.g:9464:2: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            {
            // InternalMycnl.g:9464:2: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==166) ) {
                int LA55_1 = input.LA(2);

                if ( (LA55_1==169) ) {
                    alt55=2;
                }
                else if ( (LA55_1==167) ) {
                    alt55=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    // InternalMycnl.g:9465:3: this_XSetLiteral_0= ruleXSetLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XSetLiteral_0=ruleXSetLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XSetLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMycnl.g:9474:3: this_XListLiteral_1= ruleXListLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XListLiteral_1=ruleXListLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XListLiteral_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCollectionLiteral"


    // $ANTLR start "entryRuleXSetLiteral"
    // InternalMycnl.g:9486:1: entryRuleXSetLiteral returns [EObject current=null] : iv_ruleXSetLiteral= ruleXSetLiteral EOF ;
    public final EObject entryRuleXSetLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSetLiteral = null;


        try {
            // InternalMycnl.g:9486:52: (iv_ruleXSetLiteral= ruleXSetLiteral EOF )
            // InternalMycnl.g:9487:2: iv_ruleXSetLiteral= ruleXSetLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSetLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSetLiteral=ruleXSetLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSetLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSetLiteral"


    // $ANTLR start "ruleXSetLiteral"
    // InternalMycnl.g:9493:1: ruleXSetLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) ;
    public final EObject ruleXSetLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:9499:2: ( ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) )
            // InternalMycnl.g:9500:2: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            {
            // InternalMycnl.g:9500:2: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            // InternalMycnl.g:9501:3: () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}'
            {
            // InternalMycnl.g:9501:3: ()
            // InternalMycnl.g:9502:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,166,FOLLOW_143); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,167,FOLLOW_144); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalMycnl.g:9516:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( ((LA57_0>=RULE_INT && LA57_0<=RULE_ID)||LA57_0==30||LA57_0==76||LA57_0==134||(LA57_0>=150 && LA57_0<=151)||LA57_0==156||LA57_0==164||(LA57_0>=166 && LA57_0<=167)||LA57_0==169||LA57_0==174||(LA57_0>=178 && LA57_0<=179)||(LA57_0>=182 && LA57_0<=194)||LA57_0==196) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalMycnl.g:9517:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalMycnl.g:9517:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalMycnl.g:9518:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalMycnl.g:9518:5: (lv_elements_3_0= ruleXExpression )
                    // InternalMycnl.g:9519:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_145);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMycnl.g:9536:4: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop56:
                    do {
                        int alt56=2;
                        int LA56_0 = input.LA(1);

                        if ( (LA56_0==163) ) {
                            alt56=1;
                        }


                        switch (alt56) {
                    	case 1 :
                    	    // InternalMycnl.g:9537:5: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,163,FOLLOW_115); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalMycnl.g:9541:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalMycnl.g:9542:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalMycnl.g:9542:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalMycnl.g:9543:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_145);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop56;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,168,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSetLiteral"


    // $ANTLR start "entryRuleXListLiteral"
    // InternalMycnl.g:9570:1: entryRuleXListLiteral returns [EObject current=null] : iv_ruleXListLiteral= ruleXListLiteral EOF ;
    public final EObject entryRuleXListLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXListLiteral = null;


        try {
            // InternalMycnl.g:9570:53: (iv_ruleXListLiteral= ruleXListLiteral EOF )
            // InternalMycnl.g:9571:2: iv_ruleXListLiteral= ruleXListLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXListLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXListLiteral=ruleXListLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXListLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXListLiteral"


    // $ANTLR start "ruleXListLiteral"
    // InternalMycnl.g:9577:1: ruleXListLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) ;
    public final EObject ruleXListLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:9583:2: ( ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) )
            // InternalMycnl.g:9584:2: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            {
            // InternalMycnl.g:9584:2: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            // InternalMycnl.g:9585:3: () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']'
            {
            // InternalMycnl.g:9585:3: ()
            // InternalMycnl.g:9586:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,166,FOLLOW_146); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,169,FOLLOW_147); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalMycnl.g:9600:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( ((LA59_0>=RULE_INT && LA59_0<=RULE_ID)||LA59_0==30||LA59_0==76||LA59_0==134||(LA59_0>=150 && LA59_0<=151)||LA59_0==156||LA59_0==164||(LA59_0>=166 && LA59_0<=167)||LA59_0==169||LA59_0==174||(LA59_0>=178 && LA59_0<=179)||(LA59_0>=182 && LA59_0<=194)||LA59_0==196) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalMycnl.g:9601:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalMycnl.g:9601:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalMycnl.g:9602:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalMycnl.g:9602:5: (lv_elements_3_0= ruleXExpression )
                    // InternalMycnl.g:9603:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_148);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMycnl.g:9620:4: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop58:
                    do {
                        int alt58=2;
                        int LA58_0 = input.LA(1);

                        if ( (LA58_0==163) ) {
                            alt58=1;
                        }


                        switch (alt58) {
                    	case 1 :
                    	    // InternalMycnl.g:9621:5: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,163,FOLLOW_115); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalMycnl.g:9625:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalMycnl.g:9626:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalMycnl.g:9626:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalMycnl.g:9627:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_148);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop58;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,170,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXListLiteral"


    // $ANTLR start "entryRuleXClosure"
    // InternalMycnl.g:9654:1: entryRuleXClosure returns [EObject current=null] : iv_ruleXClosure= ruleXClosure EOF ;
    public final EObject entryRuleXClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXClosure = null;


        try {
            // InternalMycnl.g:9654:49: (iv_ruleXClosure= ruleXClosure EOF )
            // InternalMycnl.g:9655:2: iv_ruleXClosure= ruleXClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXClosure=ruleXClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXClosure"


    // $ANTLR start "ruleXClosure"
    // InternalMycnl.g:9661:1: ruleXClosure returns [EObject current=null] : ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) ;
    public final EObject ruleXClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_explicitSyntax_5_0=null;
        Token otherlv_7=null;
        EObject lv_declaredFormalParameters_2_0 = null;

        EObject lv_declaredFormalParameters_4_0 = null;

        EObject lv_expression_6_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:9667:2: ( ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) )
            // InternalMycnl.g:9668:2: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            {
            // InternalMycnl.g:9668:2: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            // InternalMycnl.g:9669:3: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']'
            {
            // InternalMycnl.g:9669:3: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) )
            // InternalMycnl.g:9670:4: ( ( () '[' ) )=> ( () otherlv_1= '[' )
            {
            // InternalMycnl.g:9676:4: ( () otherlv_1= '[' )
            // InternalMycnl.g:9677:5: () otherlv_1= '['
            {
            // InternalMycnl.g:9677:5: ()
            // InternalMycnl.g:9678:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,169,FOLLOW_149); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
              				
            }

            }


            }

            // InternalMycnl.g:9690:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?
            int alt62=2;
            alt62 = dfa62.predict(input);
            switch (alt62) {
                case 1 :
                    // InternalMycnl.g:9691:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    {
                    // InternalMycnl.g:9714:4: ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    // InternalMycnl.g:9715:5: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) )
                    {
                    // InternalMycnl.g:9715:5: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )?
                    int alt61=2;
                    int LA61_0 = input.LA(1);

                    if ( (LA61_0==RULE_ID||LA61_0==147||LA61_0==164) ) {
                        alt61=1;
                    }
                    switch (alt61) {
                        case 1 :
                            // InternalMycnl.g:9716:6: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            {
                            // InternalMycnl.g:9716:6: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) )
                            // InternalMycnl.g:9717:7: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            {
                            // InternalMycnl.g:9717:7: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            // InternalMycnl.g:9718:8: lv_declaredFormalParameters_2_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_150);
                            lv_declaredFormalParameters_2_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXClosureRule());
                              								}
                              								add(
                              									current,
                              									"declaredFormalParameters",
                              									lv_declaredFormalParameters_2_0,
                              									"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalMycnl.g:9735:6: (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            loop60:
                            do {
                                int alt60=2;
                                int LA60_0 = input.LA(1);

                                if ( (LA60_0==163) ) {
                                    alt60=1;
                                }


                                switch (alt60) {
                            	case 1 :
                            	    // InternalMycnl.g:9736:7: otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    {
                            	    otherlv_3=(Token)match(input,163,FOLLOW_124); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
                            	      						
                            	    }
                            	    // InternalMycnl.g:9740:7: ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    // InternalMycnl.g:9741:8: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    {
                            	    // InternalMycnl.g:9741:8: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    // InternalMycnl.g:9742:9: lv_declaredFormalParameters_4_0= ruleJvmFormalParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_150);
                            	    lv_declaredFormalParameters_4_0=ruleJvmFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXClosureRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"declaredFormalParameters",
                            	      										lv_declaredFormalParameters_4_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop60;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalMycnl.g:9761:5: ( (lv_explicitSyntax_5_0= '|' ) )
                    // InternalMycnl.g:9762:6: (lv_explicitSyntax_5_0= '|' )
                    {
                    // InternalMycnl.g:9762:6: (lv_explicitSyntax_5_0= '|' )
                    // InternalMycnl.g:9763:7: lv_explicitSyntax_5_0= '|'
                    {
                    lv_explicitSyntax_5_0=(Token)match(input,171,FOLLOW_151); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXClosureRule());
                      							}
                      							setWithLastConsumed(current, "explicitSyntax", true, "|");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalMycnl.g:9777:3: ( (lv_expression_6_0= ruleXExpressionInClosure ) )
            // InternalMycnl.g:9778:4: (lv_expression_6_0= ruleXExpressionInClosure )
            {
            // InternalMycnl.g:9778:4: (lv_expression_6_0= ruleXExpressionInClosure )
            // InternalMycnl.g:9779:5: lv_expression_6_0= ruleXExpressionInClosure
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_152);
            lv_expression_6_0=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXClosureRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_6_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpressionInClosure");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_7=(Token)match(input,170,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXClosure"


    // $ANTLR start "entryRuleXExpressionInClosure"
    // InternalMycnl.g:9804:1: entryRuleXExpressionInClosure returns [EObject current=null] : iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF ;
    public final EObject entryRuleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionInClosure = null;


        try {
            // InternalMycnl.g:9804:61: (iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF )
            // InternalMycnl.g:9805:2: iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionInClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionInClosure=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionInClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionInClosure"


    // $ANTLR start "ruleXExpressionInClosure"
    // InternalMycnl.g:9811:1: ruleXExpressionInClosure returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) ;
    public final EObject ruleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_expressions_1_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:9817:2: ( ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) )
            // InternalMycnl.g:9818:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            {
            // InternalMycnl.g:9818:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            // InternalMycnl.g:9819:3: () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            {
            // InternalMycnl.g:9819:3: ()
            // InternalMycnl.g:9820:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalMycnl.g:9826:3: ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( ((LA64_0>=RULE_INT && LA64_0<=RULE_ID)||LA64_0==30||LA64_0==76||LA64_0==134||(LA64_0>=150 && LA64_0<=151)||LA64_0==156||LA64_0==164||(LA64_0>=166 && LA64_0<=167)||LA64_0==169||LA64_0==174||(LA64_0>=178 && LA64_0<=194)||LA64_0==196) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalMycnl.g:9827:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )?
            	    {
            	    // InternalMycnl.g:9827:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalMycnl.g:9828:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalMycnl.g:9828:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    // InternalMycnl.g:9829:6: lv_expressions_1_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_153);
            	    lv_expressions_1_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expressions",
            	      							lv_expressions_1_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalMycnl.g:9846:4: (otherlv_2= ';' )?
            	    int alt63=2;
            	    int LA63_0 = input.LA(1);

            	    if ( (LA63_0==172) ) {
            	        alt63=1;
            	    }
            	    switch (alt63) {
            	        case 1 :
            	            // InternalMycnl.g:9847:5: otherlv_2= ';'
            	            {
            	            otherlv_2=(Token)match(input,172,FOLLOW_154); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionInClosure"


    // $ANTLR start "entryRuleXShortClosure"
    // InternalMycnl.g:9857:1: entryRuleXShortClosure returns [EObject current=null] : iv_ruleXShortClosure= ruleXShortClosure EOF ;
    public final EObject entryRuleXShortClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXShortClosure = null;


        try {
            // InternalMycnl.g:9857:54: (iv_ruleXShortClosure= ruleXShortClosure EOF )
            // InternalMycnl.g:9858:2: iv_ruleXShortClosure= ruleXShortClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXShortClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXShortClosure=ruleXShortClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXShortClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXShortClosure"


    // $ANTLR start "ruleXShortClosure"
    // InternalMycnl.g:9864:1: ruleXShortClosure returns [EObject current=null] : ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXShortClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitSyntax_4_0=null;
        EObject lv_declaredFormalParameters_1_0 = null;

        EObject lv_declaredFormalParameters_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:9870:2: ( ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalMycnl.g:9871:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalMycnl.g:9871:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalMycnl.g:9872:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalMycnl.g:9872:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) )
            // InternalMycnl.g:9873:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            {
            // InternalMycnl.g:9898:4: ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            // InternalMycnl.g:9899:5: () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) )
            {
            // InternalMycnl.g:9899:5: ()
            // InternalMycnl.g:9900:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
              							current);
              					
            }

            }

            // InternalMycnl.g:9906:5: ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==RULE_ID||LA66_0==147||LA66_0==164) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalMycnl.g:9907:6: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    {
                    // InternalMycnl.g:9907:6: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) )
                    // InternalMycnl.g:9908:7: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    {
                    // InternalMycnl.g:9908:7: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    // InternalMycnl.g:9909:8: lv_declaredFormalParameters_1_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0());
                      							
                    }
                    pushFollow(FOLLOW_150);
                    lv_declaredFormalParameters_1_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                      								}
                      								add(
                      									current,
                      									"declaredFormalParameters",
                      									lv_declaredFormalParameters_1_0,
                      									"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalMycnl.g:9926:6: (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    loop65:
                    do {
                        int alt65=2;
                        int LA65_0 = input.LA(1);

                        if ( (LA65_0==163) ) {
                            alt65=1;
                        }


                        switch (alt65) {
                    	case 1 :
                    	    // InternalMycnl.g:9927:7: otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    {
                    	    otherlv_2=(Token)match(input,163,FOLLOW_124); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
                    	      						
                    	    }
                    	    // InternalMycnl.g:9931:7: ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    // InternalMycnl.g:9932:8: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    {
                    	    // InternalMycnl.g:9932:8: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    // InternalMycnl.g:9933:9: lv_declaredFormalParameters_3_0= ruleJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0());
                    	      								
                    	    }
                    	    pushFollow(FOLLOW_150);
                    	    lv_declaredFormalParameters_3_0=ruleJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									if (current==null) {
                    	      										current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                    	      									}
                    	      									add(
                    	      										current,
                    	      										"declaredFormalParameters",
                    	      										lv_declaredFormalParameters_3_0,
                    	      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                    	      									afterParserOrEnumRuleCall();
                    	      								
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop65;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalMycnl.g:9952:5: ( (lv_explicitSyntax_4_0= '|' ) )
            // InternalMycnl.g:9953:6: (lv_explicitSyntax_4_0= '|' )
            {
            // InternalMycnl.g:9953:6: (lv_explicitSyntax_4_0= '|' )
            // InternalMycnl.g:9954:7: lv_explicitSyntax_4_0= '|'
            {
            lv_explicitSyntax_4_0=(Token)match(input,171,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
              						
            }
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElement(grammarAccess.getXShortClosureRule());
              							}
              							setWithLastConsumed(current, "explicitSyntax", true, "|");
              						
            }

            }


            }


            }


            }

            // InternalMycnl.g:9968:3: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalMycnl.g:9969:4: (lv_expression_5_0= ruleXExpression )
            {
            // InternalMycnl.g:9969:4: (lv_expression_5_0= ruleXExpression )
            // InternalMycnl.g:9970:5: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXShortClosureRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXShortClosure"


    // $ANTLR start "entryRuleXParenthesizedExpression"
    // InternalMycnl.g:9991:1: entryRuleXParenthesizedExpression returns [EObject current=null] : iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF ;
    public final EObject entryRuleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXParenthesizedExpression = null;


        try {
            // InternalMycnl.g:9991:65: (iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF )
            // InternalMycnl.g:9992:2: iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXParenthesizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXParenthesizedExpression"


    // $ANTLR start "ruleXParenthesizedExpression"
    // InternalMycnl.g:9998:1: ruleXParenthesizedExpression returns [EObject current=null] : (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) ;
    public final EObject ruleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalMycnl.g:10004:2: ( (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) )
            // InternalMycnl.g:10005:2: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            {
            // InternalMycnl.g:10005:2: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            // InternalMycnl.g:10006:3: otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,164,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_140);
            this_XExpression_1=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XExpression_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,165,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXParenthesizedExpression"


    // $ANTLR start "entryRuleXIfExpression"
    // InternalMycnl.g:10026:1: entryRuleXIfExpression returns [EObject current=null] : iv_ruleXIfExpression= ruleXIfExpression EOF ;
    public final EObject entryRuleXIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXIfExpression = null;


        try {
            // InternalMycnl.g:10026:54: (iv_ruleXIfExpression= ruleXIfExpression EOF )
            // InternalMycnl.g:10027:2: iv_ruleXIfExpression= ruleXIfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXIfExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXIfExpression=ruleXIfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXIfExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXIfExpression"


    // $ANTLR start "ruleXIfExpression"
    // InternalMycnl.g:10033:1: ruleXIfExpression returns [EObject current=null] : ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXIfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_if_3_0 = null;

        EObject lv_then_5_0 = null;

        EObject lv_else_7_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:10039:2: ( ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) )
            // InternalMycnl.g:10040:2: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            {
            // InternalMycnl.g:10040:2: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            // InternalMycnl.g:10041:3: () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            {
            // InternalMycnl.g:10041:3: ()
            // InternalMycnl.g:10042:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,30,FOLLOW_155); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,164,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalMycnl.g:10056:3: ( (lv_if_3_0= ruleXExpression ) )
            // InternalMycnl.g:10057:4: (lv_if_3_0= ruleXExpression )
            {
            // InternalMycnl.g:10057:4: (lv_if_3_0= ruleXExpression )
            // InternalMycnl.g:10058:5: lv_if_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_140);
            lv_if_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"if",
              						lv_if_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,165,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalMycnl.g:10079:3: ( (lv_then_5_0= ruleXExpression ) )
            // InternalMycnl.g:10080:4: (lv_then_5_0= ruleXExpression )
            {
            // InternalMycnl.g:10080:4: (lv_then_5_0= ruleXExpression )
            // InternalMycnl.g:10081:5: lv_then_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_156);
            lv_then_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"then",
              						lv_then_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMycnl.g:10098:3: ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==173) ) {
                int LA67_1 = input.LA(2);

                if ( (synpred25_InternalMycnl()) ) {
                    alt67=1;
                }
            }
            switch (alt67) {
                case 1 :
                    // InternalMycnl.g:10099:4: ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) )
                    {
                    // InternalMycnl.g:10099:4: ( ( 'else' )=>otherlv_6= 'else' )
                    // InternalMycnl.g:10100:5: ( 'else' )=>otherlv_6= 'else'
                    {
                    otherlv_6=(Token)match(input,173,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
                      				
                    }

                    }

                    // InternalMycnl.g:10106:4: ( (lv_else_7_0= ruleXExpression ) )
                    // InternalMycnl.g:10107:5: (lv_else_7_0= ruleXExpression )
                    {
                    // InternalMycnl.g:10107:5: (lv_else_7_0= ruleXExpression )
                    // InternalMycnl.g:10108:6: lv_else_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_else_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
                      						}
                      						set(
                      							current,
                      							"else",
                      							lv_else_7_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXIfExpression"


    // $ANTLR start "entryRuleXSwitchExpression"
    // InternalMycnl.g:10130:1: entryRuleXSwitchExpression returns [EObject current=null] : iv_ruleXSwitchExpression= ruleXSwitchExpression EOF ;
    public final EObject entryRuleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSwitchExpression = null;


        try {
            // InternalMycnl.g:10130:58: (iv_ruleXSwitchExpression= ruleXSwitchExpression EOF )
            // InternalMycnl.g:10131:2: iv_ruleXSwitchExpression= ruleXSwitchExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSwitchExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSwitchExpression=ruleXSwitchExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSwitchExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSwitchExpression"


    // $ANTLR start "ruleXSwitchExpression"
    // InternalMycnl.g:10137:1: ruleXSwitchExpression returns [EObject current=null] : ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) ;
    public final EObject ruleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_switch_5_0 = null;

        EObject lv_declaredParam_7_0 = null;

        EObject lv_switch_9_0 = null;

        EObject lv_cases_11_0 = null;

        EObject lv_default_14_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:10143:2: ( ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) )
            // InternalMycnl.g:10144:2: ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            {
            // InternalMycnl.g:10144:2: ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            // InternalMycnl.g:10145:3: () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}'
            {
            // InternalMycnl.g:10145:3: ()
            // InternalMycnl.g:10146:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,174,FOLLOW_157); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
              		
            }
            // InternalMycnl.g:10156:3: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )
            int alt69=2;
            alt69 = dfa69.predict(input);
            switch (alt69) {
                case 1 :
                    // InternalMycnl.g:10157:4: ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' )
                    {
                    // InternalMycnl.g:10157:4: ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' )
                    // InternalMycnl.g:10158:5: ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')'
                    {
                    // InternalMycnl.g:10158:5: ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) )
                    // InternalMycnl.g:10159:6: ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
                    {
                    // InternalMycnl.g:10169:6: (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
                    // InternalMycnl.g:10170:7: otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':'
                    {
                    otherlv_2=(Token)match(input,164,FOLLOW_124); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_2, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_0_0_0_0());
                      						
                    }
                    // InternalMycnl.g:10174:7: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
                    // InternalMycnl.g:10175:8: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    {
                    // InternalMycnl.g:10175:8: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    // InternalMycnl.g:10176:9: lv_declaredParam_3_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      									newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0());
                      								
                    }
                    pushFollow(FOLLOW_158);
                    lv_declaredParam_3_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      									if (current==null) {
                      										current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      									}
                      									set(
                      										current,
                      										"declaredParam",
                      										lv_declaredParam_3_0,
                      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                      									afterParserOrEnumRuleCall();
                      								
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,175,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_4, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_2());
                      						
                    }

                    }


                    }

                    // InternalMycnl.g:10199:5: ( (lv_switch_5_0= ruleXExpression ) )
                    // InternalMycnl.g:10200:6: (lv_switch_5_0= ruleXExpression )
                    {
                    // InternalMycnl.g:10200:6: (lv_switch_5_0= ruleXExpression )
                    // InternalMycnl.g:10201:7: lv_switch_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_140);
                    lv_switch_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      							}
                      							set(
                      								current,
                      								"switch",
                      								lv_switch_5_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,165,FOLLOW_143); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:10224:4: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    {
                    // InternalMycnl.g:10224:4: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    // InternalMycnl.g:10225:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) )
                    {
                    // InternalMycnl.g:10225:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?
                    int alt68=2;
                    alt68 = dfa68.predict(input);
                    switch (alt68) {
                        case 1 :
                            // InternalMycnl.g:10226:6: ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' )
                            {
                            // InternalMycnl.g:10235:6: ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' )
                            // InternalMycnl.g:10236:7: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':'
                            {
                            // InternalMycnl.g:10236:7: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) )
                            // InternalMycnl.g:10237:8: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            {
                            // InternalMycnl.g:10237:8: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            // InternalMycnl.g:10238:9: lv_declaredParam_7_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0());
                              								
                            }
                            pushFollow(FOLLOW_158);
                            lv_declaredParam_7_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                              									}
                              									set(
                              										current,
                              										"declaredParam",
                              										lv_declaredParam_7_0,
                              										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,175,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_8, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_1());
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalMycnl.g:10261:5: ( (lv_switch_9_0= ruleXExpression ) )
                    // InternalMycnl.g:10262:6: (lv_switch_9_0= ruleXExpression )
                    {
                    // InternalMycnl.g:10262:6: (lv_switch_9_0= ruleXExpression )
                    // InternalMycnl.g:10263:7: lv_switch_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_143);
                    lv_switch_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      							}
                      							set(
                      								current,
                      								"switch",
                      								lv_switch_9_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,167,FOLLOW_159); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalMycnl.g:10286:3: ( (lv_cases_11_0= ruleXCasePart ) )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==RULE_ID||LA70_0==147||(LA70_0>=163 && LA70_0<=164)||LA70_0==175||LA70_0==177) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalMycnl.g:10287:4: (lv_cases_11_0= ruleXCasePart )
            	    {
            	    // InternalMycnl.g:10287:4: (lv_cases_11_0= ruleXCasePart )
            	    // InternalMycnl.g:10288:5: lv_cases_11_0= ruleXCasePart
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_159);
            	    lv_cases_11_0=ruleXCasePart();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"cases",
            	      						lv_cases_11_0,
            	      						"org.eclipse.xtext.xbase.Xbase.XCasePart");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            // InternalMycnl.g:10305:3: (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==176) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalMycnl.g:10306:4: otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) )
                    {
                    otherlv_12=(Token)match(input,176,FOLLOW_158); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
                      			
                    }
                    otherlv_13=(Token)match(input,175,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
                      			
                    }
                    // InternalMycnl.g:10314:4: ( (lv_default_14_0= ruleXExpression ) )
                    // InternalMycnl.g:10315:5: (lv_default_14_0= ruleXExpression )
                    {
                    // InternalMycnl.g:10315:5: (lv_default_14_0= ruleXExpression )
                    // InternalMycnl.g:10316:6: lv_default_14_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_160);
                    lv_default_14_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      						}
                      						set(
                      							current,
                      							"default",
                      							lv_default_14_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,168,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSwitchExpression"


    // $ANTLR start "entryRuleXCasePart"
    // InternalMycnl.g:10342:1: entryRuleXCasePart returns [EObject current=null] : iv_ruleXCasePart= ruleXCasePart EOF ;
    public final EObject entryRuleXCasePart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCasePart = null;


        try {
            // InternalMycnl.g:10342:50: (iv_ruleXCasePart= ruleXCasePart EOF )
            // InternalMycnl.g:10343:2: iv_ruleXCasePart= ruleXCasePart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCasePartRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCasePart=ruleXCasePart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCasePart; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCasePart"


    // $ANTLR start "ruleXCasePart"
    // InternalMycnl.g:10349:1: ruleXCasePart returns [EObject current=null] : ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) ) ;
    public final EObject ruleXCasePart() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_fallThrough_6_0=null;
        EObject lv_typeGuard_1_0 = null;

        EObject lv_case_3_0 = null;

        EObject lv_then_5_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:10355:2: ( ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) ) )
            // InternalMycnl.g:10356:2: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) )
            {
            // InternalMycnl.g:10356:2: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) )
            // InternalMycnl.g:10357:3: () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) )
            {
            // InternalMycnl.g:10357:3: ()
            // InternalMycnl.g:10358:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXCasePartAccess().getXCasePartAction_0(),
              					current);
              			
            }

            }

            // InternalMycnl.g:10364:3: ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==RULE_ID||LA72_0==147||LA72_0==164) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalMycnl.g:10365:4: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    {
                    // InternalMycnl.g:10365:4: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    // InternalMycnl.g:10366:5: lv_typeGuard_1_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_161);
                    lv_typeGuard_1_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      					}
                      					set(
                      						current,
                      						"typeGuard",
                      						lv_typeGuard_1_0,
                      						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalMycnl.g:10383:3: (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==177) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalMycnl.g:10384:4: otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) )
                    {
                    otherlv_2=(Token)match(input,177,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getXCasePartAccess().getCaseKeyword_2_0());
                      			
                    }
                    // InternalMycnl.g:10388:4: ( (lv_case_3_0= ruleXExpression ) )
                    // InternalMycnl.g:10389:5: (lv_case_3_0= ruleXExpression )
                    {
                    // InternalMycnl.g:10389:5: (lv_case_3_0= ruleXExpression )
                    // InternalMycnl.g:10390:6: lv_case_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_162);
                    lv_case_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      						}
                      						set(
                      							current,
                      							"case",
                      							lv_case_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMycnl.g:10408:3: ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) )
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==175) ) {
                alt74=1;
            }
            else if ( (LA74_0==163) ) {
                alt74=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;
            }
            switch (alt74) {
                case 1 :
                    // InternalMycnl.g:10409:4: (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) )
                    {
                    // InternalMycnl.g:10409:4: (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) )
                    // InternalMycnl.g:10410:5: otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) )
                    {
                    otherlv_4=(Token)match(input,175,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getXCasePartAccess().getColonKeyword_3_0_0());
                      				
                    }
                    // InternalMycnl.g:10414:5: ( (lv_then_5_0= ruleXExpression ) )
                    // InternalMycnl.g:10415:6: (lv_then_5_0= ruleXExpression )
                    {
                    // InternalMycnl.g:10415:6: (lv_then_5_0= ruleXExpression )
                    // InternalMycnl.g:10416:7: lv_then_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_then_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      							}
                      							set(
                      								current,
                      								"then",
                      								lv_then_5_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:10435:4: ( (lv_fallThrough_6_0= ',' ) )
                    {
                    // InternalMycnl.g:10435:4: ( (lv_fallThrough_6_0= ',' ) )
                    // InternalMycnl.g:10436:5: (lv_fallThrough_6_0= ',' )
                    {
                    // InternalMycnl.g:10436:5: (lv_fallThrough_6_0= ',' )
                    // InternalMycnl.g:10437:6: lv_fallThrough_6_0= ','
                    {
                    lv_fallThrough_6_0=(Token)match(input,163,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_fallThrough_6_0, grammarAccess.getXCasePartAccess().getFallThroughCommaKeyword_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXCasePartRule());
                      						}
                      						setWithLastConsumed(current, "fallThrough", true, ",");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCasePart"


    // $ANTLR start "entryRuleXForLoopExpression"
    // InternalMycnl.g:10454:1: entryRuleXForLoopExpression returns [EObject current=null] : iv_ruleXForLoopExpression= ruleXForLoopExpression EOF ;
    public final EObject entryRuleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXForLoopExpression = null;


        try {
            // InternalMycnl.g:10454:59: (iv_ruleXForLoopExpression= ruleXForLoopExpression EOF )
            // InternalMycnl.g:10455:2: iv_ruleXForLoopExpression= ruleXForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXForLoopExpression=ruleXForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXForLoopExpression"


    // $ANTLR start "ruleXForLoopExpression"
    // InternalMycnl.g:10461:1: ruleXForLoopExpression returns [EObject current=null] : ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) ;
    public final EObject ruleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_forExpression_5_0 = null;

        EObject lv_eachExpression_7_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:10467:2: ( ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) )
            // InternalMycnl.g:10468:2: ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            {
            // InternalMycnl.g:10468:2: ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            // InternalMycnl.g:10469:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) )
            {
            // InternalMycnl.g:10469:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) )
            // InternalMycnl.g:10470:4: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
            {
            // InternalMycnl.g:10483:4: ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
            // InternalMycnl.g:10484:5: () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':'
            {
            // InternalMycnl.g:10484:5: ()
            // InternalMycnl.g:10485:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,76,FOLLOW_155); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,164,FOLLOW_124); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }
            // InternalMycnl.g:10499:5: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
            // InternalMycnl.g:10500:6: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            {
            // InternalMycnl.g:10500:6: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            // InternalMycnl.g:10501:7: lv_declaredParam_3_0= ruleJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0());
              						
            }
            pushFollow(FOLLOW_158);
            lv_declaredParam_3_0=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              							}
              							set(
              								current,
              								"declaredParam",
              								lv_declaredParam_3_0,
              								"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
              							afterParserOrEnumRuleCall();
              						
            }

            }


            }

            otherlv_4=(Token)match(input,175,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_0_0_4());
              				
            }

            }


            }

            // InternalMycnl.g:10524:3: ( (lv_forExpression_5_0= ruleXExpression ) )
            // InternalMycnl.g:10525:4: (lv_forExpression_5_0= ruleXExpression )
            {
            // InternalMycnl.g:10525:4: (lv_forExpression_5_0= ruleXExpression )
            // InternalMycnl.g:10526:5: lv_forExpression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_140);
            lv_forExpression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"forExpression",
              						lv_forExpression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,165,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalMycnl.g:10547:3: ( (lv_eachExpression_7_0= ruleXExpression ) )
            // InternalMycnl.g:10548:4: (lv_eachExpression_7_0= ruleXExpression )
            {
            // InternalMycnl.g:10548:4: (lv_eachExpression_7_0= ruleXExpression )
            // InternalMycnl.g:10549:5: lv_eachExpression_7_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_7_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_7_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXForLoopExpression"


    // $ANTLR start "entryRuleXBasicForLoopExpression"
    // InternalMycnl.g:10570:1: entryRuleXBasicForLoopExpression returns [EObject current=null] : iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF ;
    public final EObject entryRuleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBasicForLoopExpression = null;


        try {
            // InternalMycnl.g:10570:64: (iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF )
            // InternalMycnl.g:10571:2: iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBasicForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBasicForLoopExpression=ruleXBasicForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBasicForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBasicForLoopExpression"


    // $ANTLR start "ruleXBasicForLoopExpression"
    // InternalMycnl.g:10577:1: ruleXBasicForLoopExpression returns [EObject current=null] : ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) ) ;
    public final EObject ruleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_initExpressions_3_0 = null;

        EObject lv_initExpressions_5_0 = null;

        EObject lv_expression_7_0 = null;

        EObject lv_updateExpressions_9_0 = null;

        EObject lv_updateExpressions_11_0 = null;

        EObject lv_eachExpression_13_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:10583:2: ( ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) ) )
            // InternalMycnl.g:10584:2: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            {
            // InternalMycnl.g:10584:2: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            // InternalMycnl.g:10585:3: () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) )
            {
            // InternalMycnl.g:10585:3: ()
            // InternalMycnl.g:10586:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBasicForLoopExpressionAccess().getXBasicForLoopExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,76,FOLLOW_155); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXBasicForLoopExpressionAccess().getForKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,164,FOLLOW_163); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalMycnl.g:10600:3: ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( ((LA76_0>=RULE_INT && LA76_0<=RULE_ID)||LA76_0==30||LA76_0==76||LA76_0==134||(LA76_0>=150 && LA76_0<=151)||LA76_0==156||LA76_0==164||(LA76_0>=166 && LA76_0<=167)||LA76_0==169||LA76_0==174||(LA76_0>=178 && LA76_0<=194)||LA76_0==196) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalMycnl.g:10601:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    {
                    // InternalMycnl.g:10601:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) )
                    // InternalMycnl.g:10602:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    {
                    // InternalMycnl.g:10602:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    // InternalMycnl.g:10603:6: lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_164);
                    lv_initExpressions_3_0=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"initExpressions",
                      							lv_initExpressions_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMycnl.g:10620:4: (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    loop75:
                    do {
                        int alt75=2;
                        int LA75_0 = input.LA(1);

                        if ( (LA75_0==163) ) {
                            alt75=1;
                        }


                        switch (alt75) {
                    	case 1 :
                    	    // InternalMycnl.g:10621:5: otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    {
                    	    otherlv_4=(Token)match(input,163,FOLLOW_165); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalMycnl.g:10625:5: ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    // InternalMycnl.g:10626:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    {
                    	    // InternalMycnl.g:10626:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    // InternalMycnl.g:10627:7: lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_164);
                    	    lv_initExpressions_5_0=ruleXExpressionOrVarDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"initExpressions",
                    	      								lv_initExpressions_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop75;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,172,FOLLOW_166); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_4());
              		
            }
            // InternalMycnl.g:10650:3: ( (lv_expression_7_0= ruleXExpression ) )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( ((LA77_0>=RULE_INT && LA77_0<=RULE_ID)||LA77_0==30||LA77_0==76||LA77_0==134||(LA77_0>=150 && LA77_0<=151)||LA77_0==156||LA77_0==164||(LA77_0>=166 && LA77_0<=167)||LA77_0==169||LA77_0==174||(LA77_0>=178 && LA77_0<=179)||(LA77_0>=182 && LA77_0<=194)||LA77_0==196) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalMycnl.g:10651:4: (lv_expression_7_0= ruleXExpression )
                    {
                    // InternalMycnl.g:10651:4: (lv_expression_7_0= ruleXExpression )
                    // InternalMycnl.g:10652:5: lv_expression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionXExpressionParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_167);
                    lv_expression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_7_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,172,FOLLOW_168); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_6());
              		
            }
            // InternalMycnl.g:10673:3: ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( ((LA79_0>=RULE_INT && LA79_0<=RULE_ID)||LA79_0==30||LA79_0==76||LA79_0==134||(LA79_0>=150 && LA79_0<=151)||LA79_0==156||LA79_0==164||(LA79_0>=166 && LA79_0<=167)||LA79_0==169||LA79_0==174||(LA79_0>=178 && LA79_0<=179)||(LA79_0>=182 && LA79_0<=194)||LA79_0==196) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalMycnl.g:10674:4: ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    {
                    // InternalMycnl.g:10674:4: ( (lv_updateExpressions_9_0= ruleXExpression ) )
                    // InternalMycnl.g:10675:5: (lv_updateExpressions_9_0= ruleXExpression )
                    {
                    // InternalMycnl.g:10675:5: (lv_updateExpressions_9_0= ruleXExpression )
                    // InternalMycnl.g:10676:6: lv_updateExpressions_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_141);
                    lv_updateExpressions_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"updateExpressions",
                      							lv_updateExpressions_9_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMycnl.g:10693:4: (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    loop78:
                    do {
                        int alt78=2;
                        int LA78_0 = input.LA(1);

                        if ( (LA78_0==163) ) {
                            alt78=1;
                        }


                        switch (alt78) {
                    	case 1 :
                    	    // InternalMycnl.g:10694:5: otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    {
                    	    otherlv_10=(Token)match(input,163,FOLLOW_115); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_7_1_0());
                    	      				
                    	    }
                    	    // InternalMycnl.g:10698:5: ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    // InternalMycnl.g:10699:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    {
                    	    // InternalMycnl.g:10699:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    // InternalMycnl.g:10700:7: lv_updateExpressions_11_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_141);
                    	    lv_updateExpressions_11_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"updateExpressions",
                    	      								lv_updateExpressions_11_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop78;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_12=(Token)match(input,165,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getXBasicForLoopExpressionAccess().getRightParenthesisKeyword_8());
              		
            }
            // InternalMycnl.g:10723:3: ( (lv_eachExpression_13_0= ruleXExpression ) )
            // InternalMycnl.g:10724:4: (lv_eachExpression_13_0= ruleXExpression )
            {
            // InternalMycnl.g:10724:4: (lv_eachExpression_13_0= ruleXExpression )
            // InternalMycnl.g:10725:5: lv_eachExpression_13_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_9_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_13_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_13_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBasicForLoopExpression"


    // $ANTLR start "entryRuleXWhileExpression"
    // InternalMycnl.g:10746:1: entryRuleXWhileExpression returns [EObject current=null] : iv_ruleXWhileExpression= ruleXWhileExpression EOF ;
    public final EObject entryRuleXWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXWhileExpression = null;


        try {
            // InternalMycnl.g:10746:57: (iv_ruleXWhileExpression= ruleXWhileExpression EOF )
            // InternalMycnl.g:10747:2: iv_ruleXWhileExpression= ruleXWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXWhileExpression=ruleXWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXWhileExpression"


    // $ANTLR start "ruleXWhileExpression"
    // InternalMycnl.g:10753:1: ruleXWhileExpression returns [EObject current=null] : ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_predicate_3_0 = null;

        EObject lv_body_5_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:10759:2: ( ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) )
            // InternalMycnl.g:10760:2: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            {
            // InternalMycnl.g:10760:2: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            // InternalMycnl.g:10761:3: () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) )
            {
            // InternalMycnl.g:10761:3: ()
            // InternalMycnl.g:10762:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,178,FOLLOW_155); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,164,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalMycnl.g:10776:3: ( (lv_predicate_3_0= ruleXExpression ) )
            // InternalMycnl.g:10777:4: (lv_predicate_3_0= ruleXExpression )
            {
            // InternalMycnl.g:10777:4: (lv_predicate_3_0= ruleXExpression )
            // InternalMycnl.g:10778:5: lv_predicate_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_140);
            lv_predicate_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,165,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalMycnl.g:10799:3: ( (lv_body_5_0= ruleXExpression ) )
            // InternalMycnl.g:10800:4: (lv_body_5_0= ruleXExpression )
            {
            // InternalMycnl.g:10800:4: (lv_body_5_0= ruleXExpression )
            // InternalMycnl.g:10801:5: lv_body_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXWhileExpression"


    // $ANTLR start "entryRuleXDoWhileExpression"
    // InternalMycnl.g:10822:1: entryRuleXDoWhileExpression returns [EObject current=null] : iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF ;
    public final EObject entryRuleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXDoWhileExpression = null;


        try {
            // InternalMycnl.g:10822:59: (iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF )
            // InternalMycnl.g:10823:2: iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXDoWhileExpression=ruleXDoWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXDoWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXDoWhileExpression"


    // $ANTLR start "ruleXDoWhileExpression"
    // InternalMycnl.g:10829:1: ruleXDoWhileExpression returns [EObject current=null] : ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) ;
    public final EObject ruleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_body_2_0 = null;

        EObject lv_predicate_5_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:10835:2: ( ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) )
            // InternalMycnl.g:10836:2: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            {
            // InternalMycnl.g:10836:2: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            // InternalMycnl.g:10837:3: () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')'
            {
            // InternalMycnl.g:10837:3: ()
            // InternalMycnl.g:10838:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,179,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
              		
            }
            // InternalMycnl.g:10848:3: ( (lv_body_2_0= ruleXExpression ) )
            // InternalMycnl.g:10849:4: (lv_body_2_0= ruleXExpression )
            {
            // InternalMycnl.g:10849:4: (lv_body_2_0= ruleXExpression )
            // InternalMycnl.g:10850:5: lv_body_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_169);
            lv_body_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,178,FOLLOW_155); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
              		
            }
            otherlv_4=(Token)match(input,164,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
              		
            }
            // InternalMycnl.g:10875:3: ( (lv_predicate_5_0= ruleXExpression ) )
            // InternalMycnl.g:10876:4: (lv_predicate_5_0= ruleXExpression )
            {
            // InternalMycnl.g:10876:4: (lv_predicate_5_0= ruleXExpression )
            // InternalMycnl.g:10877:5: lv_predicate_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_140);
            lv_predicate_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,165,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXDoWhileExpression"


    // $ANTLR start "entryRuleXBlockExpression"
    // InternalMycnl.g:10902:1: entryRuleXBlockExpression returns [EObject current=null] : iv_ruleXBlockExpression= ruleXBlockExpression EOF ;
    public final EObject entryRuleXBlockExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBlockExpression = null;


        try {
            // InternalMycnl.g:10902:57: (iv_ruleXBlockExpression= ruleXBlockExpression EOF )
            // InternalMycnl.g:10903:2: iv_ruleXBlockExpression= ruleXBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBlockExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBlockExpression=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBlockExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBlockExpression"


    // $ANTLR start "ruleXBlockExpression"
    // InternalMycnl.g:10909:1: ruleXBlockExpression returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) ;
    public final EObject ruleXBlockExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_expressions_2_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:10915:2: ( ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) )
            // InternalMycnl.g:10916:2: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            {
            // InternalMycnl.g:10916:2: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            // InternalMycnl.g:10917:3: () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}'
            {
            // InternalMycnl.g:10917:3: ()
            // InternalMycnl.g:10918:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,167,FOLLOW_170); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalMycnl.g:10928:3: ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )*
            loop81:
            do {
                int alt81=2;
                int LA81_0 = input.LA(1);

                if ( ((LA81_0>=RULE_INT && LA81_0<=RULE_ID)||LA81_0==30||LA81_0==76||LA81_0==134||(LA81_0>=150 && LA81_0<=151)||LA81_0==156||LA81_0==164||(LA81_0>=166 && LA81_0<=167)||LA81_0==169||LA81_0==174||(LA81_0>=178 && LA81_0<=194)||LA81_0==196) ) {
                    alt81=1;
                }


                switch (alt81) {
            	case 1 :
            	    // InternalMycnl.g:10929:4: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )?
            	    {
            	    // InternalMycnl.g:10929:4: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalMycnl.g:10930:5: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalMycnl.g:10930:5: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    // InternalMycnl.g:10931:6: lv_expressions_2_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_171);
            	    lv_expressions_2_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expressions",
            	      							lv_expressions_2_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalMycnl.g:10948:4: (otherlv_3= ';' )?
            	    int alt80=2;
            	    int LA80_0 = input.LA(1);

            	    if ( (LA80_0==172) ) {
            	        alt80=1;
            	    }
            	    switch (alt80) {
            	        case 1 :
            	            // InternalMycnl.g:10949:5: otherlv_3= ';'
            	            {
            	            otherlv_3=(Token)match(input,172,FOLLOW_170); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);

            otherlv_4=(Token)match(input,168,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBlockExpression"


    // $ANTLR start "entryRuleXExpressionOrVarDeclaration"
    // InternalMycnl.g:10963:1: entryRuleXExpressionOrVarDeclaration returns [EObject current=null] : iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF ;
    public final EObject entryRuleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionOrVarDeclaration = null;


        try {
            // InternalMycnl.g:10963:68: (iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF )
            // InternalMycnl.g:10964:2: iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionOrVarDeclaration=ruleXExpressionOrVarDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionOrVarDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionOrVarDeclaration"


    // $ANTLR start "ruleXExpressionOrVarDeclaration"
    // InternalMycnl.g:10970:1: ruleXExpressionOrVarDeclaration returns [EObject current=null] : (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_XVariableDeclaration_0 = null;

        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalMycnl.g:10976:2: ( (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) )
            // InternalMycnl.g:10977:2: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            {
            // InternalMycnl.g:10977:2: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( ((LA82_0>=180 && LA82_0<=181)) ) {
                alt82=1;
            }
            else if ( ((LA82_0>=RULE_INT && LA82_0<=RULE_ID)||LA82_0==30||LA82_0==76||LA82_0==134||(LA82_0>=150 && LA82_0<=151)||LA82_0==156||LA82_0==164||(LA82_0>=166 && LA82_0<=167)||LA82_0==169||LA82_0==174||(LA82_0>=178 && LA82_0<=179)||(LA82_0>=182 && LA82_0<=194)||LA82_0==196) ) {
                alt82=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 82, 0, input);

                throw nvae;
            }
            switch (alt82) {
                case 1 :
                    // InternalMycnl.g:10978:3: this_XVariableDeclaration_0= ruleXVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXVariableDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XVariableDeclaration_0=ruleXVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XVariableDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMycnl.g:10987:3: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionOrVarDeclaration"


    // $ANTLR start "entryRuleXVariableDeclaration"
    // InternalMycnl.g:10999:1: entryRuleXVariableDeclaration returns [EObject current=null] : iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF ;
    public final EObject entryRuleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXVariableDeclaration = null;


        try {
            // InternalMycnl.g:10999:61: (iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF )
            // InternalMycnl.g:11000:2: iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXVariableDeclaration=ruleXVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXVariableDeclaration"


    // $ANTLR start "ruleXVariableDeclaration"
    // InternalMycnl.g:11006:1: ruleXVariableDeclaration returns [EObject current=null] : ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_writeable_1_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        EObject lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_right_7_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:11012:2: ( ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? ) )
            // InternalMycnl.g:11013:2: ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? )
            {
            // InternalMycnl.g:11013:2: ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? )
            // InternalMycnl.g:11014:3: () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )?
            {
            // InternalMycnl.g:11014:3: ()
            // InternalMycnl.g:11015:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalMycnl.g:11021:3: ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' )
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==180) ) {
                alt83=1;
            }
            else if ( (LA83_0==181) ) {
                alt83=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 83, 0, input);

                throw nvae;
            }
            switch (alt83) {
                case 1 :
                    // InternalMycnl.g:11022:4: ( (lv_writeable_1_0= 'var' ) )
                    {
                    // InternalMycnl.g:11022:4: ( (lv_writeable_1_0= 'var' ) )
                    // InternalMycnl.g:11023:5: (lv_writeable_1_0= 'var' )
                    {
                    // InternalMycnl.g:11023:5: (lv_writeable_1_0= 'var' )
                    // InternalMycnl.g:11024:6: lv_writeable_1_0= 'var'
                    {
                    lv_writeable_1_0=(Token)match(input,180,FOLLOW_124); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						setWithLastConsumed(current, "writeable", true, "var");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:11037:4: otherlv_2= 'val'
                    {
                    otherlv_2=(Token)match(input,181,FOLLOW_124); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalMycnl.g:11042:3: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) )
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==RULE_ID) ) {
                int LA84_1 = input.LA(2);

                if ( (synpred29_InternalMycnl()) ) {
                    alt84=1;
                }
                else if ( (true) ) {
                    alt84=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA84_0==164) && (synpred29_InternalMycnl())) {
                alt84=1;
            }
            else if ( (LA84_0==147) && (synpred29_InternalMycnl())) {
                alt84=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }
            switch (alt84) {
                case 1 :
                    // InternalMycnl.g:11043:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    {
                    // InternalMycnl.g:11043:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    // InternalMycnl.g:11044:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    {
                    // InternalMycnl.g:11057:5: ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    // InternalMycnl.g:11058:6: ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) )
                    {
                    // InternalMycnl.g:11058:6: ( (lv_type_3_0= ruleJvmTypeReference ) )
                    // InternalMycnl.g:11059:7: (lv_type_3_0= ruleJvmTypeReference )
                    {
                    // InternalMycnl.g:11059:7: (lv_type_3_0= ruleJvmTypeReference )
                    // InternalMycnl.g:11060:8: lv_type_3_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0());
                      							
                    }
                    pushFollow(FOLLOW_172);
                    lv_type_3_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      								}
                      								set(
                      									current,
                      									"type",
                      									lv_type_3_0,
                      									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalMycnl.g:11077:6: ( (lv_name_4_0= ruleValidID ) )
                    // InternalMycnl.g:11078:7: (lv_name_4_0= ruleValidID )
                    {
                    // InternalMycnl.g:11078:7: (lv_name_4_0= ruleValidID )
                    // InternalMycnl.g:11079:8: lv_name_4_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0());
                      							
                    }
                    pushFollow(FOLLOW_173);
                    lv_name_4_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      								}
                      								set(
                      									current,
                      									"name",
                      									lv_name_4_0,
                      									"org.eclipse.xtext.xbase.Xtype.ValidID");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:11099:4: ( (lv_name_5_0= ruleValidID ) )
                    {
                    // InternalMycnl.g:11099:4: ( (lv_name_5_0= ruleValidID ) )
                    // InternalMycnl.g:11100:5: (lv_name_5_0= ruleValidID )
                    {
                    // InternalMycnl.g:11100:5: (lv_name_5_0= ruleValidID )
                    // InternalMycnl.g:11101:6: lv_name_5_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_173);
                    lv_name_5_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_5_0,
                      							"org.eclipse.xtext.xbase.Xtype.ValidID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMycnl.g:11119:3: (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==128) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalMycnl.g:11120:4: otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,128,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0());
                      			
                    }
                    // InternalMycnl.g:11124:4: ( (lv_right_7_0= ruleXExpression ) )
                    // InternalMycnl.g:11125:5: (lv_right_7_0= ruleXExpression )
                    {
                    // InternalMycnl.g:11125:5: (lv_right_7_0= ruleXExpression )
                    // InternalMycnl.g:11126:6: lv_right_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_right_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"right",
                      							lv_right_7_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXVariableDeclaration"


    // $ANTLR start "entryRuleJvmFormalParameter"
    // InternalMycnl.g:11148:1: entryRuleJvmFormalParameter returns [EObject current=null] : iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF ;
    public final EObject entryRuleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmFormalParameter = null;


        try {
            // InternalMycnl.g:11148:59: (iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF )
            // InternalMycnl.g:11149:2: iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmFormalParameter=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmFormalParameter"


    // $ANTLR start "ruleJvmFormalParameter"
    // InternalMycnl.g:11155:1: ruleJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:11161:2: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalMycnl.g:11162:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalMycnl.g:11162:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            // InternalMycnl.g:11163:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalMycnl.g:11163:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==RULE_ID) ) {
                int LA86_1 = input.LA(2);

                if ( (LA86_1==RULE_ID||LA86_1==134||LA86_1==160||LA86_1==169) ) {
                    alt86=1;
                }
            }
            else if ( (LA86_0==147||LA86_0==164) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalMycnl.g:11164:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    {
                    // InternalMycnl.g:11164:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    // InternalMycnl.g:11165:5: lv_parameterType_0_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_172);
                    lv_parameterType_0_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
                      					}
                      					set(
                      						current,
                      						"parameterType",
                      						lv_parameterType_0_0,
                      						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalMycnl.g:11182:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalMycnl.g:11183:4: (lv_name_1_0= ruleValidID )
            {
            // InternalMycnl.g:11183:4: (lv_name_1_0= ruleValidID )
            // InternalMycnl.g:11184:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmFormalParameter"


    // $ANTLR start "entryRuleFullJvmFormalParameter"
    // InternalMycnl.g:11205:1: entryRuleFullJvmFormalParameter returns [EObject current=null] : iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF ;
    public final EObject entryRuleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFullJvmFormalParameter = null;


        try {
            // InternalMycnl.g:11205:63: (iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF )
            // InternalMycnl.g:11206:2: iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFullJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFullJvmFormalParameter"


    // $ANTLR start "ruleFullJvmFormalParameter"
    // InternalMycnl.g:11212:1: ruleFullJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:11218:2: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalMycnl.g:11219:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalMycnl.g:11219:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            // InternalMycnl.g:11220:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalMycnl.g:11220:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )
            // InternalMycnl.g:11221:4: (lv_parameterType_0_0= ruleJvmTypeReference )
            {
            // InternalMycnl.g:11221:4: (lv_parameterType_0_0= ruleJvmTypeReference )
            // InternalMycnl.g:11222:5: lv_parameterType_0_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_172);
            lv_parameterType_0_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"parameterType",
              						lv_parameterType_0_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMycnl.g:11239:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalMycnl.g:11240:4: (lv_name_1_0= ruleValidID )
            {
            // InternalMycnl.g:11240:4: (lv_name_1_0= ruleValidID )
            // InternalMycnl.g:11241:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFullJvmFormalParameter"


    // $ANTLR start "entryRuleXFeatureCall"
    // InternalMycnl.g:11262:1: entryRuleXFeatureCall returns [EObject current=null] : iv_ruleXFeatureCall= ruleXFeatureCall EOF ;
    public final EObject entryRuleXFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFeatureCall = null;


        try {
            // InternalMycnl.g:11262:53: (iv_ruleXFeatureCall= ruleXFeatureCall EOF )
            // InternalMycnl.g:11263:2: iv_ruleXFeatureCall= ruleXFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFeatureCall=ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFeatureCall"


    // $ANTLR start "ruleXFeatureCall"
    // InternalMycnl.g:11269:1: ruleXFeatureCall returns [EObject current=null] : ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) ;
    public final EObject ruleXFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_explicitOperationCall_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_typeArguments_2_0 = null;

        EObject lv_typeArguments_4_0 = null;

        EObject lv_featureCallArguments_8_0 = null;

        EObject lv_featureCallArguments_9_0 = null;

        EObject lv_featureCallArguments_11_0 = null;

        EObject lv_featureCallArguments_13_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:11275:2: ( ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) )
            // InternalMycnl.g:11276:2: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            {
            // InternalMycnl.g:11276:2: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            // InternalMycnl.g:11277:3: () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            {
            // InternalMycnl.g:11277:3: ()
            // InternalMycnl.g:11278:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
              					current);
              			
            }

            }

            // InternalMycnl.g:11284:3: (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==134) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalMycnl.g:11285:4: otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>'
                    {
                    otherlv_1=(Token)match(input,134,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0());
                      			
                    }
                    // InternalMycnl.g:11289:4: ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalMycnl.g:11290:5: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalMycnl.g:11290:5: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalMycnl.g:11291:6: lv_typeArguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_137);
                    lv_typeArguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      						}
                      						add(
                      							current,
                      							"typeArguments",
                      							lv_typeArguments_2_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMycnl.g:11308:4: (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop87:
                    do {
                        int alt87=2;
                        int LA87_0 = input.LA(1);

                        if ( (LA87_0==163) ) {
                            alt87=1;
                        }


                        switch (alt87) {
                    	case 1 :
                    	    // InternalMycnl.g:11309:5: otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,163,FOLLOW_136); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalMycnl.g:11313:5: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalMycnl.g:11314:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalMycnl.g:11314:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalMycnl.g:11315:7: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_137);
                    	    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"typeArguments",
                    	      								lv_typeArguments_4_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop87;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,135,FOLLOW_135); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3());
                      			
                    }

                    }
                    break;

            }

            // InternalMycnl.g:11338:3: ( ( ruleIdOrSuper ) )
            // InternalMycnl.g:11339:4: ( ruleIdOrSuper )
            {
            // InternalMycnl.g:11339:4: ( ruleIdOrSuper )
            // InternalMycnl.g:11340:5: ruleIdOrSuper
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXFeatureCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_174);
            ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMycnl.g:11354:3: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?
            int alt91=2;
            alt91 = dfa91.predict(input);
            switch (alt91) {
                case 1 :
                    // InternalMycnl.g:11355:4: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')'
                    {
                    // InternalMycnl.g:11355:4: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) )
                    // InternalMycnl.g:11356:5: ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' )
                    {
                    // InternalMycnl.g:11360:5: (lv_explicitOperationCall_7_0= '(' )
                    // InternalMycnl.g:11361:6: lv_explicitOperationCall_7_0= '('
                    {
                    lv_explicitOperationCall_7_0=(Token)match(input,164,FOLLOW_139); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitOperationCall_7_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXFeatureCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitOperationCall", true, "(");
                      					
                    }

                    }


                    }

                    // InternalMycnl.g:11373:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?
                    int alt90=3;
                    alt90 = dfa90.predict(input);
                    switch (alt90) {
                        case 1 :
                            // InternalMycnl.g:11374:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            {
                            // InternalMycnl.g:11374:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            // InternalMycnl.g:11375:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure )
                            {
                            // InternalMycnl.g:11400:6: (lv_featureCallArguments_8_0= ruleXShortClosure )
                            // InternalMycnl.g:11401:7: lv_featureCallArguments_8_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_140);
                            lv_featureCallArguments_8_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              							}
                              							add(
                              								current,
                              								"featureCallArguments",
                              								lv_featureCallArguments_8_0,
                              								"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMycnl.g:11419:5: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            {
                            // InternalMycnl.g:11419:5: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            // InternalMycnl.g:11420:6: ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            {
                            // InternalMycnl.g:11420:6: ( (lv_featureCallArguments_9_0= ruleXExpression ) )
                            // InternalMycnl.g:11421:7: (lv_featureCallArguments_9_0= ruleXExpression )
                            {
                            // InternalMycnl.g:11421:7: (lv_featureCallArguments_9_0= ruleXExpression )
                            // InternalMycnl.g:11422:8: lv_featureCallArguments_9_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_141);
                            lv_featureCallArguments_9_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              								}
                              								add(
                              									current,
                              									"featureCallArguments",
                              									lv_featureCallArguments_9_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalMycnl.g:11439:6: (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            loop89:
                            do {
                                int alt89=2;
                                int LA89_0 = input.LA(1);

                                if ( (LA89_0==163) ) {
                                    alt89=1;
                                }


                                switch (alt89) {
                            	case 1 :
                            	    // InternalMycnl.g:11440:7: otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,163,FOLLOW_115); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0());
                            	      						
                            	    }
                            	    // InternalMycnl.g:11444:7: ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    // InternalMycnl.g:11445:8: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    {
                            	    // InternalMycnl.g:11445:8: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    // InternalMycnl.g:11446:9: lv_featureCallArguments_11_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_141);
                            	    lv_featureCallArguments_11_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"featureCallArguments",
                            	      										lv_featureCallArguments_11_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop89;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,165,FOLLOW_175); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2());
                      			
                    }

                    }
                    break;

            }

            // InternalMycnl.g:11471:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            int alt92=2;
            alt92 = dfa92.predict(input);
            switch (alt92) {
                case 1 :
                    // InternalMycnl.g:11472:4: ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure )
                    {
                    // InternalMycnl.g:11478:4: (lv_featureCallArguments_13_0= ruleXClosure )
                    // InternalMycnl.g:11479:5: lv_featureCallArguments_13_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_featureCallArguments_13_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      					}
                      					add(
                      						current,
                      						"featureCallArguments",
                      						lv_featureCallArguments_13_0,
                      						"org.eclipse.xtext.xbase.Xbase.XClosure");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFeatureCall"


    // $ANTLR start "entryRuleFeatureCallID"
    // InternalMycnl.g:11500:1: entryRuleFeatureCallID returns [String current=null] : iv_ruleFeatureCallID= ruleFeatureCallID EOF ;
    public final String entryRuleFeatureCallID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFeatureCallID = null;


        try {
            // InternalMycnl.g:11500:53: (iv_ruleFeatureCallID= ruleFeatureCallID EOF )
            // InternalMycnl.g:11501:2: iv_ruleFeatureCallID= ruleFeatureCallID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureCallIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureCallID=ruleFeatureCallID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureCallID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureCallID"


    // $ANTLR start "ruleFeatureCallID"
    // InternalMycnl.g:11507:1: ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) ;
    public final AntlrDatatypeRuleToken ruleFeatureCallID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:11513:2: ( (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) )
            // InternalMycnl.g:11514:2: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            {
            // InternalMycnl.g:11514:2: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            int alt93=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt93=1;
                }
                break;
            case 182:
                {
                alt93=2;
                }
                break;
            case 183:
                {
                alt93=3;
                }
                break;
            case 184:
                {
                alt93=4;
                }
                break;
            case 185:
                {
                alt93=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 93, 0, input);

                throw nvae;
            }

            switch (alt93) {
                case 1 :
                    // InternalMycnl.g:11515:3: this_ValidID_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ValidID_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ValidID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMycnl.g:11526:3: kw= 'extends'
                    {
                    kw=(Token)match(input,182,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMycnl.g:11532:3: kw= 'static'
                    {
                    kw=(Token)match(input,183,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMycnl.g:11538:3: kw= 'import'
                    {
                    kw=(Token)match(input,184,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getImportKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMycnl.g:11544:3: kw= 'extension'
                    {
                    kw=(Token)match(input,185,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureCallID"


    // $ANTLR start "entryRuleIdOrSuper"
    // InternalMycnl.g:11553:1: entryRuleIdOrSuper returns [String current=null] : iv_ruleIdOrSuper= ruleIdOrSuper EOF ;
    public final String entryRuleIdOrSuper() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdOrSuper = null;


        try {
            // InternalMycnl.g:11553:49: (iv_ruleIdOrSuper= ruleIdOrSuper EOF )
            // InternalMycnl.g:11554:2: iv_ruleIdOrSuper= ruleIdOrSuper EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdOrSuperRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdOrSuper=ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdOrSuper.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdOrSuper"


    // $ANTLR start "ruleIdOrSuper"
    // InternalMycnl.g:11560:1: ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) ;
    public final AntlrDatatypeRuleToken ruleIdOrSuper() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_FeatureCallID_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:11566:2: ( (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) )
            // InternalMycnl.g:11567:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            {
            // InternalMycnl.g:11567:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==RULE_ID||(LA94_0>=182 && LA94_0<=185)) ) {
                alt94=1;
            }
            else if ( (LA94_0==186) ) {
                alt94=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 94, 0, input);

                throw nvae;
            }
            switch (alt94) {
                case 1 :
                    // InternalMycnl.g:11568:3: this_FeatureCallID_0= ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureCallID_0=ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_FeatureCallID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMycnl.g:11579:3: kw= 'super'
                    {
                    kw=(Token)match(input,186,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdOrSuper"


    // $ANTLR start "entryRuleXConstructorCall"
    // InternalMycnl.g:11588:1: entryRuleXConstructorCall returns [EObject current=null] : iv_ruleXConstructorCall= ruleXConstructorCall EOF ;
    public final EObject entryRuleXConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXConstructorCall = null;


        try {
            // InternalMycnl.g:11588:57: (iv_ruleXConstructorCall= ruleXConstructorCall EOF )
            // InternalMycnl.g:11589:2: iv_ruleXConstructorCall= ruleXConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXConstructorCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXConstructorCall=ruleXConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXConstructorCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXConstructorCall"


    // $ANTLR start "ruleXConstructorCall"
    // InternalMycnl.g:11595:1: ruleXConstructorCall returns [EObject current=null] : ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) ;
    public final EObject ruleXConstructorCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_explicitConstructorCall_8_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_typeArguments_4_0 = null;

        EObject lv_typeArguments_6_0 = null;

        EObject lv_arguments_9_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;

        EObject lv_arguments_14_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:11601:2: ( ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) )
            // InternalMycnl.g:11602:2: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            {
            // InternalMycnl.g:11602:2: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            // InternalMycnl.g:11603:3: () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            {
            // InternalMycnl.g:11603:3: ()
            // InternalMycnl.g:11604:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,187,FOLLOW_172); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
              		
            }
            // InternalMycnl.g:11614:3: ( ( ruleQualifiedName ) )
            // InternalMycnl.g:11615:4: ( ruleQualifiedName )
            {
            // InternalMycnl.g:11615:4: ( ruleQualifiedName )
            // InternalMycnl.g:11616:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXConstructorCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_176);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMycnl.g:11630:3: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?
            int alt96=2;
            alt96 = dfa96.predict(input);
            switch (alt96) {
                case 1 :
                    // InternalMycnl.g:11631:4: ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>'
                    {
                    // InternalMycnl.g:11631:4: ( ( '<' )=>otherlv_3= '<' )
                    // InternalMycnl.g:11632:5: ( '<' )=>otherlv_3= '<'
                    {
                    otherlv_3=(Token)match(input,134,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
                      				
                    }

                    }

                    // InternalMycnl.g:11638:4: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    // InternalMycnl.g:11639:5: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalMycnl.g:11639:5: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    // InternalMycnl.g:11640:6: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_137);
                    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      						}
                      						add(
                      							current,
                      							"typeArguments",
                      							lv_typeArguments_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMycnl.g:11657:4: (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
                    loop95:
                    do {
                        int alt95=2;
                        int LA95_0 = input.LA(1);

                        if ( (LA95_0==163) ) {
                            alt95=1;
                        }


                        switch (alt95) {
                    	case 1 :
                    	    // InternalMycnl.g:11658:5: otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_5=(Token)match(input,163,FOLLOW_136); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalMycnl.g:11662:5: ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalMycnl.g:11663:6: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalMycnl.g:11663:6: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    // InternalMycnl.g:11664:7: lv_typeArguments_6_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_137);
                    	    lv_typeArguments_6_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"typeArguments",
                    	      								lv_typeArguments_6_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop95;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,135,FOLLOW_174); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
                      			
                    }

                    }
                    break;

            }

            // InternalMycnl.g:11687:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?
            int alt99=2;
            alt99 = dfa99.predict(input);
            switch (alt99) {
                case 1 :
                    // InternalMycnl.g:11688:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')'
                    {
                    // InternalMycnl.g:11688:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) )
                    // InternalMycnl.g:11689:5: ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' )
                    {
                    // InternalMycnl.g:11693:5: (lv_explicitConstructorCall_8_0= '(' )
                    // InternalMycnl.g:11694:6: lv_explicitConstructorCall_8_0= '('
                    {
                    lv_explicitConstructorCall_8_0=(Token)match(input,164,FOLLOW_139); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitConstructorCall_8_0, grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXConstructorCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitConstructorCall", true, "(");
                      					
                    }

                    }


                    }

                    // InternalMycnl.g:11706:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?
                    int alt98=3;
                    alt98 = dfa98.predict(input);
                    switch (alt98) {
                        case 1 :
                            // InternalMycnl.g:11707:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            {
                            // InternalMycnl.g:11707:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            // InternalMycnl.g:11708:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure )
                            {
                            // InternalMycnl.g:11733:6: (lv_arguments_9_0= ruleXShortClosure )
                            // InternalMycnl.g:11734:7: lv_arguments_9_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_140);
                            lv_arguments_9_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              							}
                              							add(
                              								current,
                              								"arguments",
                              								lv_arguments_9_0,
                              								"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMycnl.g:11752:5: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            {
                            // InternalMycnl.g:11752:5: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            // InternalMycnl.g:11753:6: ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            {
                            // InternalMycnl.g:11753:6: ( (lv_arguments_10_0= ruleXExpression ) )
                            // InternalMycnl.g:11754:7: (lv_arguments_10_0= ruleXExpression )
                            {
                            // InternalMycnl.g:11754:7: (lv_arguments_10_0= ruleXExpression )
                            // InternalMycnl.g:11755:8: lv_arguments_10_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_141);
                            lv_arguments_10_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              								}
                              								add(
                              									current,
                              									"arguments",
                              									lv_arguments_10_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalMycnl.g:11772:6: (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            loop97:
                            do {
                                int alt97=2;
                                int LA97_0 = input.LA(1);

                                if ( (LA97_0==163) ) {
                                    alt97=1;
                                }


                                switch (alt97) {
                            	case 1 :
                            	    // InternalMycnl.g:11773:7: otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) )
                            	    {
                            	    otherlv_11=(Token)match(input,163,FOLLOW_115); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_11, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
                            	      						
                            	    }
                            	    // InternalMycnl.g:11777:7: ( (lv_arguments_12_0= ruleXExpression ) )
                            	    // InternalMycnl.g:11778:8: (lv_arguments_12_0= ruleXExpression )
                            	    {
                            	    // InternalMycnl.g:11778:8: (lv_arguments_12_0= ruleXExpression )
                            	    // InternalMycnl.g:11779:9: lv_arguments_12_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_141);
                            	    lv_arguments_12_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arguments",
                            	      										lv_arguments_12_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop97;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,165,FOLLOW_175); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
                      			
                    }

                    }
                    break;

            }

            // InternalMycnl.g:11804:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            int alt100=2;
            alt100 = dfa100.predict(input);
            switch (alt100) {
                case 1 :
                    // InternalMycnl.g:11805:4: ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure )
                    {
                    // InternalMycnl.g:11811:4: (lv_arguments_14_0= ruleXClosure )
                    // InternalMycnl.g:11812:5: lv_arguments_14_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arguments_14_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      					}
                      					add(
                      						current,
                      						"arguments",
                      						lv_arguments_14_0,
                      						"org.eclipse.xtext.xbase.Xbase.XClosure");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXConstructorCall"


    // $ANTLR start "entryRuleXBooleanLiteral"
    // InternalMycnl.g:11833:1: entryRuleXBooleanLiteral returns [EObject current=null] : iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF ;
    public final EObject entryRuleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBooleanLiteral = null;


        try {
            // InternalMycnl.g:11833:56: (iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF )
            // InternalMycnl.g:11834:2: iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBooleanLiteral=ruleXBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBooleanLiteral"


    // $ANTLR start "ruleXBooleanLiteral"
    // InternalMycnl.g:11840:1: ruleXBooleanLiteral returns [EObject current=null] : ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) ;
    public final EObject ruleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isTrue_2_0=null;


        	enterRule();

        try {
            // InternalMycnl.g:11846:2: ( ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) )
            // InternalMycnl.g:11847:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            {
            // InternalMycnl.g:11847:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            // InternalMycnl.g:11848:3: () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            {
            // InternalMycnl.g:11848:3: ()
            // InternalMycnl.g:11849:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalMycnl.g:11855:3: (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==188) ) {
                alt101=1;
            }
            else if ( (LA101_0==189) ) {
                alt101=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 101, 0, input);

                throw nvae;
            }
            switch (alt101) {
                case 1 :
                    // InternalMycnl.g:11856:4: otherlv_1= 'false'
                    {
                    otherlv_1=(Token)match(input,188,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalMycnl.g:11861:4: ( (lv_isTrue_2_0= 'true' ) )
                    {
                    // InternalMycnl.g:11861:4: ( (lv_isTrue_2_0= 'true' ) )
                    // InternalMycnl.g:11862:5: (lv_isTrue_2_0= 'true' )
                    {
                    // InternalMycnl.g:11862:5: (lv_isTrue_2_0= 'true' )
                    // InternalMycnl.g:11863:6: lv_isTrue_2_0= 'true'
                    {
                    lv_isTrue_2_0=(Token)match(input,189,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXBooleanLiteralRule());
                      						}
                      						setWithLastConsumed(current, "isTrue", true, "true");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBooleanLiteral"


    // $ANTLR start "entryRuleXNullLiteral"
    // InternalMycnl.g:11880:1: entryRuleXNullLiteral returns [EObject current=null] : iv_ruleXNullLiteral= ruleXNullLiteral EOF ;
    public final EObject entryRuleXNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNullLiteral = null;


        try {
            // InternalMycnl.g:11880:53: (iv_ruleXNullLiteral= ruleXNullLiteral EOF )
            // InternalMycnl.g:11881:2: iv_ruleXNullLiteral= ruleXNullLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNullLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNullLiteral=ruleXNullLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNullLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNullLiteral"


    // $ANTLR start "ruleXNullLiteral"
    // InternalMycnl.g:11887:1: ruleXNullLiteral returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleXNullLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalMycnl.g:11893:2: ( ( () otherlv_1= 'null' ) )
            // InternalMycnl.g:11894:2: ( () otherlv_1= 'null' )
            {
            // InternalMycnl.g:11894:2: ( () otherlv_1= 'null' )
            // InternalMycnl.g:11895:3: () otherlv_1= 'null'
            {
            // InternalMycnl.g:11895:3: ()
            // InternalMycnl.g:11896:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,190,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNullLiteral"


    // $ANTLR start "entryRuleXNumberLiteral"
    // InternalMycnl.g:11910:1: entryRuleXNumberLiteral returns [EObject current=null] : iv_ruleXNumberLiteral= ruleXNumberLiteral EOF ;
    public final EObject entryRuleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNumberLiteral = null;


        try {
            // InternalMycnl.g:11910:55: (iv_ruleXNumberLiteral= ruleXNumberLiteral EOF )
            // InternalMycnl.g:11911:2: iv_ruleXNumberLiteral= ruleXNumberLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNumberLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNumberLiteral=ruleXNumberLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNumberLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNumberLiteral"


    // $ANTLR start "ruleXNumberLiteral"
    // InternalMycnl.g:11917:1: ruleXNumberLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= ruleNumber ) ) ) ;
    public final EObject ruleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:11923:2: ( ( () ( (lv_value_1_0= ruleNumber ) ) ) )
            // InternalMycnl.g:11924:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            {
            // InternalMycnl.g:11924:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            // InternalMycnl.g:11925:3: () ( (lv_value_1_0= ruleNumber ) )
            {
            // InternalMycnl.g:11925:3: ()
            // InternalMycnl.g:11926:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalMycnl.g:11932:3: ( (lv_value_1_0= ruleNumber ) )
            // InternalMycnl.g:11933:4: (lv_value_1_0= ruleNumber )
            {
            // InternalMycnl.g:11933:4: (lv_value_1_0= ruleNumber )
            // InternalMycnl.g:11934:5: lv_value_1_0= ruleNumber
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.xtext.xbase.Xbase.Number");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNumberLiteral"


    // $ANTLR start "entryRuleXStringLiteral"
    // InternalMycnl.g:11955:1: entryRuleXStringLiteral returns [EObject current=null] : iv_ruleXStringLiteral= ruleXStringLiteral EOF ;
    public final EObject entryRuleXStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXStringLiteral = null;


        try {
            // InternalMycnl.g:11955:55: (iv_ruleXStringLiteral= ruleXStringLiteral EOF )
            // InternalMycnl.g:11956:2: iv_ruleXStringLiteral= ruleXStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXStringLiteral=ruleXStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXStringLiteral"


    // $ANTLR start "ruleXStringLiteral"
    // InternalMycnl.g:11962:1: ruleXStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleXStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;


        	enterRule();

        try {
            // InternalMycnl.g:11968:2: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
            // InternalMycnl.g:11969:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // InternalMycnl.g:11969:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            // InternalMycnl.g:11970:3: () ( (lv_value_1_0= RULE_STRING ) )
            {
            // InternalMycnl.g:11970:3: ()
            // InternalMycnl.g:11971:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalMycnl.g:11977:3: ( (lv_value_1_0= RULE_STRING ) )
            // InternalMycnl.g:11978:4: (lv_value_1_0= RULE_STRING )
            {
            // InternalMycnl.g:11978:4: (lv_value_1_0= RULE_STRING )
            // InternalMycnl.g:11979:5: lv_value_1_0= RULE_STRING
            {
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXStringLiteralRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXStringLiteral"


    // $ANTLR start "entryRuleXTypeLiteral"
    // InternalMycnl.g:11999:1: entryRuleXTypeLiteral returns [EObject current=null] : iv_ruleXTypeLiteral= ruleXTypeLiteral EOF ;
    public final EObject entryRuleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTypeLiteral = null;


        try {
            // InternalMycnl.g:11999:53: (iv_ruleXTypeLiteral= ruleXTypeLiteral EOF )
            // InternalMycnl.g:12000:2: iv_ruleXTypeLiteral= ruleXTypeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTypeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTypeLiteral=ruleXTypeLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTypeLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTypeLiteral"


    // $ANTLR start "ruleXTypeLiteral"
    // InternalMycnl.g:12006:1: ruleXTypeLiteral returns [EObject current=null] : ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) ;
    public final EObject ruleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_arrayDimensions_4_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:12012:2: ( ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) )
            // InternalMycnl.g:12013:2: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            {
            // InternalMycnl.g:12013:2: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            // InternalMycnl.g:12014:3: () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')'
            {
            // InternalMycnl.g:12014:3: ()
            // InternalMycnl.g:12015:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,191,FOLLOW_155); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,164,FOLLOW_172); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalMycnl.g:12029:3: ( ( ruleQualifiedName ) )
            // InternalMycnl.g:12030:4: ( ruleQualifiedName )
            {
            // InternalMycnl.g:12030:4: ( ruleQualifiedName )
            // InternalMycnl.g:12031:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXTypeLiteralRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0());
              				
            }
            pushFollow(FOLLOW_177);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMycnl.g:12045:3: ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )*
            loop102:
            do {
                int alt102=2;
                int LA102_0 = input.LA(1);

                if ( (LA102_0==169) ) {
                    alt102=1;
                }


                switch (alt102) {
            	case 1 :
            	    // InternalMycnl.g:12046:4: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    {
            	    // InternalMycnl.g:12046:4: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    // InternalMycnl.g:12047:5: lv_arrayDimensions_4_0= ruleArrayBrackets
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_177);
            	    lv_arrayDimensions_4_0=ruleArrayBrackets();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXTypeLiteralRule());
            	      					}
            	      					add(
            	      						current,
            	      						"arrayDimensions",
            	      						lv_arrayDimensions_4_0,
            	      						"org.eclipse.xtext.xbase.Xtype.ArrayBrackets");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);

            otherlv_5=(Token)match(input,165,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTypeLiteral"


    // $ANTLR start "entryRuleXThrowExpression"
    // InternalMycnl.g:12072:1: entryRuleXThrowExpression returns [EObject current=null] : iv_ruleXThrowExpression= ruleXThrowExpression EOF ;
    public final EObject entryRuleXThrowExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXThrowExpression = null;


        try {
            // InternalMycnl.g:12072:57: (iv_ruleXThrowExpression= ruleXThrowExpression EOF )
            // InternalMycnl.g:12073:2: iv_ruleXThrowExpression= ruleXThrowExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXThrowExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXThrowExpression=ruleXThrowExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXThrowExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXThrowExpression"


    // $ANTLR start "ruleXThrowExpression"
    // InternalMycnl.g:12079:1: ruleXThrowExpression returns [EObject current=null] : ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) ;
    public final EObject ruleXThrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:12085:2: ( ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) )
            // InternalMycnl.g:12086:2: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            {
            // InternalMycnl.g:12086:2: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            // InternalMycnl.g:12087:3: () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) )
            {
            // InternalMycnl.g:12087:3: ()
            // InternalMycnl.g:12088:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,192,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
              		
            }
            // InternalMycnl.g:12098:3: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalMycnl.g:12099:4: (lv_expression_2_0= ruleXExpression )
            {
            // InternalMycnl.g:12099:4: (lv_expression_2_0= ruleXExpression )
            // InternalMycnl.g:12100:5: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXThrowExpression"


    // $ANTLR start "entryRuleXReturnExpression"
    // InternalMycnl.g:12121:1: entryRuleXReturnExpression returns [EObject current=null] : iv_ruleXReturnExpression= ruleXReturnExpression EOF ;
    public final EObject entryRuleXReturnExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXReturnExpression = null;


        try {
            // InternalMycnl.g:12121:58: (iv_ruleXReturnExpression= ruleXReturnExpression EOF )
            // InternalMycnl.g:12122:2: iv_ruleXReturnExpression= ruleXReturnExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXReturnExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXReturnExpression=ruleXReturnExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXReturnExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXReturnExpression"


    // $ANTLR start "ruleXReturnExpression"
    // InternalMycnl.g:12128:1: ruleXReturnExpression returns [EObject current=null] : ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) ;
    public final EObject ruleXReturnExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:12134:2: ( ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) )
            // InternalMycnl.g:12135:2: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            {
            // InternalMycnl.g:12135:2: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            // InternalMycnl.g:12136:3: () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            {
            // InternalMycnl.g:12136:3: ()
            // InternalMycnl.g:12137:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,193,FOLLOW_178); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
              		
            }
            // InternalMycnl.g:12147:3: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            int alt103=2;
            alt103 = dfa103.predict(input);
            switch (alt103) {
                case 1 :
                    // InternalMycnl.g:12148:4: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression )
                    {
                    // InternalMycnl.g:12149:4: (lv_expression_2_0= ruleXExpression )
                    // InternalMycnl.g:12150:5: lv_expression_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_2_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXReturnExpression"


    // $ANTLR start "entryRuleXTryCatchFinallyExpression"
    // InternalMycnl.g:12171:1: entryRuleXTryCatchFinallyExpression returns [EObject current=null] : iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF ;
    public final EObject entryRuleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTryCatchFinallyExpression = null;


        try {
            // InternalMycnl.g:12171:67: (iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF )
            // InternalMycnl.g:12172:2: iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTryCatchFinallyExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTryCatchFinallyExpression"


    // $ANTLR start "ruleXTryCatchFinallyExpression"
    // InternalMycnl.g:12178:1: ruleXTryCatchFinallyExpression returns [EObject current=null] : ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) ;
    public final EObject ruleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_expression_2_0 = null;

        EObject lv_catchClauses_3_0 = null;

        EObject lv_finallyExpression_5_0 = null;

        EObject lv_finallyExpression_7_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:12184:2: ( ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) )
            // InternalMycnl.g:12185:2: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            {
            // InternalMycnl.g:12185:2: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            // InternalMycnl.g:12186:3: () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            {
            // InternalMycnl.g:12186:3: ()
            // InternalMycnl.g:12187:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,194,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
              		
            }
            // InternalMycnl.g:12197:3: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalMycnl.g:12198:4: (lv_expression_2_0= ruleXExpression )
            {
            // InternalMycnl.g:12198:4: (lv_expression_2_0= ruleXExpression )
            // InternalMycnl.g:12199:5: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_179);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMycnl.g:12216:3: ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==197) ) {
                alt106=1;
            }
            else if ( (LA106_0==195) ) {
                alt106=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 106, 0, input);

                throw nvae;
            }
            switch (alt106) {
                case 1 :
                    // InternalMycnl.g:12217:4: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    {
                    // InternalMycnl.g:12217:4: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    // InternalMycnl.g:12218:5: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    {
                    // InternalMycnl.g:12218:5: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+
                    int cnt104=0;
                    loop104:
                    do {
                        int alt104=2;
                        int LA104_0 = input.LA(1);

                        if ( (LA104_0==197) ) {
                            int LA104_2 = input.LA(2);

                            if ( (synpred38_InternalMycnl()) ) {
                                alt104=1;
                            }


                        }


                        switch (alt104) {
                    	case 1 :
                    	    // InternalMycnl.g:12219:6: ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause )
                    	    {
                    	    // InternalMycnl.g:12220:6: (lv_catchClauses_3_0= ruleXCatchClause )
                    	    // InternalMycnl.g:12221:7: lv_catchClauses_3_0= ruleXCatchClause
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_180);
                    	    lv_catchClauses_3_0=ruleXCatchClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"catchClauses",
                    	      								lv_catchClauses_3_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XCatchClause");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt104 >= 1 ) break loop104;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(104, input);
                                throw eee;
                        }
                        cnt104++;
                    } while (true);

                    // InternalMycnl.g:12238:5: ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    int alt105=2;
                    int LA105_0 = input.LA(1);

                    if ( (LA105_0==195) ) {
                        int LA105_1 = input.LA(2);

                        if ( (synpred39_InternalMycnl()) ) {
                            alt105=1;
                        }
                    }
                    switch (alt105) {
                        case 1 :
                            // InternalMycnl.g:12239:6: ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            {
                            // InternalMycnl.g:12239:6: ( ( 'finally' )=>otherlv_4= 'finally' )
                            // InternalMycnl.g:12240:7: ( 'finally' )=>otherlv_4= 'finally'
                            {
                            otherlv_4=(Token)match(input,195,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
                              						
                            }

                            }

                            // InternalMycnl.g:12246:6: ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            // InternalMycnl.g:12247:7: (lv_finallyExpression_5_0= ruleXExpression )
                            {
                            // InternalMycnl.g:12247:7: (lv_finallyExpression_5_0= ruleXExpression )
                            // InternalMycnl.g:12248:8: lv_finallyExpression_5_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_finallyExpression_5_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                              								}
                              								set(
                              									current,
                              									"finallyExpression",
                              									lv_finallyExpression_5_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:12268:4: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    {
                    // InternalMycnl.g:12268:4: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    // InternalMycnl.g:12269:5: otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,195,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
                      				
                    }
                    // InternalMycnl.g:12273:5: ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    // InternalMycnl.g:12274:6: (lv_finallyExpression_7_0= ruleXExpression )
                    {
                    // InternalMycnl.g:12274:6: (lv_finallyExpression_7_0= ruleXExpression )
                    // InternalMycnl.g:12275:7: lv_finallyExpression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_finallyExpression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                      							}
                      							set(
                      								current,
                      								"finallyExpression",
                      								lv_finallyExpression_7_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTryCatchFinallyExpression"


    // $ANTLR start "entryRuleXSynchronizedExpression"
    // InternalMycnl.g:12298:1: entryRuleXSynchronizedExpression returns [EObject current=null] : iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF ;
    public final EObject entryRuleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSynchronizedExpression = null;


        try {
            // InternalMycnl.g:12298:64: (iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF )
            // InternalMycnl.g:12299:2: iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSynchronizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSynchronizedExpression=ruleXSynchronizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSynchronizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSynchronizedExpression"


    // $ANTLR start "ruleXSynchronizedExpression"
    // InternalMycnl.g:12305:1: ruleXSynchronizedExpression returns [EObject current=null] : ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_param_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:12311:2: ( ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalMycnl.g:12312:2: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalMycnl.g:12312:2: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalMycnl.g:12313:3: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalMycnl.g:12313:3: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) )
            // InternalMycnl.g:12314:4: ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            {
            // InternalMycnl.g:12321:4: ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            // InternalMycnl.g:12322:5: () otherlv_1= 'synchronized' otherlv_2= '('
            {
            // InternalMycnl.g:12322:5: ()
            // InternalMycnl.g:12323:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXSynchronizedExpressionAccess().getXSynchronizedExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,196,FOLLOW_155); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,164,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }

            }


            }

            // InternalMycnl.g:12339:3: ( (lv_param_3_0= ruleXExpression ) )
            // InternalMycnl.g:12340:4: (lv_param_3_0= ruleXExpression )
            {
            // InternalMycnl.g:12340:4: (lv_param_3_0= ruleXExpression )
            // InternalMycnl.g:12341:5: lv_param_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getParamXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_140);
            lv_param_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"param",
              						lv_param_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,165,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXSynchronizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalMycnl.g:12362:3: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalMycnl.g:12363:4: (lv_expression_5_0= ruleXExpression )
            {
            // InternalMycnl.g:12363:4: (lv_expression_5_0= ruleXExpression )
            // InternalMycnl.g:12364:5: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getExpressionXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSynchronizedExpression"


    // $ANTLR start "entryRuleXCatchClause"
    // InternalMycnl.g:12385:1: entryRuleXCatchClause returns [EObject current=null] : iv_ruleXCatchClause= ruleXCatchClause EOF ;
    public final EObject entryRuleXCatchClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCatchClause = null;


        try {
            // InternalMycnl.g:12385:53: (iv_ruleXCatchClause= ruleXCatchClause EOF )
            // InternalMycnl.g:12386:2: iv_ruleXCatchClause= ruleXCatchClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCatchClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCatchClause=ruleXCatchClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCatchClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCatchClause"


    // $ANTLR start "ruleXCatchClause"
    // InternalMycnl.g:12392:1: ruleXCatchClause returns [EObject current=null] : ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) ;
    public final EObject ruleXCatchClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_declaredParam_2_0 = null;

        EObject lv_expression_4_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:12398:2: ( ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) )
            // InternalMycnl.g:12399:2: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            {
            // InternalMycnl.g:12399:2: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            // InternalMycnl.g:12400:3: ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) )
            {
            // InternalMycnl.g:12400:3: ( ( 'catch' )=>otherlv_0= 'catch' )
            // InternalMycnl.g:12401:4: ( 'catch' )=>otherlv_0= 'catch'
            {
            otherlv_0=(Token)match(input,197,FOLLOW_155); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
              			
            }

            }

            otherlv_1=(Token)match(input,164,FOLLOW_124); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalMycnl.g:12411:3: ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) )
            // InternalMycnl.g:12412:4: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            {
            // InternalMycnl.g:12412:4: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            // InternalMycnl.g:12413:5: lv_declaredParam_2_0= ruleFullJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_140);
            lv_declaredParam_2_0=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"declaredParam",
              						lv_declaredParam_2_0,
              						"org.eclipse.xtext.xbase.Xbase.FullJvmFormalParameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,165,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
              		
            }
            // InternalMycnl.g:12434:3: ( (lv_expression_4_0= ruleXExpression ) )
            // InternalMycnl.g:12435:4: (lv_expression_4_0= ruleXExpression )
            {
            // InternalMycnl.g:12435:4: (lv_expression_4_0= ruleXExpression )
            // InternalMycnl.g:12436:5: lv_expression_4_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_4_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_4_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCatchClause"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalMycnl.g:12457:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // InternalMycnl.g:12457:53: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // InternalMycnl.g:12458:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalMycnl.g:12464:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;

        AntlrDatatypeRuleToken this_ValidID_2 = null;



        	enterRule();

        try {
            // InternalMycnl.g:12470:2: ( (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) )
            // InternalMycnl.g:12471:2: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            {
            // InternalMycnl.g:12471:2: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            // InternalMycnl.g:12472:3: this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_181);
            this_ValidID_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ValidID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMycnl.g:12482:3: ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( (LA107_0==160) ) {
                    int LA107_2 = input.LA(2);

                    if ( (LA107_2==RULE_ID) ) {
                        int LA107_3 = input.LA(3);

                        if ( (synpred42_InternalMycnl()) ) {
                            alt107=1;
                        }


                    }


                }


                switch (alt107) {
            	case 1 :
            	    // InternalMycnl.g:12483:4: ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID
            	    {
            	    // InternalMycnl.g:12483:4: ( ( '.' )=>kw= '.' )
            	    // InternalMycnl.g:12484:5: ( '.' )=>kw= '.'
            	    {
            	    kw=(Token)match(input,160,FOLLOW_172); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					current.merge(kw);
            	      					newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_181);
            	    this_ValidID_2=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ValidID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleNumber"
    // InternalMycnl.g:12506:1: entryRuleNumber returns [String current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final String entryRuleNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumber = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalMycnl.g:12508:2: (iv_ruleNumber= ruleNumber EOF )
            // InternalMycnl.g:12509:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalMycnl.g:12518:1: ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) ;
    public final AntlrDatatypeRuleToken ruleNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_HEX_0=null;
        Token this_INT_1=null;
        Token this_DECIMAL_2=null;
        Token kw=null;
        Token this_INT_4=null;
        Token this_DECIMAL_5=null;


        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalMycnl.g:12525:2: ( (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) )
            // InternalMycnl.g:12526:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            {
            // InternalMycnl.g:12526:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==RULE_HEX) ) {
                alt111=1;
            }
            else if ( (LA111_0==RULE_INT||LA111_0==RULE_DECIMAL) ) {
                alt111=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 111, 0, input);

                throw nvae;
            }
            switch (alt111) {
                case 1 :
                    // InternalMycnl.g:12527:3: this_HEX_0= RULE_HEX
                    {
                    this_HEX_0=(Token)match(input,RULE_HEX,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_HEX_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMycnl.g:12535:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    {
                    // InternalMycnl.g:12535:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    // InternalMycnl.g:12536:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    {
                    // InternalMycnl.g:12536:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL )
                    int alt108=2;
                    int LA108_0 = input.LA(1);

                    if ( (LA108_0==RULE_INT) ) {
                        alt108=1;
                    }
                    else if ( (LA108_0==RULE_DECIMAL) ) {
                        alt108=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 108, 0, input);

                        throw nvae;
                    }
                    switch (alt108) {
                        case 1 :
                            // InternalMycnl.g:12537:5: this_INT_1= RULE_INT
                            {
                            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_181); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_1);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalMycnl.g:12545:5: this_DECIMAL_2= RULE_DECIMAL
                            {
                            this_DECIMAL_2=(Token)match(input,RULE_DECIMAL,FOLLOW_181); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DECIMAL_2);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalMycnl.g:12553:4: (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    int alt110=2;
                    int LA110_0 = input.LA(1);

                    if ( (LA110_0==160) ) {
                        int LA110_1 = input.LA(2);

                        if ( (LA110_1==RULE_INT||LA110_1==RULE_DECIMAL) ) {
                            alt110=1;
                        }
                    }
                    switch (alt110) {
                        case 1 :
                            // InternalMycnl.g:12554:5: kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            {
                            kw=(Token)match(input,160,FOLLOW_182); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0());
                              				
                            }
                            // InternalMycnl.g:12559:5: (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            int alt109=2;
                            int LA109_0 = input.LA(1);

                            if ( (LA109_0==RULE_INT) ) {
                                alt109=1;
                            }
                            else if ( (LA109_0==RULE_DECIMAL) ) {
                                alt109=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 109, 0, input);

                                throw nvae;
                            }
                            switch (alt109) {
                                case 1 :
                                    // InternalMycnl.g:12560:6: this_INT_4= RULE_INT
                                    {
                                    this_INT_4=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_INT_4);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0());
                                      					
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalMycnl.g:12568:6: this_DECIMAL_5= RULE_DECIMAL
                                    {
                                    this_DECIMAL_5=(Token)match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_DECIMAL_5);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1());
                                      					
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleJvmTypeReference"
    // InternalMycnl.g:12585:1: entryRuleJvmTypeReference returns [EObject current=null] : iv_ruleJvmTypeReference= ruleJvmTypeReference EOF ;
    public final EObject entryRuleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmTypeReference = null;


        try {
            // InternalMycnl.g:12585:57: (iv_ruleJvmTypeReference= ruleJvmTypeReference EOF )
            // InternalMycnl.g:12586:2: iv_ruleJvmTypeReference= ruleJvmTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmTypeReference=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmTypeReference"


    // $ANTLR start "ruleJvmTypeReference"
    // InternalMycnl.g:12592:1: ruleJvmTypeReference returns [EObject current=null] : ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) ;
    public final EObject ruleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmParameterizedTypeReference_0 = null;

        EObject this_XFunctionTypeRef_3 = null;



        	enterRule();

        try {
            // InternalMycnl.g:12598:2: ( ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) )
            // InternalMycnl.g:12599:2: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            {
            // InternalMycnl.g:12599:2: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==RULE_ID) ) {
                alt113=1;
            }
            else if ( (LA113_0==147||LA113_0==164) ) {
                alt113=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 113, 0, input);

                throw nvae;
            }
            switch (alt113) {
                case 1 :
                    // InternalMycnl.g:12600:3: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    {
                    // InternalMycnl.g:12600:3: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    // InternalMycnl.g:12601:4: this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_175);
                    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_JvmParameterizedTypeReference_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalMycnl.g:12609:4: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    loop112:
                    do {
                        int alt112=2;
                        int LA112_0 = input.LA(1);

                        if ( (LA112_0==169) ) {
                            int LA112_2 = input.LA(2);

                            if ( (LA112_2==170) ) {
                                int LA112_3 = input.LA(3);

                                if ( (synpred43_InternalMycnl()) ) {
                                    alt112=1;
                                }


                            }


                        }


                        switch (alt112) {
                    	case 1 :
                    	    // InternalMycnl.g:12610:5: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
                    	    {
                    	    // InternalMycnl.g:12616:5: ( () ruleArrayBrackets )
                    	    // InternalMycnl.g:12617:6: () ruleArrayBrackets
                    	    {
                    	    // InternalMycnl.g:12617:6: ()
                    	    // InternalMycnl.g:12618:7: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							current = forceCreateModelElementAndSet(
                    	      								grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
                    	      								current);
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_175);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop112;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:12635:3: this_XFunctionTypeRef_3= ruleXFunctionTypeRef
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XFunctionTypeRef_3=ruleXFunctionTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XFunctionTypeRef_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmTypeReference"


    // $ANTLR start "entryRuleArrayBrackets"
    // InternalMycnl.g:12647:1: entryRuleArrayBrackets returns [String current=null] : iv_ruleArrayBrackets= ruleArrayBrackets EOF ;
    public final String entryRuleArrayBrackets() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleArrayBrackets = null;


        try {
            // InternalMycnl.g:12647:53: (iv_ruleArrayBrackets= ruleArrayBrackets EOF )
            // InternalMycnl.g:12648:2: iv_ruleArrayBrackets= ruleArrayBrackets EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayBracketsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayBrackets=ruleArrayBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayBrackets.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayBrackets"


    // $ANTLR start "ruleArrayBrackets"
    // InternalMycnl.g:12654:1: ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '[' kw= ']' ) ;
    public final AntlrDatatypeRuleToken ruleArrayBrackets() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMycnl.g:12660:2: ( (kw= '[' kw= ']' ) )
            // InternalMycnl.g:12661:2: (kw= '[' kw= ']' )
            {
            // InternalMycnl.g:12661:2: (kw= '[' kw= ']' )
            // InternalMycnl.g:12662:3: kw= '[' kw= ']'
            {
            kw=(Token)match(input,169,FOLLOW_152); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0());
              		
            }
            kw=(Token)match(input,170,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayBrackets"


    // $ANTLR start "entryRuleXFunctionTypeRef"
    // InternalMycnl.g:12676:1: entryRuleXFunctionTypeRef returns [EObject current=null] : iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF ;
    public final EObject entryRuleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFunctionTypeRef = null;


        try {
            // InternalMycnl.g:12676:57: (iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF )
            // InternalMycnl.g:12677:2: iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFunctionTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFunctionTypeRef"


    // $ANTLR start "ruleXFunctionTypeRef"
    // InternalMycnl.g:12683:1: ruleXFunctionTypeRef returns [EObject current=null] : ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_paramTypes_1_0 = null;

        EObject lv_paramTypes_3_0 = null;

        EObject lv_returnType_6_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:12689:2: ( ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) )
            // InternalMycnl.g:12690:2: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            {
            // InternalMycnl.g:12690:2: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            // InternalMycnl.g:12691:3: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            {
            // InternalMycnl.g:12691:3: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==164) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalMycnl.g:12692:4: otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')'
                    {
                    otherlv_0=(Token)match(input,164,FOLLOW_183); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    // InternalMycnl.g:12696:4: ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )?
                    int alt115=2;
                    int LA115_0 = input.LA(1);

                    if ( (LA115_0==RULE_ID||LA115_0==147||LA115_0==164) ) {
                        alt115=1;
                    }
                    switch (alt115) {
                        case 1 :
                            // InternalMycnl.g:12697:5: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            {
                            // InternalMycnl.g:12697:5: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) )
                            // InternalMycnl.g:12698:6: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            {
                            // InternalMycnl.g:12698:6: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            // InternalMycnl.g:12699:7: lv_paramTypes_1_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_141);
                            lv_paramTypes_1_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                              							}
                              							add(
                              								current,
                              								"paramTypes",
                              								lv_paramTypes_1_0,
                              								"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalMycnl.g:12716:5: (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            loop114:
                            do {
                                int alt114=2;
                                int LA114_0 = input.LA(1);

                                if ( (LA114_0==163) ) {
                                    alt114=1;
                                }


                                switch (alt114) {
                            	case 1 :
                            	    // InternalMycnl.g:12717:6: otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    {
                            	    otherlv_2=(Token)match(input,163,FOLLOW_124); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
                            	      					
                            	    }
                            	    // InternalMycnl.g:12721:6: ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    // InternalMycnl.g:12722:7: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    {
                            	    // InternalMycnl.g:12722:7: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    // InternalMycnl.g:12723:8: lv_paramTypes_3_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_141);
                            	    lv_paramTypes_3_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"paramTypes",
                            	      									lv_paramTypes_3_0,
                            	      									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop114;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,165,FOLLOW_184); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }
                    break;

            }

            otherlv_5=(Token)match(input,147,FOLLOW_124); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
              		
            }
            // InternalMycnl.g:12751:3: ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            // InternalMycnl.g:12752:4: (lv_returnType_6_0= ruleJvmTypeReference )
            {
            // InternalMycnl.g:12752:4: (lv_returnType_6_0= ruleJvmTypeReference )
            // InternalMycnl.g:12753:5: lv_returnType_6_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_returnType_6_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
              					}
              					set(
              						current,
              						"returnType",
              						lv_returnType_6_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFunctionTypeRef"


    // $ANTLR start "entryRuleJvmParameterizedTypeReference"
    // InternalMycnl.g:12774:1: entryRuleJvmParameterizedTypeReference returns [EObject current=null] : iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF ;
    public final EObject entryRuleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmParameterizedTypeReference = null;


        try {
            // InternalMycnl.g:12774:70: (iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF )
            // InternalMycnl.g:12775:2: iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmParameterizedTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmParameterizedTypeReference"


    // $ANTLR start "ruleJvmParameterizedTypeReference"
    // InternalMycnl.g:12781:1: ruleJvmParameterizedTypeReference returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) ;
    public final EObject ruleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_2_0 = null;

        EObject lv_arguments_4_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:12787:2: ( ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) )
            // InternalMycnl.g:12788:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            {
            // InternalMycnl.g:12788:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            // InternalMycnl.g:12789:3: ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            {
            // InternalMycnl.g:12789:3: ( ( ruleQualifiedName ) )
            // InternalMycnl.g:12790:4: ( ruleQualifiedName )
            {
            // InternalMycnl.g:12790:4: ( ruleQualifiedName )
            // InternalMycnl.g:12791:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_185);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMycnl.g:12805:3: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            int alt121=2;
            alt121 = dfa121.predict(input);
            switch (alt121) {
                case 1 :
                    // InternalMycnl.g:12806:4: ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    {
                    // InternalMycnl.g:12806:4: ( ( '<' )=>otherlv_1= '<' )
                    // InternalMycnl.g:12807:5: ( '<' )=>otherlv_1= '<'
                    {
                    otherlv_1=(Token)match(input,134,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
                      				
                    }

                    }

                    // InternalMycnl.g:12813:4: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalMycnl.g:12814:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalMycnl.g:12814:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalMycnl.g:12815:6: lv_arguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_137);
                    lv_arguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                      						}
                      						add(
                      							current,
                      							"arguments",
                      							lv_arguments_2_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMycnl.g:12832:4: (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop117:
                    do {
                        int alt117=2;
                        int LA117_0 = input.LA(1);

                        if ( (LA117_0==163) ) {
                            alt117=1;
                        }


                        switch (alt117) {
                    	case 1 :
                    	    // InternalMycnl.g:12833:5: otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,163,FOLLOW_136); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalMycnl.g:12837:5: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalMycnl.g:12838:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalMycnl.g:12838:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalMycnl.g:12839:7: lv_arguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_137);
                    	    lv_arguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"arguments",
                    	      								lv_arguments_4_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop117;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,135,FOLLOW_181); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
                      			
                    }
                    // InternalMycnl.g:12861:4: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    loop120:
                    do {
                        int alt120=2;
                        int LA120_0 = input.LA(1);

                        if ( (LA120_0==160) ) {
                            int LA120_2 = input.LA(2);

                            if ( (LA120_2==RULE_ID) ) {
                                int LA120_3 = input.LA(3);

                                if ( (synpred45_InternalMycnl()) ) {
                                    alt120=1;
                                }


                            }


                        }


                        switch (alt120) {
                    	case 1 :
                    	    // InternalMycnl.g:12862:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    {
                    	    // InternalMycnl.g:12862:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) )
                    	    // InternalMycnl.g:12863:6: ( ( () '.' ) )=> ( () otherlv_7= '.' )
                    	    {
                    	    // InternalMycnl.g:12869:6: ( () otherlv_7= '.' )
                    	    // InternalMycnl.g:12870:7: () otherlv_7= '.'
                    	    {
                    	    // InternalMycnl.g:12870:7: ()
                    	    // InternalMycnl.g:12871:8: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								current = forceCreateModelElementAndSet(
                    	      									grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0(),
                    	      									current);
                    	      							
                    	    }

                    	    }

                    	    otherlv_7=(Token)match(input,160,FOLLOW_172); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_7, grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1());
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalMycnl.g:12883:5: ( ( ruleValidID ) )
                    	    // InternalMycnl.g:12884:6: ( ruleValidID )
                    	    {
                    	    // InternalMycnl.g:12884:6: ( ruleValidID )
                    	    // InternalMycnl.g:12885:7: ruleValidID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_186);
                    	    ruleValidID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalMycnl.g:12899:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    int alt119=2;
                    	    alt119 = dfa119.predict(input);
                    	    switch (alt119) {
                    	        case 1 :
                    	            // InternalMycnl.g:12900:6: ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>'
                    	            {
                    	            // InternalMycnl.g:12900:6: ( ( '<' )=>otherlv_9= '<' )
                    	            // InternalMycnl.g:12901:7: ( '<' )=>otherlv_9= '<'
                    	            {
                    	            otherlv_9=(Token)match(input,134,FOLLOW_136); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							newLeafNode(otherlv_9, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0());
                    	              						
                    	            }

                    	            }

                    	            // InternalMycnl.g:12907:6: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
                    	            // InternalMycnl.g:12908:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            {
                    	            // InternalMycnl.g:12908:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            // InternalMycnl.g:12909:8: lv_arguments_10_0= ruleJvmArgumentTypeReference
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_137);
                    	            lv_arguments_10_0=ruleJvmArgumentTypeReference();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"arguments",
                    	              									lv_arguments_10_0,
                    	              									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }


                    	            }

                    	            // InternalMycnl.g:12926:6: (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
                    	            loop118:
                    	            do {
                    	                int alt118=2;
                    	                int LA118_0 = input.LA(1);

                    	                if ( (LA118_0==163) ) {
                    	                    alt118=1;
                    	                }


                    	                switch (alt118) {
                    	            	case 1 :
                    	            	    // InternalMycnl.g:12927:7: otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    {
                    	            	    otherlv_11=(Token)match(input,163,FOLLOW_136); if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      							newLeafNode(otherlv_11, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0());
                    	            	      						
                    	            	    }
                    	            	    // InternalMycnl.g:12931:7: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    // InternalMycnl.g:12932:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    {
                    	            	    // InternalMycnl.g:12932:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    // InternalMycnl.g:12933:9: lv_arguments_12_0= ruleJvmArgumentTypeReference
                    	            	    {
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0());
                    	            	      								
                    	            	    }
                    	            	    pushFollow(FOLLOW_137);
                    	            	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

                    	            	    state._fsp--;
                    	            	    if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									if (current==null) {
                    	            	      										current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	            	      									}
                    	            	      									add(
                    	            	      										current,
                    	            	      										"arguments",
                    	            	      										lv_arguments_12_0,
                    	            	      										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	            	      									afterParserOrEnumRuleCall();
                    	            	      								
                    	            	    }

                    	            	    }


                    	            	    }


                    	            	    }
                    	            	    break;

                    	            	default :
                    	            	    break loop118;
                    	                }
                    	            } while (true);

                    	            otherlv_13=(Token)match(input,135,FOLLOW_181); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_13, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop120;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmParameterizedTypeReference"


    // $ANTLR start "entryRuleJvmArgumentTypeReference"
    // InternalMycnl.g:12962:1: entryRuleJvmArgumentTypeReference returns [EObject current=null] : iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF ;
    public final EObject entryRuleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmArgumentTypeReference = null;


        try {
            // InternalMycnl.g:12962:65: (iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF )
            // InternalMycnl.g:12963:2: iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmArgumentTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmArgumentTypeReference"


    // $ANTLR start "ruleJvmArgumentTypeReference"
    // InternalMycnl.g:12969:1: ruleJvmArgumentTypeReference returns [EObject current=null] : (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) ;
    public final EObject ruleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmTypeReference_0 = null;

        EObject this_JvmWildcardTypeReference_1 = null;



        	enterRule();

        try {
            // InternalMycnl.g:12975:2: ( (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) )
            // InternalMycnl.g:12976:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            {
            // InternalMycnl.g:12976:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==RULE_ID||LA122_0==147||LA122_0==164) ) {
                alt122=1;
            }
            else if ( (LA122_0==198) ) {
                alt122=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 122, 0, input);

                throw nvae;
            }
            switch (alt122) {
                case 1 :
                    // InternalMycnl.g:12977:3: this_JvmTypeReference_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmTypeReference_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmTypeReference_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMycnl.g:12986:3: this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmWildcardTypeReference_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmArgumentTypeReference"


    // $ANTLR start "entryRuleJvmWildcardTypeReference"
    // InternalMycnl.g:12998:1: entryRuleJvmWildcardTypeReference returns [EObject current=null] : iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF ;
    public final EObject entryRuleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmWildcardTypeReference = null;


        try {
            // InternalMycnl.g:12998:65: (iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF )
            // InternalMycnl.g:12999:2: iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmWildcardTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmWildcardTypeReference"


    // $ANTLR start "ruleJvmWildcardTypeReference"
    // InternalMycnl.g:13005:1: ruleJvmWildcardTypeReference returns [EObject current=null] : ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) ;
    public final EObject ruleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_constraints_2_0 = null;

        EObject lv_constraints_3_0 = null;

        EObject lv_constraints_4_0 = null;

        EObject lv_constraints_5_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:13011:2: ( ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) )
            // InternalMycnl.g:13012:2: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            {
            // InternalMycnl.g:13012:2: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            // InternalMycnl.g:13013:3: () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            {
            // InternalMycnl.g:13013:3: ()
            // InternalMycnl.g:13014:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,198,FOLLOW_187); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
              		
            }
            // InternalMycnl.g:13024:3: ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            int alt125=3;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==182) ) {
                alt125=1;
            }
            else if ( (LA125_0==186) ) {
                alt125=2;
            }
            switch (alt125) {
                case 1 :
                    // InternalMycnl.g:13025:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    {
                    // InternalMycnl.g:13025:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    // InternalMycnl.g:13026:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    {
                    // InternalMycnl.g:13026:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) )
                    // InternalMycnl.g:13027:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    {
                    // InternalMycnl.g:13027:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    // InternalMycnl.g:13028:7: lv_constraints_2_0= ruleJvmUpperBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_188);
                    lv_constraints_2_0=ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_2_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalMycnl.g:13045:5: ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    loop123:
                    do {
                        int alt123=2;
                        int LA123_0 = input.LA(1);

                        if ( (LA123_0==199) ) {
                            alt123=1;
                        }


                        switch (alt123) {
                    	case 1 :
                    	    // InternalMycnl.g:13046:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    {
                    	    // InternalMycnl.g:13046:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    // InternalMycnl.g:13047:7: lv_constraints_3_0= ruleJvmUpperBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_188);
                    	    lv_constraints_3_0=ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_3_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop123;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:13066:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    {
                    // InternalMycnl.g:13066:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    // InternalMycnl.g:13067:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    {
                    // InternalMycnl.g:13067:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) )
                    // InternalMycnl.g:13068:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    {
                    // InternalMycnl.g:13068:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    // InternalMycnl.g:13069:7: lv_constraints_4_0= ruleJvmLowerBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_188);
                    lv_constraints_4_0=ruleJvmLowerBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_4_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalMycnl.g:13086:5: ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    loop124:
                    do {
                        int alt124=2;
                        int LA124_0 = input.LA(1);

                        if ( (LA124_0==199) ) {
                            alt124=1;
                        }


                        switch (alt124) {
                    	case 1 :
                    	    // InternalMycnl.g:13087:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    {
                    	    // InternalMycnl.g:13087:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    // InternalMycnl.g:13088:7: lv_constraints_5_0= ruleJvmLowerBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_188);
                    	    lv_constraints_5_0=ruleJvmLowerBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_5_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop124;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmWildcardTypeReference"


    // $ANTLR start "entryRuleJvmUpperBound"
    // InternalMycnl.g:13111:1: entryRuleJvmUpperBound returns [EObject current=null] : iv_ruleJvmUpperBound= ruleJvmUpperBound EOF ;
    public final EObject entryRuleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBound = null;


        try {
            // InternalMycnl.g:13111:54: (iv_ruleJvmUpperBound= ruleJvmUpperBound EOF )
            // InternalMycnl.g:13112:2: iv_ruleJvmUpperBound= ruleJvmUpperBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBound=ruleJvmUpperBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBound"


    // $ANTLR start "ruleJvmUpperBound"
    // InternalMycnl.g:13118:1: ruleJvmUpperBound returns [EObject current=null] : (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:13124:2: ( (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalMycnl.g:13125:2: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalMycnl.g:13125:2: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalMycnl.g:13126:3: otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,182,FOLLOW_124); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
              		
            }
            // InternalMycnl.g:13130:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalMycnl.g:13131:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalMycnl.g:13131:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalMycnl.g:13132:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBound"


    // $ANTLR start "entryRuleJvmUpperBoundAnded"
    // InternalMycnl.g:13153:1: entryRuleJvmUpperBoundAnded returns [EObject current=null] : iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF ;
    public final EObject entryRuleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBoundAnded = null;


        try {
            // InternalMycnl.g:13153:59: (iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF )
            // InternalMycnl.g:13154:2: iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBoundAnded"


    // $ANTLR start "ruleJvmUpperBoundAnded"
    // InternalMycnl.g:13160:1: ruleJvmUpperBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:13166:2: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalMycnl.g:13167:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalMycnl.g:13167:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalMycnl.g:13168:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,199,FOLLOW_124); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalMycnl.g:13172:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalMycnl.g:13173:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalMycnl.g:13173:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalMycnl.g:13174:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBoundAnded"


    // $ANTLR start "entryRuleJvmLowerBound"
    // InternalMycnl.g:13195:1: entryRuleJvmLowerBound returns [EObject current=null] : iv_ruleJvmLowerBound= ruleJvmLowerBound EOF ;
    public final EObject entryRuleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBound = null;


        try {
            // InternalMycnl.g:13195:54: (iv_ruleJvmLowerBound= ruleJvmLowerBound EOF )
            // InternalMycnl.g:13196:2: iv_ruleJvmLowerBound= ruleJvmLowerBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBound=ruleJvmLowerBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBound"


    // $ANTLR start "ruleJvmLowerBound"
    // InternalMycnl.g:13202:1: ruleJvmLowerBound returns [EObject current=null] : (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:13208:2: ( (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalMycnl.g:13209:2: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalMycnl.g:13209:2: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalMycnl.g:13210:3: otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,186,FOLLOW_124); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
              		
            }
            // InternalMycnl.g:13214:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalMycnl.g:13215:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalMycnl.g:13215:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalMycnl.g:13216:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBound"


    // $ANTLR start "entryRuleJvmLowerBoundAnded"
    // InternalMycnl.g:13237:1: entryRuleJvmLowerBoundAnded returns [EObject current=null] : iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF ;
    public final EObject entryRuleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBoundAnded = null;


        try {
            // InternalMycnl.g:13237:59: (iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF )
            // InternalMycnl.g:13238:2: iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBoundAnded=ruleJvmLowerBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBoundAnded"


    // $ANTLR start "ruleJvmLowerBoundAnded"
    // InternalMycnl.g:13244:1: ruleJvmLowerBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:13250:2: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalMycnl.g:13251:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalMycnl.g:13251:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalMycnl.g:13252:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,199,FOLLOW_124); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalMycnl.g:13256:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalMycnl.g:13257:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalMycnl.g:13257:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalMycnl.g:13258:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBoundAnded"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // InternalMycnl.g:13279:1: entryRuleQualifiedNameWithWildcard returns [String current=null] : iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF ;
    public final String entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameWithWildcard = null;


        try {
            // InternalMycnl.g:13279:65: (iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF )
            // InternalMycnl.g:13280:2: iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameWithWildcard.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // InternalMycnl.g:13286:1: ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameWithWildcard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:13292:2: ( (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) )
            // InternalMycnl.g:13293:2: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            {
            // InternalMycnl.g:13293:2: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            // InternalMycnl.g:13294:3: this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*'
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_189);
            this_QualifiedName_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_QualifiedName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,160,FOLLOW_190); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1());
              		
            }
            kw=(Token)match(input,152,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleValidID"
    // InternalMycnl.g:13318:1: entryRuleValidID returns [String current=null] : iv_ruleValidID= ruleValidID EOF ;
    public final String entryRuleValidID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleValidID = null;


        try {
            // InternalMycnl.g:13318:47: (iv_ruleValidID= ruleValidID EOF )
            // InternalMycnl.g:13319:2: iv_ruleValidID= ruleValidID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValidIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValidID=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValidID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValidID"


    // $ANTLR start "ruleValidID"
    // InternalMycnl.g:13325:1: ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleValidID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;


        	enterRule();

        try {
            // InternalMycnl.g:13331:2: (this_ID_0= RULE_ID )
            // InternalMycnl.g:13332:2: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValidID"


    // $ANTLR start "entryRuleXImportDeclaration"
    // InternalMycnl.g:13342:1: entryRuleXImportDeclaration returns [EObject current=null] : iv_ruleXImportDeclaration= ruleXImportDeclaration EOF ;
    public final EObject entryRuleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportDeclaration = null;


        try {
            // InternalMycnl.g:13342:59: (iv_ruleXImportDeclaration= ruleXImportDeclaration EOF )
            // InternalMycnl.g:13343:2: iv_ruleXImportDeclaration= ruleXImportDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportDeclaration=ruleXImportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportDeclaration"


    // $ANTLR start "ruleXImportDeclaration"
    // InternalMycnl.g:13349:1: ruleXImportDeclaration returns [EObject current=null] : (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) ;
    public final EObject ruleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_static_1_0=null;
        Token lv_extension_2_0=null;
        Token lv_wildcard_4_0=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_memberName_5_0 = null;

        AntlrDatatypeRuleToken lv_importedNamespace_7_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:13355:2: ( (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) )
            // InternalMycnl.g:13356:2: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            {
            // InternalMycnl.g:13356:2: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            // InternalMycnl.g:13357:3: otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )?
            {
            otherlv_0=(Token)match(input,184,FOLLOW_191); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
              		
            }
            // InternalMycnl.g:13361:3: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )
            int alt128=3;
            alt128 = dfa128.predict(input);
            switch (alt128) {
                case 1 :
                    // InternalMycnl.g:13362:4: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    {
                    // InternalMycnl.g:13362:4: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    // InternalMycnl.g:13363:5: ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    {
                    // InternalMycnl.g:13363:5: ( (lv_static_1_0= 'static' ) )
                    // InternalMycnl.g:13364:6: (lv_static_1_0= 'static' )
                    {
                    // InternalMycnl.g:13364:6: (lv_static_1_0= 'static' )
                    // InternalMycnl.g:13365:7: lv_static_1_0= 'static'
                    {
                    lv_static_1_0=(Token)match(input,183,FOLLOW_192); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      							setWithLastConsumed(current, "static", true, "static");
                      						
                    }

                    }


                    }

                    // InternalMycnl.g:13377:5: ( (lv_extension_2_0= 'extension' ) )?
                    int alt126=2;
                    int LA126_0 = input.LA(1);

                    if ( (LA126_0==185) ) {
                        alt126=1;
                    }
                    switch (alt126) {
                        case 1 :
                            // InternalMycnl.g:13378:6: (lv_extension_2_0= 'extension' )
                            {
                            // InternalMycnl.g:13378:6: (lv_extension_2_0= 'extension' )
                            // InternalMycnl.g:13379:7: lv_extension_2_0= 'extension'
                            {
                            lv_extension_2_0=(Token)match(input,185,FOLLOW_192); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_extension_2_0, grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              							}
                              							setWithLastConsumed(current, "extension", true, "extension");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalMycnl.g:13391:5: ( ( ruleQualifiedNameInStaticImport ) )
                    // InternalMycnl.g:13392:6: ( ruleQualifiedNameInStaticImport )
                    {
                    // InternalMycnl.g:13392:6: ( ruleQualifiedNameInStaticImport )
                    // InternalMycnl.g:13393:7: ruleQualifiedNameInStaticImport
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_193);
                    ruleQualifiedNameInStaticImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalMycnl.g:13407:5: ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    int alt127=2;
                    int LA127_0 = input.LA(1);

                    if ( (LA127_0==152) ) {
                        alt127=1;
                    }
                    else if ( (LA127_0==RULE_ID) ) {
                        alt127=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 127, 0, input);

                        throw nvae;
                    }
                    switch (alt127) {
                        case 1 :
                            // InternalMycnl.g:13408:6: ( (lv_wildcard_4_0= '*' ) )
                            {
                            // InternalMycnl.g:13408:6: ( (lv_wildcard_4_0= '*' ) )
                            // InternalMycnl.g:13409:7: (lv_wildcard_4_0= '*' )
                            {
                            // InternalMycnl.g:13409:7: (lv_wildcard_4_0= '*' )
                            // InternalMycnl.g:13410:8: lv_wildcard_4_0= '*'
                            {
                            lv_wildcard_4_0=(Token)match(input,152,FOLLOW_194); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_wildcard_4_0, grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              								}
                              								setWithLastConsumed(current, "wildcard", true, "*");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMycnl.g:13423:6: ( (lv_memberName_5_0= ruleValidID ) )
                            {
                            // InternalMycnl.g:13423:6: ( (lv_memberName_5_0= ruleValidID ) )
                            // InternalMycnl.g:13424:7: (lv_memberName_5_0= ruleValidID )
                            {
                            // InternalMycnl.g:13424:7: (lv_memberName_5_0= ruleValidID )
                            // InternalMycnl.g:13425:8: lv_memberName_5_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0());
                              							
                            }
                            pushFollow(FOLLOW_194);
                            lv_memberName_5_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                              								}
                              								set(
                              									current,
                              									"memberName",
                              									lv_memberName_5_0,
                              									"org.eclipse.xtext.xbase.Xtype.ValidID");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMycnl.g:13445:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalMycnl.g:13445:4: ( ( ruleQualifiedName ) )
                    // InternalMycnl.g:13446:5: ( ruleQualifiedName )
                    {
                    // InternalMycnl.g:13446:5: ( ruleQualifiedName )
                    // InternalMycnl.g:13447:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_194);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalMycnl.g:13462:4: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    {
                    // InternalMycnl.g:13462:4: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    // InternalMycnl.g:13463:5: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    {
                    // InternalMycnl.g:13463:5: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    // InternalMycnl.g:13464:6: lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_194);
                    lv_importedNamespace_7_0=ruleQualifiedNameWithWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"importedNamespace",
                      							lv_importedNamespace_7_0,
                      							"org.eclipse.xtext.xbase.Xtype.QualifiedNameWithWildcard");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMycnl.g:13482:3: (otherlv_8= ';' )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==172) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalMycnl.g:13483:4: otherlv_8= ';'
                    {
                    otherlv_8=(Token)match(input,172,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportDeclaration"


    // $ANTLR start "entryRuleQualifiedNameInStaticImport"
    // InternalMycnl.g:13492:1: entryRuleQualifiedNameInStaticImport returns [String current=null] : iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF ;
    public final String entryRuleQualifiedNameInStaticImport() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameInStaticImport = null;


        try {
            // InternalMycnl.g:13492:67: (iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF )
            // InternalMycnl.g:13493:2: iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameInStaticImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameInStaticImport=ruleQualifiedNameInStaticImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameInStaticImport.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameInStaticImport"


    // $ANTLR start "ruleQualifiedNameInStaticImport"
    // InternalMycnl.g:13499:1: ruleQualifiedNameInStaticImport returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID kw= '.' )+ ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameInStaticImport() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalMycnl.g:13505:2: ( (this_ValidID_0= ruleValidID kw= '.' )+ )
            // InternalMycnl.g:13506:2: (this_ValidID_0= ruleValidID kw= '.' )+
            {
            // InternalMycnl.g:13506:2: (this_ValidID_0= ruleValidID kw= '.' )+
            int cnt130=0;
            loop130:
            do {
                int alt130=2;
                int LA130_0 = input.LA(1);

                if ( (LA130_0==RULE_ID) ) {
                    int LA130_2 = input.LA(2);

                    if ( (LA130_2==160) ) {
                        alt130=1;
                    }


                }


                switch (alt130) {
            	case 1 :
            	    // InternalMycnl.g:13507:3: this_ValidID_0= ruleValidID kw= '.'
            	    {
            	    if ( state.backtracking==0 ) {

            	      			newCompositeNode(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0());
            	      		
            	    }
            	    pushFollow(FOLLOW_189);
            	    this_ValidID_0=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(this_ValidID_0);
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			afterParserOrEnumRuleCall();
            	      		
            	    }
            	    kw=(Token)match(input,160,FOLLOW_195); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(kw);
            	      			newLeafNode(kw, grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1());
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt130 >= 1 ) break loop130;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(130, input);
                        throw eee;
                }
                cnt130++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameInStaticImport"

    // $ANTLR start synpred1_InternalMycnl
    public final void synpred1_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:7347:6: ( ( () ( ( ruleOpMultiAssign ) ) ) )
        // InternalMycnl.g:7347:7: ( () ( ( ruleOpMultiAssign ) ) )
        {
        // InternalMycnl.g:7347:7: ( () ( ( ruleOpMultiAssign ) ) )
        // InternalMycnl.g:7348:7: () ( ( ruleOpMultiAssign ) )
        {
        // InternalMycnl.g:7348:7: ()
        // InternalMycnl.g:7349:7: 
        {
        }

        // InternalMycnl.g:7350:7: ( ( ruleOpMultiAssign ) )
        // InternalMycnl.g:7351:8: ( ruleOpMultiAssign )
        {
        // InternalMycnl.g:7351:8: ( ruleOpMultiAssign )
        // InternalMycnl.g:7352:9: ruleOpMultiAssign
        {
        pushFollow(FOLLOW_2);
        ruleOpMultiAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred1_InternalMycnl

    // $ANTLR start synpred2_InternalMycnl
    public final void synpred2_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:7541:5: ( ( () ( ( ruleOpOr ) ) ) )
        // InternalMycnl.g:7541:6: ( () ( ( ruleOpOr ) ) )
        {
        // InternalMycnl.g:7541:6: ( () ( ( ruleOpOr ) ) )
        // InternalMycnl.g:7542:6: () ( ( ruleOpOr ) )
        {
        // InternalMycnl.g:7542:6: ()
        // InternalMycnl.g:7543:6: 
        {
        }

        // InternalMycnl.g:7544:6: ( ( ruleOpOr ) )
        // InternalMycnl.g:7545:7: ( ruleOpOr )
        {
        // InternalMycnl.g:7545:7: ( ruleOpOr )
        // InternalMycnl.g:7546:8: ruleOpOr
        {
        pushFollow(FOLLOW_2);
        ruleOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred2_InternalMycnl

    // $ANTLR start synpred3_InternalMycnl
    public final void synpred3_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:7648:5: ( ( () ( ( ruleOpAnd ) ) ) )
        // InternalMycnl.g:7648:6: ( () ( ( ruleOpAnd ) ) )
        {
        // InternalMycnl.g:7648:6: ( () ( ( ruleOpAnd ) ) )
        // InternalMycnl.g:7649:6: () ( ( ruleOpAnd ) )
        {
        // InternalMycnl.g:7649:6: ()
        // InternalMycnl.g:7650:6: 
        {
        }

        // InternalMycnl.g:7651:6: ( ( ruleOpAnd ) )
        // InternalMycnl.g:7652:7: ( ruleOpAnd )
        {
        // InternalMycnl.g:7652:7: ( ruleOpAnd )
        // InternalMycnl.g:7653:8: ruleOpAnd
        {
        pushFollow(FOLLOW_2);
        ruleOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred3_InternalMycnl

    // $ANTLR start synpred4_InternalMycnl
    public final void synpred4_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:7755:5: ( ( () ( ( ruleOpEquality ) ) ) )
        // InternalMycnl.g:7755:6: ( () ( ( ruleOpEquality ) ) )
        {
        // InternalMycnl.g:7755:6: ( () ( ( ruleOpEquality ) ) )
        // InternalMycnl.g:7756:6: () ( ( ruleOpEquality ) )
        {
        // InternalMycnl.g:7756:6: ()
        // InternalMycnl.g:7757:6: 
        {
        }

        // InternalMycnl.g:7758:6: ( ( ruleOpEquality ) )
        // InternalMycnl.g:7759:7: ( ruleOpEquality )
        {
        // InternalMycnl.g:7759:7: ( ruleOpEquality )
        // InternalMycnl.g:7760:8: ruleOpEquality
        {
        pushFollow(FOLLOW_2);
        ruleOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred4_InternalMycnl

    // $ANTLR start synpred5_InternalMycnl
    public final void synpred5_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:7883:6: ( ( () 'instanceof' ) )
        // InternalMycnl.g:7883:7: ( () 'instanceof' )
        {
        // InternalMycnl.g:7883:7: ( () 'instanceof' )
        // InternalMycnl.g:7884:7: () 'instanceof'
        {
        // InternalMycnl.g:7884:7: ()
        // InternalMycnl.g:7885:7: 
        {
        }

        match(input,143,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalMycnl

    // $ANTLR start synpred6_InternalMycnl
    public final void synpred6_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:7926:6: ( ( () ( ( ruleOpCompare ) ) ) )
        // InternalMycnl.g:7926:7: ( () ( ( ruleOpCompare ) ) )
        {
        // InternalMycnl.g:7926:7: ( () ( ( ruleOpCompare ) ) )
        // InternalMycnl.g:7927:7: () ( ( ruleOpCompare ) )
        {
        // InternalMycnl.g:7927:7: ()
        // InternalMycnl.g:7928:7: 
        {
        }

        // InternalMycnl.g:7929:7: ( ( ruleOpCompare ) )
        // InternalMycnl.g:7930:8: ( ruleOpCompare )
        {
        // InternalMycnl.g:7930:8: ( ruleOpCompare )
        // InternalMycnl.g:7931:9: ruleOpCompare
        {
        pushFollow(FOLLOW_2);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred6_InternalMycnl

    // $ANTLR start synpred7_InternalMycnl
    public final void synpred7_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:8061:5: ( ( () ( ( ruleOpOther ) ) ) )
        // InternalMycnl.g:8061:6: ( () ( ( ruleOpOther ) ) )
        {
        // InternalMycnl.g:8061:6: ( () ( ( ruleOpOther ) ) )
        // InternalMycnl.g:8062:6: () ( ( ruleOpOther ) )
        {
        // InternalMycnl.g:8062:6: ()
        // InternalMycnl.g:8063:6: 
        {
        }

        // InternalMycnl.g:8064:6: ( ( ruleOpOther ) )
        // InternalMycnl.g:8065:7: ( ruleOpOther )
        {
        // InternalMycnl.g:8065:7: ( ruleOpOther )
        // InternalMycnl.g:8066:8: ruleOpOther
        {
        pushFollow(FOLLOW_2);
        ruleOpOther();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred7_InternalMycnl

    // $ANTLR start synpred8_InternalMycnl
    public final void synpred8_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:8181:6: ( ( '>' '>' ) )
        // InternalMycnl.g:8181:7: ( '>' '>' )
        {
        // InternalMycnl.g:8181:7: ( '>' '>' )
        // InternalMycnl.g:8182:7: '>' '>'
        {
        match(input,135,FOLLOW_127); if (state.failed) return ;
        match(input,135,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalMycnl

    // $ANTLR start synpred9_InternalMycnl
    public final void synpred9_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:8216:6: ( ( '<' '<' ) )
        // InternalMycnl.g:8216:7: ( '<' '<' )
        {
        // InternalMycnl.g:8216:7: ( '<' '<' )
        // InternalMycnl.g:8217:7: '<' '<'
        {
        match(input,134,FOLLOW_117); if (state.failed) return ;
        match(input,134,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred9_InternalMycnl

    // $ANTLR start synpred10_InternalMycnl
    public final void synpred10_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:8289:5: ( ( () ( ( ruleOpAdd ) ) ) )
        // InternalMycnl.g:8289:6: ( () ( ( ruleOpAdd ) ) )
        {
        // InternalMycnl.g:8289:6: ( () ( ( ruleOpAdd ) ) )
        // InternalMycnl.g:8290:6: () ( ( ruleOpAdd ) )
        {
        // InternalMycnl.g:8290:6: ()
        // InternalMycnl.g:8291:6: 
        {
        }

        // InternalMycnl.g:8292:6: ( ( ruleOpAdd ) )
        // InternalMycnl.g:8293:7: ( ruleOpAdd )
        {
        // InternalMycnl.g:8293:7: ( ruleOpAdd )
        // InternalMycnl.g:8294:8: ruleOpAdd
        {
        pushFollow(FOLLOW_2);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalMycnl

    // $ANTLR start synpred11_InternalMycnl
    public final void synpred11_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:8404:5: ( ( () ( ( ruleOpMulti ) ) ) )
        // InternalMycnl.g:8404:6: ( () ( ( ruleOpMulti ) ) )
        {
        // InternalMycnl.g:8404:6: ( () ( ( ruleOpMulti ) ) )
        // InternalMycnl.g:8405:6: () ( ( ruleOpMulti ) )
        {
        // InternalMycnl.g:8405:6: ()
        // InternalMycnl.g:8406:6: 
        {
        }

        // InternalMycnl.g:8407:6: ( ( ruleOpMulti ) )
        // InternalMycnl.g:8408:7: ( ruleOpMulti )
        {
        // InternalMycnl.g:8408:7: ( ruleOpMulti )
        // InternalMycnl.g:8409:8: ruleOpMulti
        {
        pushFollow(FOLLOW_2);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred11_InternalMycnl

    // $ANTLR start synpred12_InternalMycnl
    public final void synpred12_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:8639:5: ( ( () 'as' ) )
        // InternalMycnl.g:8639:6: ( () 'as' )
        {
        // InternalMycnl.g:8639:6: ( () 'as' )
        // InternalMycnl.g:8640:6: () 'as'
        {
        // InternalMycnl.g:8640:6: ()
        // InternalMycnl.g:8641:6: 
        {
        }

        match(input,157,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalMycnl

    // $ANTLR start synpred13_InternalMycnl
    public final void synpred13_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:8707:4: ( ( () ( ( ruleOpPostfix ) ) ) )
        // InternalMycnl.g:8707:5: ( () ( ( ruleOpPostfix ) ) )
        {
        // InternalMycnl.g:8707:5: ( () ( ( ruleOpPostfix ) ) )
        // InternalMycnl.g:8708:5: () ( ( ruleOpPostfix ) )
        {
        // InternalMycnl.g:8708:5: ()
        // InternalMycnl.g:8709:5: 
        {
        }

        // InternalMycnl.g:8710:5: ( ( ruleOpPostfix ) )
        // InternalMycnl.g:8711:6: ( ruleOpPostfix )
        {
        // InternalMycnl.g:8711:6: ( ruleOpPostfix )
        // InternalMycnl.g:8712:7: ruleOpPostfix
        {
        pushFollow(FOLLOW_2);
        ruleOpPostfix();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred13_InternalMycnl

    // $ANTLR start synpred14_InternalMycnl
    public final void synpred14_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:8803:6: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
        // InternalMycnl.g:8803:7: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        {
        // InternalMycnl.g:8803:7: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        // InternalMycnl.g:8804:7: () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
        {
        // InternalMycnl.g:8804:7: ()
        // InternalMycnl.g:8805:7: 
        {
        }

        // InternalMycnl.g:8806:7: ( '.' | ( ( '::' ) ) )
        int alt131=2;
        int LA131_0 = input.LA(1);

        if ( (LA131_0==160) ) {
            alt131=1;
        }
        else if ( (LA131_0==161) ) {
            alt131=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 131, 0, input);

            throw nvae;
        }
        switch (alt131) {
            case 1 :
                // InternalMycnl.g:8807:8: '.'
                {
                match(input,160,FOLLOW_134); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalMycnl.g:8809:8: ( ( '::' ) )
                {
                // InternalMycnl.g:8809:8: ( ( '::' ) )
                // InternalMycnl.g:8810:9: ( '::' )
                {
                // InternalMycnl.g:8810:9: ( '::' )
                // InternalMycnl.g:8811:10: '::'
                {
                match(input,161,FOLLOW_134); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalMycnl.g:8815:7: ( ( ruleFeatureCallID ) )
        // InternalMycnl.g:8816:8: ( ruleFeatureCallID )
        {
        // InternalMycnl.g:8816:8: ( ruleFeatureCallID )
        // InternalMycnl.g:8817:9: ruleFeatureCallID
        {
        pushFollow(FOLLOW_114);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred14_InternalMycnl

    // $ANTLR start synpred15_InternalMycnl
    public final void synpred15_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:8900:6: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )
        // InternalMycnl.g:8900:7: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        {
        // InternalMycnl.g:8900:7: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        // InternalMycnl.g:8901:7: () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        {
        // InternalMycnl.g:8901:7: ()
        // InternalMycnl.g:8902:7: 
        {
        }

        // InternalMycnl.g:8903:7: ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        int alt132=3;
        switch ( input.LA(1) ) {
        case 160:
            {
            alt132=1;
            }
            break;
        case 162:
            {
            alt132=2;
            }
            break;
        case 161:
            {
            alt132=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 132, 0, input);

            throw nvae;
        }

        switch (alt132) {
            case 1 :
                // InternalMycnl.g:8904:8: '.'
                {
                match(input,160,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalMycnl.g:8906:8: ( ( '?.' ) )
                {
                // InternalMycnl.g:8906:8: ( ( '?.' ) )
                // InternalMycnl.g:8907:9: ( '?.' )
                {
                // InternalMycnl.g:8907:9: ( '?.' )
                // InternalMycnl.g:8908:10: '?.'
                {
                match(input,162,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalMycnl.g:8912:8: ( ( '::' ) )
                {
                // InternalMycnl.g:8912:8: ( ( '::' ) )
                // InternalMycnl.g:8913:9: ( '::' )
                {
                // InternalMycnl.g:8913:9: ( '::' )
                // InternalMycnl.g:8914:10: '::'
                {
                match(input,161,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred15_InternalMycnl

    // $ANTLR start synpred16_InternalMycnl
    public final void synpred16_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:9038:7: ( ( '(' ) )
        // InternalMycnl.g:9038:8: ( '(' )
        {
        // InternalMycnl.g:9038:8: ( '(' )
        // InternalMycnl.g:9039:8: '('
        {
        match(input,164,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred16_InternalMycnl

    // $ANTLR start synpred17_InternalMycnl
    public final void synpred17_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:9057:8: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalMycnl.g:9057:9: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalMycnl.g:9057:9: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalMycnl.g:9058:9: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalMycnl.g:9058:9: ()
        // InternalMycnl.g:9059:9: 
        {
        }

        // InternalMycnl.g:9060:9: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt134=2;
        int LA134_0 = input.LA(1);

        if ( (LA134_0==RULE_ID||LA134_0==147||LA134_0==164) ) {
            alt134=1;
        }
        switch (alt134) {
            case 1 :
                // InternalMycnl.g:9061:10: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalMycnl.g:9061:10: ( ( ruleJvmFormalParameter ) )
                // InternalMycnl.g:9062:11: ( ruleJvmFormalParameter )
                {
                // InternalMycnl.g:9062:11: ( ruleJvmFormalParameter )
                // InternalMycnl.g:9063:12: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_150);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalMycnl.g:9066:10: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop133:
                do {
                    int alt133=2;
                    int LA133_0 = input.LA(1);

                    if ( (LA133_0==163) ) {
                        alt133=1;
                    }


                    switch (alt133) {
                	case 1 :
                	    // InternalMycnl.g:9067:11: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,163,FOLLOW_124); if (state.failed) return ;
                	    // InternalMycnl.g:9068:11: ( ( ruleJvmFormalParameter ) )
                	    // InternalMycnl.g:9069:12: ( ruleJvmFormalParameter )
                	    {
                	    // InternalMycnl.g:9069:12: ( ruleJvmFormalParameter )
                	    // InternalMycnl.g:9070:13: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_150);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop133;
                    }
                } while (true);


                }
                break;

        }

        // InternalMycnl.g:9075:9: ( ( '|' ) )
        // InternalMycnl.g:9076:10: ( '|' )
        {
        // InternalMycnl.g:9076:10: ( '|' )
        // InternalMycnl.g:9077:11: '|'
        {
        match(input,171,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred17_InternalMycnl

    // $ANTLR start synpred18_InternalMycnl
    public final void synpred18_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:9154:6: ( ( () '[' ) )
        // InternalMycnl.g:9154:7: ( () '[' )
        {
        // InternalMycnl.g:9154:7: ( () '[' )
        // InternalMycnl.g:9155:7: () '['
        {
        // InternalMycnl.g:9155:7: ()
        // InternalMycnl.g:9156:7: 
        {
        }

        match(input,169,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred18_InternalMycnl

    // $ANTLR start synpred19_InternalMycnl
    public final void synpred19_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:9227:4: ( ( () 'synchronized' '(' ) )
        // InternalMycnl.g:9227:5: ( () 'synchronized' '(' )
        {
        // InternalMycnl.g:9227:5: ( () 'synchronized' '(' )
        // InternalMycnl.g:9228:5: () 'synchronized' '('
        {
        // InternalMycnl.g:9228:5: ()
        // InternalMycnl.g:9229:5: 
        {
        }

        match(input,196,FOLLOW_155); if (state.failed) return ;
        match(input,164,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalMycnl

    // $ANTLR start synpred20_InternalMycnl
    public final void synpred20_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:9272:4: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalMycnl.g:9272:5: ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalMycnl.g:9272:5: ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalMycnl.g:9273:5: () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':'
        {
        // InternalMycnl.g:9273:5: ()
        // InternalMycnl.g:9274:5: 
        {
        }

        match(input,76,FOLLOW_155); if (state.failed) return ;
        match(input,164,FOLLOW_124); if (state.failed) return ;
        // InternalMycnl.g:9277:5: ( ( ruleJvmFormalParameter ) )
        // InternalMycnl.g:9278:6: ( ruleJvmFormalParameter )
        {
        // InternalMycnl.g:9278:6: ( ruleJvmFormalParameter )
        // InternalMycnl.g:9279:7: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_158);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,175,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred20_InternalMycnl

    // $ANTLR start synpred21_InternalMycnl
    public final void synpred21_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:9386:4: ( ( () '[' ) )
        // InternalMycnl.g:9386:5: ( () '[' )
        {
        // InternalMycnl.g:9386:5: ( () '[' )
        // InternalMycnl.g:9387:5: () '['
        {
        // InternalMycnl.g:9387:5: ()
        // InternalMycnl.g:9388:5: 
        {
        }

        match(input,169,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred21_InternalMycnl

    // $ANTLR start synpred23_InternalMycnl
    public final void synpred23_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:9691:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalMycnl.g:9691:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalMycnl.g:9691:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalMycnl.g:9692:5: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalMycnl.g:9692:5: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt136=2;
        int LA136_0 = input.LA(1);

        if ( (LA136_0==RULE_ID||LA136_0==147||LA136_0==164) ) {
            alt136=1;
        }
        switch (alt136) {
            case 1 :
                // InternalMycnl.g:9693:6: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalMycnl.g:9693:6: ( ( ruleJvmFormalParameter ) )
                // InternalMycnl.g:9694:7: ( ruleJvmFormalParameter )
                {
                // InternalMycnl.g:9694:7: ( ruleJvmFormalParameter )
                // InternalMycnl.g:9695:8: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_150);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalMycnl.g:9698:6: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop135:
                do {
                    int alt135=2;
                    int LA135_0 = input.LA(1);

                    if ( (LA135_0==163) ) {
                        alt135=1;
                    }


                    switch (alt135) {
                	case 1 :
                	    // InternalMycnl.g:9699:7: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,163,FOLLOW_124); if (state.failed) return ;
                	    // InternalMycnl.g:9700:7: ( ( ruleJvmFormalParameter ) )
                	    // InternalMycnl.g:9701:8: ( ruleJvmFormalParameter )
                	    {
                	    // InternalMycnl.g:9701:8: ( ruleJvmFormalParameter )
                	    // InternalMycnl.g:9702:9: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_150);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop135;
                    }
                } while (true);


                }
                break;

        }

        // InternalMycnl.g:9707:5: ( ( '|' ) )
        // InternalMycnl.g:9708:6: ( '|' )
        {
        // InternalMycnl.g:9708:6: ( '|' )
        // InternalMycnl.g:9709:7: '|'
        {
        match(input,171,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred23_InternalMycnl

    // $ANTLR start synpred25_InternalMycnl
    public final void synpred25_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:10100:5: ( 'else' )
        // InternalMycnl.g:10100:6: 'else'
        {
        match(input,173,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred25_InternalMycnl

    // $ANTLR start synpred26_InternalMycnl
    public final void synpred26_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:10159:6: ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalMycnl.g:10159:7: ( '(' ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalMycnl.g:10159:7: ( '(' ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalMycnl.g:10160:7: '(' ( ( ruleJvmFormalParameter ) ) ':'
        {
        match(input,164,FOLLOW_124); if (state.failed) return ;
        // InternalMycnl.g:10161:7: ( ( ruleJvmFormalParameter ) )
        // InternalMycnl.g:10162:8: ( ruleJvmFormalParameter )
        {
        // InternalMycnl.g:10162:8: ( ruleJvmFormalParameter )
        // InternalMycnl.g:10163:9: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_158);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,175,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred26_InternalMycnl

    // $ANTLR start synpred27_InternalMycnl
    public final void synpred27_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:10226:6: ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalMycnl.g:10226:7: ( ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalMycnl.g:10226:7: ( ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalMycnl.g:10227:7: ( ( ruleJvmFormalParameter ) ) ':'
        {
        // InternalMycnl.g:10227:7: ( ( ruleJvmFormalParameter ) )
        // InternalMycnl.g:10228:8: ( ruleJvmFormalParameter )
        {
        // InternalMycnl.g:10228:8: ( ruleJvmFormalParameter )
        // InternalMycnl.g:10229:9: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_158);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,175,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred27_InternalMycnl

    // $ANTLR start synpred29_InternalMycnl
    public final void synpred29_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:11044:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )
        // InternalMycnl.g:11044:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        {
        // InternalMycnl.g:11044:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        // InternalMycnl.g:11045:6: ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) )
        {
        // InternalMycnl.g:11045:6: ( ( ruleJvmTypeReference ) )
        // InternalMycnl.g:11046:7: ( ruleJvmTypeReference )
        {
        // InternalMycnl.g:11046:7: ( ruleJvmTypeReference )
        // InternalMycnl.g:11047:8: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_172);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalMycnl.g:11050:6: ( ( ruleValidID ) )
        // InternalMycnl.g:11051:7: ( ruleValidID )
        {
        // InternalMycnl.g:11051:7: ( ruleValidID )
        // InternalMycnl.g:11052:8: ruleValidID
        {
        pushFollow(FOLLOW_2);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred29_InternalMycnl

    // $ANTLR start synpred30_InternalMycnl
    public final void synpred30_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:11356:5: ( ( '(' ) )
        // InternalMycnl.g:11356:6: ( '(' )
        {
        // InternalMycnl.g:11356:6: ( '(' )
        // InternalMycnl.g:11357:6: '('
        {
        match(input,164,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred30_InternalMycnl

    // $ANTLR start synpred31_InternalMycnl
    public final void synpred31_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:11375:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalMycnl.g:11375:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalMycnl.g:11375:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalMycnl.g:11376:7: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalMycnl.g:11376:7: ()
        // InternalMycnl.g:11377:7: 
        {
        }

        // InternalMycnl.g:11378:7: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt140=2;
        int LA140_0 = input.LA(1);

        if ( (LA140_0==RULE_ID||LA140_0==147||LA140_0==164) ) {
            alt140=1;
        }
        switch (alt140) {
            case 1 :
                // InternalMycnl.g:11379:8: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalMycnl.g:11379:8: ( ( ruleJvmFormalParameter ) )
                // InternalMycnl.g:11380:9: ( ruleJvmFormalParameter )
                {
                // InternalMycnl.g:11380:9: ( ruleJvmFormalParameter )
                // InternalMycnl.g:11381:10: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_150);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalMycnl.g:11384:8: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop139:
                do {
                    int alt139=2;
                    int LA139_0 = input.LA(1);

                    if ( (LA139_0==163) ) {
                        alt139=1;
                    }


                    switch (alt139) {
                	case 1 :
                	    // InternalMycnl.g:11385:9: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,163,FOLLOW_124); if (state.failed) return ;
                	    // InternalMycnl.g:11386:9: ( ( ruleJvmFormalParameter ) )
                	    // InternalMycnl.g:11387:10: ( ruleJvmFormalParameter )
                	    {
                	    // InternalMycnl.g:11387:10: ( ruleJvmFormalParameter )
                	    // InternalMycnl.g:11388:11: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_150);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop139;
                    }
                } while (true);


                }
                break;

        }

        // InternalMycnl.g:11393:7: ( ( '|' ) )
        // InternalMycnl.g:11394:8: ( '|' )
        {
        // InternalMycnl.g:11394:8: ( '|' )
        // InternalMycnl.g:11395:9: '|'
        {
        match(input,171,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred31_InternalMycnl

    // $ANTLR start synpred32_InternalMycnl
    public final void synpred32_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:11472:4: ( ( () '[' ) )
        // InternalMycnl.g:11472:5: ( () '[' )
        {
        // InternalMycnl.g:11472:5: ( () '[' )
        // InternalMycnl.g:11473:5: () '['
        {
        // InternalMycnl.g:11473:5: ()
        // InternalMycnl.g:11474:5: 
        {
        }

        match(input,169,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalMycnl

    // $ANTLR start synpred33_InternalMycnl
    public final void synpred33_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:11632:5: ( '<' )
        // InternalMycnl.g:11632:6: '<'
        {
        match(input,134,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred33_InternalMycnl

    // $ANTLR start synpred34_InternalMycnl
    public final void synpred34_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:11689:5: ( ( '(' ) )
        // InternalMycnl.g:11689:6: ( '(' )
        {
        // InternalMycnl.g:11689:6: ( '(' )
        // InternalMycnl.g:11690:6: '('
        {
        match(input,164,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_InternalMycnl

    // $ANTLR start synpred35_InternalMycnl
    public final void synpred35_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:11708:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalMycnl.g:11708:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalMycnl.g:11708:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalMycnl.g:11709:7: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalMycnl.g:11709:7: ()
        // InternalMycnl.g:11710:7: 
        {
        }

        // InternalMycnl.g:11711:7: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt142=2;
        int LA142_0 = input.LA(1);

        if ( (LA142_0==RULE_ID||LA142_0==147||LA142_0==164) ) {
            alt142=1;
        }
        switch (alt142) {
            case 1 :
                // InternalMycnl.g:11712:8: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalMycnl.g:11712:8: ( ( ruleJvmFormalParameter ) )
                // InternalMycnl.g:11713:9: ( ruleJvmFormalParameter )
                {
                // InternalMycnl.g:11713:9: ( ruleJvmFormalParameter )
                // InternalMycnl.g:11714:10: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_150);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalMycnl.g:11717:8: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop141:
                do {
                    int alt141=2;
                    int LA141_0 = input.LA(1);

                    if ( (LA141_0==163) ) {
                        alt141=1;
                    }


                    switch (alt141) {
                	case 1 :
                	    // InternalMycnl.g:11718:9: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,163,FOLLOW_124); if (state.failed) return ;
                	    // InternalMycnl.g:11719:9: ( ( ruleJvmFormalParameter ) )
                	    // InternalMycnl.g:11720:10: ( ruleJvmFormalParameter )
                	    {
                	    // InternalMycnl.g:11720:10: ( ruleJvmFormalParameter )
                	    // InternalMycnl.g:11721:11: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_150);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop141;
                    }
                } while (true);


                }
                break;

        }

        // InternalMycnl.g:11726:7: ( ( '|' ) )
        // InternalMycnl.g:11727:8: ( '|' )
        {
        // InternalMycnl.g:11727:8: ( '|' )
        // InternalMycnl.g:11728:9: '|'
        {
        match(input,171,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred35_InternalMycnl

    // $ANTLR start synpred36_InternalMycnl
    public final void synpred36_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:11805:4: ( ( () '[' ) )
        // InternalMycnl.g:11805:5: ( () '[' )
        {
        // InternalMycnl.g:11805:5: ( () '[' )
        // InternalMycnl.g:11806:5: () '['
        {
        // InternalMycnl.g:11806:5: ()
        // InternalMycnl.g:11807:5: 
        {
        }

        match(input,169,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred36_InternalMycnl

    // $ANTLR start synpred37_InternalMycnl
    public final void synpred37_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:12148:4: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )
        // InternalMycnl.g:
        {
        if ( (input.LA(1)>=RULE_INT && input.LA(1)<=RULE_ID)||input.LA(1)==30||input.LA(1)==76||input.LA(1)==134||(input.LA(1)>=150 && input.LA(1)<=151)||input.LA(1)==156||input.LA(1)==164||(input.LA(1)>=166 && input.LA(1)<=167)||input.LA(1)==169||input.LA(1)==174||(input.LA(1)>=178 && input.LA(1)<=179)||(input.LA(1)>=182 && input.LA(1)<=194)||input.LA(1)==196 ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred37_InternalMycnl

    // $ANTLR start synpred38_InternalMycnl
    public final void synpred38_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:12219:6: ( 'catch' )
        // InternalMycnl.g:12219:7: 'catch'
        {
        match(input,197,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred38_InternalMycnl

    // $ANTLR start synpred39_InternalMycnl
    public final void synpred39_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:12240:7: ( 'finally' )
        // InternalMycnl.g:12240:8: 'finally'
        {
        match(input,195,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred39_InternalMycnl

    // $ANTLR start synpred42_InternalMycnl
    public final void synpred42_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:12484:5: ( '.' )
        // InternalMycnl.g:12484:6: '.'
        {
        match(input,160,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred42_InternalMycnl

    // $ANTLR start synpred43_InternalMycnl
    public final void synpred43_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:12610:5: ( ( () ruleArrayBrackets ) )
        // InternalMycnl.g:12610:6: ( () ruleArrayBrackets )
        {
        // InternalMycnl.g:12610:6: ( () ruleArrayBrackets )
        // InternalMycnl.g:12611:6: () ruleArrayBrackets
        {
        // InternalMycnl.g:12611:6: ()
        // InternalMycnl.g:12612:6: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred43_InternalMycnl

    // $ANTLR start synpred44_InternalMycnl
    public final void synpred44_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:12807:5: ( '<' )
        // InternalMycnl.g:12807:6: '<'
        {
        match(input,134,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred44_InternalMycnl

    // $ANTLR start synpred45_InternalMycnl
    public final void synpred45_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:12863:6: ( ( () '.' ) )
        // InternalMycnl.g:12863:7: ( () '.' )
        {
        // InternalMycnl.g:12863:7: ( () '.' )
        // InternalMycnl.g:12864:7: () '.'
        {
        // InternalMycnl.g:12864:7: ()
        // InternalMycnl.g:12865:7: 
        {
        }

        match(input,160,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred45_InternalMycnl

    // $ANTLR start synpred46_InternalMycnl
    public final void synpred46_InternalMycnl_fragment() throws RecognitionException {   
        // InternalMycnl.g:12901:7: ( '<' )
        // InternalMycnl.g:12901:8: '<'
        {
        match(input,134,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred46_InternalMycnl

    // Delegated rules

    public final boolean synpred20_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalMycnl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalMycnl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA2 dfa2 = new DFA2(this);
    protected DFA3 dfa3 = new DFA3(this);
    protected DFA17 dfa17 = new DFA17(this);
    protected DFA21 dfa21 = new DFA21(this);
    protected DFA31 dfa31 = new DFA31(this);
    protected DFA34 dfa34 = new DFA34(this);
    protected DFA50 dfa50 = new DFA50(this);
    protected DFA49 dfa49 = new DFA49(this);
    protected DFA51 dfa51 = new DFA51(this);
    protected DFA53 dfa53 = new DFA53(this);
    protected DFA62 dfa62 = new DFA62(this);
    protected DFA69 dfa69 = new DFA69(this);
    protected DFA68 dfa68 = new DFA68(this);
    protected DFA91 dfa91 = new DFA91(this);
    protected DFA90 dfa90 = new DFA90(this);
    protected DFA92 dfa92 = new DFA92(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA99 dfa99 = new DFA99(this);
    protected DFA98 dfa98 = new DFA98(this);
    protected DFA100 dfa100 = new DFA100(this);
    protected DFA103 dfa103 = new DFA103(this);
    protected DFA121 dfa121 = new DFA121(this);
    protected DFA119 dfa119 = new DFA119(this);
    protected DFA128 dfa128 = new DFA128(this);
    static final String dfa_1s = "\107\uffff";
    static final String dfa_2s = "\1\15\2\32\1\61\2\uffff\3\33\1\62\2\34\1\50\1\34\1\63\2\35\2\51\1\64\1\36\1\113\1\uffff\1\113\1\36\1\121\1\52\1\36\1\121\1\65\1\127\1\37\2\114\1\37\1\122\1\53\1\37\1\114\1\66\1\130\1\40\2\115\1\40\1\123\2\54\1\123\1\67\1\131\2\uffff\1\145\1\uffff\1\4\3\uffff\1\145\1\4\1\150\1\4\1\150\2\4\1\153\4\uffff";
    static final String dfa_3s = "\1\105\1\32\1\46\1\61\2\uffff\2\33\1\47\1\62\2\34\1\50\1\34\1\63\2\112\2\120\1\126\1\36\1\113\1\uffff\1\113\1\36\1\121\1\52\1\36\1\121\1\65\1\127\1\37\2\114\1\37\1\122\1\53\1\37\1\114\1\66\1\130\1\161\2\175\1\161\1\176\2\157\1\176\1\167\1\177\2\uffff\1\162\1\uffff\1\145\3\uffff\1\162\1\145\1\165\1\150\1\165\1\150\1\153\1\170\4\uffff";
    static final String dfa_4s = "\4\uffff\1\11\1\15\20\uffff\1\7\34\uffff\1\4\1\1\1\uffff\1\2\1\uffff\1\13\1\14\1\12\10\uffff\1\6\1\10\1\3\1\5";
    static final String dfa_5s = "\107\uffff}>";
    static final String[] dfa_6s = {
            "\1\5\3\uffff\1\5\3\uffff\1\5\3\uffff\1\1\13\uffff\1\2\12\uffff\1\3\12\uffff\1\4\4\uffff\1\4\4\uffff\1\4",
            "\1\6",
            "\1\7\13\uffff\1\10",
            "\1\11",
            "",
            "",
            "\1\12",
            "\1\13",
            "\1\15\13\uffff\1\14",
            "\1\16",
            "\1\17",
            "\1\20",
            "\1\21",
            "\1\22",
            "\1\23",
            "\1\24\13\uffff\1\26\40\uffff\1\25",
            "\1\30\54\uffff\1\27",
            "\1\32\46\uffff\1\31",
            "\1\33\46\uffff\1\34",
            "\1\35\41\uffff\1\36",
            "\1\37",
            "\1\40",
            "",
            "\1\41",
            "\1\42",
            "\1\43",
            "\1\44",
            "\1\45",
            "\1\46",
            "\1\47",
            "\1\50",
            "\1\51",
            "\1\52",
            "\1\53",
            "\1\54",
            "\1\55",
            "\1\56",
            "\1\57",
            "\1\60",
            "\1\61",
            "\1\62",
            "\1\64\73\uffff\1\66\2\uffff\1\67\2\uffff\1\63\13\uffff\1\65\2\uffff\1\26",
            "\1\70\54\uffff\1\72\2\uffff\1\71",
            "\1\70\54\uffff\1\72\2\uffff\1\71",
            "\1\64\73\uffff\1\66\2\uffff\1\74\2\uffff\1\63\13\uffff\1\73\2\uffff\1\26",
            "\1\70\47\uffff\1\72\2\uffff\1\71",
            "\1\64\60\uffff\1\66\2\uffff\1\76\2\uffff\1\63\13\uffff\1\75",
            "\1\64\60\uffff\1\66\2\uffff\1\100\2\uffff\1\63\13\uffff\1\77",
            "\1\70\47\uffff\1\72\2\uffff\1\71",
            "\1\64\46\uffff\1\66\2\uffff\1\101\2\uffff\1\63\13\uffff\1\102\6\uffff\1\26",
            "\1\70\42\uffff\1\72\2\uffff\1\71",
            "",
            "",
            "\1\103\14\uffff\1\104",
            "",
            "\1\105\140\uffff\1\106",
            "",
            "",
            "",
            "\1\103\14\uffff\1\104",
            "\1\105\140\uffff\1\106",
            "\1\103\14\uffff\1\104",
            "\1\105\143\uffff\1\106",
            "\1\103\14\uffff\1\104",
            "\1\105\143\uffff\1\106",
            "\1\105\146\uffff\1\106",
            "\1\103\14\uffff\1\104",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA2 extends DFA {

        public DFA2(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 2;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "150:2: (this_findtempBuilAction_0= rulefindtempBuilAction | this_findtempDemolish_1= rulefindtempDemolish | this_findtempPlantTrees_2= rulefindtempPlantTrees | this_findtempCutTrees_3= rulefindtempCutTrees | this_findtempPlantBushes_4= rulefindtempPlantBushes | this_findtempRemoveBushes_5= rulefindtempRemoveBushes | this_findtempCreateLake_6= rulefindtempCreateLake | this_findtempRemoveLake_7= rulefindtempRemoveLake | this_caltreesBuildAction_8= rulecaltreesBuildAction | this_DesignCommercial_9= ruleDesignCommercial | this_DesignResidential_10= ruleDesignResidential | this_DesignEducational_11= ruleDesignEducational | this_showRegion_12= ruleshowRegion )";
        }
    }
    static final String dfa_7s = "\17\uffff";
    static final String dfa_8s = "\1\15\2\16\1\uffff\3\17\2\20\6\uffff";
    static final String dfa_9s = "\1\25\1\16\1\22\1\uffff\2\17\1\23\2\24\6\uffff";
    static final String dfa_10s = "\3\uffff\1\4\5\uffff\1\2\1\3\1\5\1\1\1\7\1\6";
    static final String dfa_11s = "\17\uffff}>";
    static final String[] dfa_12s = {
            "\1\1\3\uffff\1\2\3\uffff\1\3",
            "\1\4",
            "\1\5\3\uffff\1\6",
            "",
            "\1\7",
            "\1\10",
            "\1\12\3\uffff\1\11",
            "\1\14\3\uffff\1\13",
            "\1\16\3\uffff\1\15",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "285:2: ( (otherlv_0= 'show' otherlv_1= 'details' otherlv_2= 'of' otherlv_3= 'region' ( (lv_region_4_0= RULE_INT ) ) ) | (otherlv_5= 'Show' otherlv_6= 'Details' otherlv_7= 'Of' otherlv_8= 'Region' ( (lv_region_9_0= RULE_INT ) ) ) | (otherlv_10= 'Show' otherlv_11= 'Details' otherlv_12= 'of' otherlv_13= 'Region' ( (lv_region_14_0= RULE_INT ) ) ) | (otherlv_15= 'SHOW' otherlv_16= 'DETAILS' otherlv_17= 'OF' otherlv_18= 'REGION' ( (lv_region_19_0= RULE_INT ) ) ) | (otherlv_20= 'show' otherlv_21= 'details' otherlv_22= 'of' otherlv_23= 'Region' ( (lv_region_24_0= RULE_INT ) ) ) | (otherlv_25= 'Show' otherlv_26= 'details' otherlv_27= 'of' otherlv_28= 'region' ( (lv_region_29_0= RULE_INT ) ) ) | (otherlv_30= 'Show' otherlv_31= 'details' otherlv_32= 'of' otherlv_33= 'Region' ( (lv_region_34_0= RULE_INT ) ) ) )";
        }
    }
    static final String dfa_13s = "\13\uffff";
    static final String dfa_14s = "\1\31\1\32\2\uffff\1\33\1\34\1\35\1\uffff\1\36\2\uffff";
    static final String dfa_15s = "\1\60\1\32\2\uffff\1\33\1\34\1\51\1\uffff\1\52\2\uffff";
    static final String dfa_16s = "\2\uffff\1\2\1\5\3\uffff\1\1\1\uffff\1\3\1\4";
    static final String dfa_17s = "\13\uffff}>";
    static final String[] dfa_18s = {
            "\1\1\13\uffff\1\2\12\uffff\1\3",
            "\1\4",
            "",
            "",
            "\1\5",
            "\1\6",
            "\1\7\13\uffff\1\10",
            "",
            "\1\12\13\uffff\1\11",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA17 extends DFA {

        public DFA17(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 17;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "5286:2: ( (otherlv_0= 'what' otherlv_1= 'will' otherlv_2= 'be' otherlv_3= 'the' otherlv_4= 'temperature' otherlv_5= 'if' otherlv_6= 'we' otherlv_7= 'create' otherlv_8= 'lake' otherlv_9= 'over' otherlv_10= 'area' ( (lv_area_11_0= RULE_INT ) ) otherlv_12= 'square' otherlv_13= 'meter' otherlv_14= 'in' otherlv_15= 'region' ( (lv_region_16_0= RULE_INT ) ) ) | (otherlv_17= 'What' otherlv_18= 'will' otherlv_19= 'be' otherlv_20= 'the' otherlv_21= 'temperature' otherlv_22= 'if' otherlv_23= 'we' otherlv_24= 'create' otherlv_25= 'lake' otherlv_26= 'over' otherlv_27= 'area' ( (lv_area_28_0= RULE_INT ) ) otherlv_29= 'square' otherlv_30= 'meter' otherlv_31= 'in' otherlv_32= 'region' ( (lv_region_33_0= RULE_INT ) ) ) | (otherlv_34= 'what' otherlv_35= 'will' otherlv_36= 'be' otherlv_37= 'the' otherlv_38= 'Temperature' otherlv_39= 'If' otherlv_40= 'We' otherlv_41= 'Create' otherlv_42= 'Lake' otherlv_43= 'Over' otherlv_44= 'Area' ( (lv_area_45_0= RULE_INT ) ) otherlv_46= 'Square' otherlv_47= 'Meter' otherlv_48= 'In' otherlv_49= 'Region' ( (lv_region_50_0= RULE_INT ) ) ) | (otherlv_51= 'what' otherlv_52= 'will' otherlv_53= 'be' otherlv_54= 'the' otherlv_55= 'Temperature' otherlv_56= 'if' otherlv_57= 'we' otherlv_58= 'Create' otherlv_59= 'Lake' otherlv_60= 'Over' otherlv_61= 'Area' ( (lv_area_62_0= RULE_INT ) ) otherlv_63= 'Square' otherlv_64= 'Meter' otherlv_65= 'in' otherlv_66= 'Region' ( (lv_region_67_0= RULE_INT ) ) ) | (otherlv_68= 'WHAT' otherlv_69= 'WILL' otherlv_70= 'BE' otherlv_71= 'THE' otherlv_72= 'TEMPERATURE' otherlv_73= 'IF' otherlv_74= 'WE' otherlv_75= 'CREATE' otherlv_76= 'LAKE' otherlv_77= 'OVER' otherlv_78= 'AREA' ( (lv_area_79_0= RULE_INT ) ) otherlv_80= 'SQUARE' otherlv_81= 'METER' otherlv_82= 'IN' otherlv_83= 'REGION' ( (lv_region_84_0= RULE_INT ) ) ) )";
        }
    }
    static final String dfa_19s = "\12\uffff";
    static final String dfa_20s = "\1\10\11\uffff";
    static final String dfa_21s = "\1\4\7\0\2\uffff";
    static final String dfa_22s = "\1\u00c5\7\0\2\uffff";
    static final String dfa_23s = "\10\uffff\1\2\1\1";
    static final String dfa_24s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\2\uffff}>";
    static final String[] dfa_25s = {
            "\5\10\25\uffff\1\10\55\uffff\1\10\64\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\43\10\1\uffff\32\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = dfa_19;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "7345:4: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA21_1 = input.LA(1);

                         
                        int index21_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMycnl()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index21_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA21_2 = input.LA(1);

                         
                        int index21_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMycnl()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index21_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA21_3 = input.LA(1);

                         
                        int index21_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMycnl()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index21_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA21_4 = input.LA(1);

                         
                        int index21_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMycnl()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index21_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA21_5 = input.LA(1);

                         
                        int index21_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMycnl()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index21_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA21_6 = input.LA(1);

                         
                        int index21_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMycnl()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index21_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA21_7 = input.LA(1);

                         
                        int index21_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMycnl()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index21_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 21, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\1\1\12\uffff";
    static final String dfa_27s = "\1\4\1\uffff\10\0\1\uffff";
    static final String dfa_28s = "\1\u00c5\1\uffff\10\0\1\uffff";
    static final String dfa_29s = "\1\uffff\1\2\10\uffff\1\1";
    static final String dfa_30s = "\2\uffff\1\2\1\0\1\6\1\7\1\1\1\5\1\3\1\4\1\uffff}>";
    static final String[] dfa_31s = {
            "\5\1\25\uffff\1\1\55\uffff\1\1\64\uffff\5\1\1\2\1\3\10\1\1\4\1\5\1\6\1\7\1\10\1\11\25\1\1\uffff\32\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA31 extends DFA {

        public DFA31(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 31;
            this.eot = dfa_13;
            this.eof = dfa_26;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "()* loopback of 8059:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA31_3 = input.LA(1);

                         
                        int index31_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMycnl()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index31_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA31_6 = input.LA(1);

                         
                        int index31_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMycnl()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index31_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA31_2 = input.LA(1);

                         
                        int index31_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMycnl()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index31_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA31_8 = input.LA(1);

                         
                        int index31_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMycnl()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index31_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA31_9 = input.LA(1);

                         
                        int index31_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMycnl()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index31_9);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA31_7 = input.LA(1);

                         
                        int index31_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMycnl()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index31_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA31_4 = input.LA(1);

                         
                        int index31_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMycnl()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index31_4);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA31_5 = input.LA(1);

                         
                        int index31_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMycnl()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index31_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 31, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_32s = "\1\u0086\2\uffff\1\u0087\7\uffff";
    static final String dfa_33s = "\1\u0095\2\uffff\1\u0092\7\uffff";
    static final String dfa_34s = "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\7\1\10\1\11\1\3\1\6";
    static final String[] dfa_35s = {
            "\1\6\1\3\10\uffff\1\1\1\2\1\4\1\5\1\7\1\10",
            "",
            "",
            "\1\12\12\uffff\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[][] dfa_35 = unpackEncodedStringArray(dfa_35s);

    class DFA34 extends DFA {

        public DFA34(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 34;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_17;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "8135:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )";
        }
    }
    static final String dfa_36s = "\116\uffff";
    static final String dfa_37s = "\1\2\115\uffff";
    static final String dfa_38s = "\1\4\1\0\114\uffff";
    static final String dfa_39s = "\1\u00c5\1\0\114\uffff";
    static final String dfa_40s = "\2\uffff\1\2\112\uffff\1\1";
    static final String dfa_41s = "\1\uffff\1\0\114\uffff}>";
    static final String[] dfa_42s = {
            "\5\2\25\uffff\1\2\55\uffff\1\2\64\uffff\43\2\1\1\6\2\1\uffff\32\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final char[] dfa_38 = DFA.unpackEncodedStringToUnsignedChars(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[][] dfa_42 = unpackEncodedStringArray(dfa_42s);

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = dfa_36;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "9036:5: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA50_1 = input.LA(1);

                         
                        int index50_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index50_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 50, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_43s = "\44\uffff";
    static final String dfa_44s = "\1\4\2\0\41\uffff";
    static final String dfa_45s = "\1\u00c4\2\0\41\uffff";
    static final String dfa_46s = "\3\uffff\2\1\1\2\35\uffff\1\3";
    static final String dfa_47s = "\1\0\1\1\1\2\41\uffff}>";
    static final String[] dfa_48s = {
            "\4\5\1\1\25\uffff\1\5\55\uffff\1\5\71\uffff\1\5\14\uffff\1\3\2\uffff\2\5\4\uffff\1\5\7\uffff\1\2\1\43\2\5\1\uffff\1\5\1\uffff\1\4\2\uffff\1\5\3\uffff\2\5\2\uffff\15\5\1\uffff\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final char[] dfa_44 = DFA.unpackEncodedStringToUnsignedChars(dfa_44s);
    static final char[] dfa_45 = DFA.unpackEncodedStringToUnsignedChars(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[][] dfa_48 = unpackEncodedStringArray(dfa_48s);

    class DFA49 extends DFA {

        public DFA49(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 49;
            this.eot = dfa_43;
            this.eof = dfa_43;
            this.min = dfa_44;
            this.max = dfa_45;
            this.accept = dfa_46;
            this.special = dfa_47;
            this.transition = dfa_48;
        }
        public String getDescription() {
            return "9055:6: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA49_0 = input.LA(1);

                         
                        int index49_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA49_0==RULE_ID) ) {s = 1;}

                        else if ( (LA49_0==164) ) {s = 2;}

                        else if ( (LA49_0==147) && (synpred17_InternalMycnl())) {s = 3;}

                        else if ( (LA49_0==171) && (synpred17_InternalMycnl())) {s = 4;}

                        else if ( ((LA49_0>=RULE_INT && LA49_0<=RULE_DECIMAL)||LA49_0==30||LA49_0==76||LA49_0==134||(LA49_0>=150 && LA49_0<=151)||LA49_0==156||(LA49_0>=166 && LA49_0<=167)||LA49_0==169||LA49_0==174||(LA49_0>=178 && LA49_0<=179)||(LA49_0>=182 && LA49_0<=194)||LA49_0==196) ) {s = 5;}

                        else if ( (LA49_0==165) ) {s = 35;}

                         
                        input.seek(index49_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA49_1 = input.LA(1);

                         
                        int index49_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalMycnl()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index49_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA49_2 = input.LA(1);

                         
                        int index49_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalMycnl()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index49_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 49, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_49s = {
            "\5\2\25\uffff\1\2\55\uffff\1\2\64\uffff\50\2\1\1\1\2\1\uffff\32\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_49 = unpackEncodedStringArray(dfa_49s);

    class DFA51 extends DFA {

        public DFA51(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 51;
            this.eot = dfa_36;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "9153:5: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA51_1 = input.LA(1);

                         
                        int index51_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index51_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 51, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_50s = "\40\uffff";
    static final String dfa_51s = "\1\4\26\uffff\1\0\10\uffff";
    static final String dfa_52s = "\1\u00c4\26\uffff\1\0\10\uffff";
    static final String dfa_53s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\6\uffff\1\6\11\uffff\1\7\1\uffff\1\12\1\13\1\14\1\15\1\16\1\17\1\10\1\11";
    static final String dfa_54s = "\1\0\26\uffff\1\1\10\uffff}>";
    static final String[] dfa_55s = {
            "\4\14\1\5\25\uffff\1\26\55\uffff\1\27\71\uffff\1\5\35\uffff\1\35\1\uffff\1\14\1\2\1\uffff\1\14\4\uffff\1\3\3\uffff\1\30\1\31\2\uffff\5\5\1\1\4\14\1\32\1\33\1\34\1\uffff\1\4",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final char[] dfa_51 = DFA.unpackEncodedStringToUnsignedChars(dfa_51s);
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[][] dfa_55 = unpackEncodedStringArray(dfa_55s);

    class DFA53 extends DFA {

        public DFA53(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 53;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_51;
            this.max = dfa_52;
            this.accept = dfa_53;
            this.special = dfa_54;
            this.transition = dfa_55;
        }
        public String getDescription() {
            return "9198:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA53_0 = input.LA(1);

                         
                        int index53_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA53_0==187) ) {s = 1;}

                        else if ( (LA53_0==167) ) {s = 2;}

                        else if ( (LA53_0==174) ) {s = 3;}

                        else if ( (LA53_0==196) && (synpred19_InternalMycnl())) {s = 4;}

                        else if ( (LA53_0==RULE_ID||LA53_0==134||(LA53_0>=182 && LA53_0<=186)) ) {s = 5;}

                        else if ( ((LA53_0>=RULE_INT && LA53_0<=RULE_DECIMAL)||LA53_0==166||LA53_0==169||(LA53_0>=188 && LA53_0<=191)) ) {s = 12;}

                        else if ( (LA53_0==30) ) {s = 22;}

                        else if ( (LA53_0==76) ) {s = 23;}

                        else if ( (LA53_0==178) ) {s = 24;}

                        else if ( (LA53_0==179) ) {s = 25;}

                        else if ( (LA53_0==192) ) {s = 26;}

                        else if ( (LA53_0==193) ) {s = 27;}

                        else if ( (LA53_0==194) ) {s = 28;}

                        else if ( (LA53_0==164) ) {s = 29;}

                         
                        input.seek(index53_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA53_23 = input.LA(1);

                         
                        int index53_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalMycnl()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index53_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 53, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_56s = "\46\uffff";
    static final String dfa_57s = "\1\4\2\0\43\uffff";
    static final String dfa_58s = "\1\u00c4\2\0\43\uffff";
    static final String dfa_59s = "\3\uffff\2\1\1\2\40\uffff";
    static final String dfa_60s = "\1\0\1\1\1\2\43\uffff}>";
    static final String[] dfa_61s = {
            "\4\5\1\1\25\uffff\1\5\55\uffff\1\5\71\uffff\1\5\14\uffff\1\3\2\uffff\2\5\4\uffff\1\5\7\uffff\1\2\1\uffff\2\5\1\uffff\2\5\1\4\2\uffff\1\5\3\uffff\21\5\1\uffff\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final char[] dfa_58 = DFA.unpackEncodedStringToUnsignedChars(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final short[][] dfa_61 = unpackEncodedStringArray(dfa_61s);

    class DFA62 extends DFA {

        public DFA62(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 62;
            this.eot = dfa_56;
            this.eof = dfa_56;
            this.min = dfa_57;
            this.max = dfa_58;
            this.accept = dfa_59;
            this.special = dfa_60;
            this.transition = dfa_61;
        }
        public String getDescription() {
            return "9690:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA62_0 = input.LA(1);

                         
                        int index62_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA62_0==RULE_ID) ) {s = 1;}

                        else if ( (LA62_0==164) ) {s = 2;}

                        else if ( (LA62_0==147) && (synpred23_InternalMycnl())) {s = 3;}

                        else if ( (LA62_0==171) && (synpred23_InternalMycnl())) {s = 4;}

                        else if ( ((LA62_0>=RULE_INT && LA62_0<=RULE_DECIMAL)||LA62_0==30||LA62_0==76||LA62_0==134||(LA62_0>=150 && LA62_0<=151)||LA62_0==156||(LA62_0>=166 && LA62_0<=167)||(LA62_0>=169 && LA62_0<=170)||LA62_0==174||(LA62_0>=178 && LA62_0<=194)||LA62_0==196) ) {s = 5;}

                         
                        input.seek(index62_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA62_1 = input.LA(1);

                         
                        int index62_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalMycnl()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index62_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA62_2 = input.LA(1);

                         
                        int index62_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalMycnl()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index62_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 62, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_62s = "\43\uffff";
    static final String dfa_63s = "\1\4\1\0\41\uffff";
    static final String dfa_64s = "\1\u00c4\1\0\41\uffff";
    static final String dfa_65s = "\2\uffff\1\2\37\uffff\1\1";
    static final String dfa_66s = "\1\uffff\1\0\41\uffff}>";
    static final String[] dfa_67s = {
            "\5\2\25\uffff\1\2\55\uffff\1\2\71\uffff\1\2\14\uffff\1\2\2\uffff\2\2\4\uffff\1\2\7\uffff\1\1\1\uffff\2\2\1\uffff\1\2\4\uffff\1\2\3\uffff\2\2\2\uffff\15\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final char[] dfa_64 = DFA.unpackEncodedStringToUnsignedChars(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final short[][] dfa_67 = unpackEncodedStringArray(dfa_67s);

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_62;
            this.eof = dfa_62;
            this.min = dfa_63;
            this.max = dfa_64;
            this.accept = dfa_65;
            this.special = dfa_66;
            this.transition = dfa_67;
        }
        public String getDescription() {
            return "10156:3: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA69_1 = input.LA(1);

                         
                        int index69_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_InternalMycnl()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index69_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 69, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_68s = "\42\uffff";
    static final String dfa_69s = "\1\4\2\0\37\uffff";
    static final String dfa_70s = "\1\u00c4\2\0\37\uffff";
    static final String dfa_71s = "\3\uffff\1\1\1\2\35\uffff";
    static final String dfa_72s = "\1\0\1\1\1\2\37\uffff}>";
    static final String[] dfa_73s = {
            "\4\4\1\1\25\uffff\1\4\55\uffff\1\4\71\uffff\1\4\14\uffff\1\3\2\uffff\2\4\4\uffff\1\4\7\uffff\1\2\1\uffff\2\4\1\uffff\1\4\4\uffff\1\4\3\uffff\2\4\2\uffff\15\4\1\uffff\1\4",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final char[] dfa_70 = DFA.unpackEncodedStringToUnsignedChars(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[][] dfa_73 = unpackEncodedStringArray(dfa_73s);

    class DFA68 extends DFA {

        public DFA68(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 68;
            this.eot = dfa_68;
            this.eof = dfa_68;
            this.min = dfa_69;
            this.max = dfa_70;
            this.accept = dfa_71;
            this.special = dfa_72;
            this.transition = dfa_73;
        }
        public String getDescription() {
            return "10225:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA68_0 = input.LA(1);

                         
                        int index68_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA68_0==RULE_ID) ) {s = 1;}

                        else if ( (LA68_0==164) ) {s = 2;}

                        else if ( (LA68_0==147) && (synpred27_InternalMycnl())) {s = 3;}

                        else if ( ((LA68_0>=RULE_INT && LA68_0<=RULE_DECIMAL)||LA68_0==30||LA68_0==76||LA68_0==134||(LA68_0>=150 && LA68_0<=151)||LA68_0==156||(LA68_0>=166 && LA68_0<=167)||LA68_0==169||LA68_0==174||(LA68_0>=178 && LA68_0<=179)||(LA68_0>=182 && LA68_0<=194)||LA68_0==196) ) {s = 4;}

                         
                        input.seek(index68_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA68_1 = input.LA(1);

                         
                        int index68_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalMycnl()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index68_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA68_2 = input.LA(1);

                         
                        int index68_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalMycnl()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index68_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 68, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA91 extends DFA {

        public DFA91(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 91;
            this.eot = dfa_36;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "11354:3: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA91_1 = input.LA(1);

                         
                        int index91_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index91_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 91, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA90 extends DFA {

        public DFA90(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 90;
            this.eot = dfa_43;
            this.eof = dfa_43;
            this.min = dfa_44;
            this.max = dfa_45;
            this.accept = dfa_46;
            this.special = dfa_47;
            this.transition = dfa_48;
        }
        public String getDescription() {
            return "11373:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA90_0 = input.LA(1);

                         
                        int index90_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA90_0==RULE_ID) ) {s = 1;}

                        else if ( (LA90_0==164) ) {s = 2;}

                        else if ( (LA90_0==147) && (synpred31_InternalMycnl())) {s = 3;}

                        else if ( (LA90_0==171) && (synpred31_InternalMycnl())) {s = 4;}

                        else if ( ((LA90_0>=RULE_INT && LA90_0<=RULE_DECIMAL)||LA90_0==30||LA90_0==76||LA90_0==134||(LA90_0>=150 && LA90_0<=151)||LA90_0==156||(LA90_0>=166 && LA90_0<=167)||LA90_0==169||LA90_0==174||(LA90_0>=178 && LA90_0<=179)||(LA90_0>=182 && LA90_0<=194)||LA90_0==196) ) {s = 5;}

                        else if ( (LA90_0==165) ) {s = 35;}

                         
                        input.seek(index90_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA90_1 = input.LA(1);

                         
                        int index90_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalMycnl()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index90_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA90_2 = input.LA(1);

                         
                        int index90_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalMycnl()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index90_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 90, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA92 extends DFA {

        public DFA92(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 92;
            this.eot = dfa_36;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "11471:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA92_1 = input.LA(1);

                         
                        int index92_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index92_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 92, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_74s = {
            "\5\2\25\uffff\1\2\55\uffff\1\2\64\uffff\5\2\1\1\44\2\1\uffff\32\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_74 = unpackEncodedStringArray(dfa_74s);

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = dfa_36;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_74;
        }
        public String getDescription() {
            return "11630:3: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA96_1 = input.LA(1);

                         
                        int index96_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index96_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 96, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA99 extends DFA {

        public DFA99(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 99;
            this.eot = dfa_36;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "11687:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA99_1 = input.LA(1);

                         
                        int index99_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 99, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA98 extends DFA {

        public DFA98(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 98;
            this.eot = dfa_43;
            this.eof = dfa_43;
            this.min = dfa_44;
            this.max = dfa_45;
            this.accept = dfa_46;
            this.special = dfa_47;
            this.transition = dfa_48;
        }
        public String getDescription() {
            return "11706:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA98_0 = input.LA(1);

                         
                        int index98_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA98_0==RULE_ID) ) {s = 1;}

                        else if ( (LA98_0==164) ) {s = 2;}

                        else if ( (LA98_0==147) && (synpred35_InternalMycnl())) {s = 3;}

                        else if ( (LA98_0==171) && (synpred35_InternalMycnl())) {s = 4;}

                        else if ( ((LA98_0>=RULE_INT && LA98_0<=RULE_DECIMAL)||LA98_0==30||LA98_0==76||LA98_0==134||(LA98_0>=150 && LA98_0<=151)||LA98_0==156||(LA98_0>=166 && LA98_0<=167)||LA98_0==169||LA98_0==174||(LA98_0>=178 && LA98_0<=179)||(LA98_0>=182 && LA98_0<=194)||LA98_0==196) ) {s = 5;}

                        else if ( (LA98_0==165) ) {s = 35;}

                         
                        input.seek(index98_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA98_1 = input.LA(1);

                         
                        int index98_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalMycnl()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index98_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA98_2 = input.LA(1);

                         
                        int index98_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalMycnl()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index98_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 98, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA100 extends DFA {

        public DFA100(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 100;
            this.eot = dfa_36;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "11804:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA100_1 = input.LA(1);

                         
                        int index100_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index100_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 100, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_75s = "\1\41\115\uffff";
    static final String dfa_76s = "\1\4\40\0\55\uffff";
    static final String dfa_77s = "\1\u00c5\40\0\55\uffff";
    static final String dfa_78s = "\41\uffff\1\2\53\uffff\1\1";
    static final String dfa_79s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\55\uffff}>";
    static final String[] dfa_80s = {
            "\1\24\1\27\1\23\1\25\1\1\25\uffff\1\31\55\uffff\1\32\64\uffff\5\41\1\15\17\41\1\10\1\7\4\41\1\6\7\41\1\40\1\41\1\17\1\12\1\41\1\20\1\41\1\uffff\2\41\1\13\3\41\1\33\1\34\2\41\1\2\1\3\1\4\1\5\1\16\1\11\1\21\1\22\1\26\1\30\1\35\1\36\1\37\1\41\1\14\1\41",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final char[] dfa_76 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final char[] dfa_77 = DFA.unpackEncodedStringToUnsignedChars(dfa_77s);
    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final short[][] dfa_80 = unpackEncodedStringArray(dfa_80s);

    class DFA103 extends DFA {

        public DFA103(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 103;
            this.eot = dfa_36;
            this.eof = dfa_75;
            this.min = dfa_76;
            this.max = dfa_77;
            this.accept = dfa_78;
            this.special = dfa_79;
            this.transition = dfa_80;
        }
        public String getDescription() {
            return "12147:3: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA103_1 = input.LA(1);

                         
                        int index103_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA103_2 = input.LA(1);

                         
                        int index103_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA103_3 = input.LA(1);

                         
                        int index103_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA103_4 = input.LA(1);

                         
                        int index103_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA103_5 = input.LA(1);

                         
                        int index103_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA103_6 = input.LA(1);

                         
                        int index103_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA103_7 = input.LA(1);

                         
                        int index103_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA103_8 = input.LA(1);

                         
                        int index103_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA103_9 = input.LA(1);

                         
                        int index103_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA103_10 = input.LA(1);

                         
                        int index103_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA103_11 = input.LA(1);

                         
                        int index103_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA103_12 = input.LA(1);

                         
                        int index103_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA103_13 = input.LA(1);

                         
                        int index103_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA103_14 = input.LA(1);

                         
                        int index103_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA103_15 = input.LA(1);

                         
                        int index103_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA103_16 = input.LA(1);

                         
                        int index103_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA103_17 = input.LA(1);

                         
                        int index103_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA103_18 = input.LA(1);

                         
                        int index103_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA103_19 = input.LA(1);

                         
                        int index103_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA103_20 = input.LA(1);

                         
                        int index103_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA103_21 = input.LA(1);

                         
                        int index103_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA103_22 = input.LA(1);

                         
                        int index103_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA103_23 = input.LA(1);

                         
                        int index103_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA103_24 = input.LA(1);

                         
                        int index103_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA103_25 = input.LA(1);

                         
                        int index103_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA103_26 = input.LA(1);

                         
                        int index103_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA103_27 = input.LA(1);

                         
                        int index103_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA103_28 = input.LA(1);

                         
                        int index103_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA103_29 = input.LA(1);

                         
                        int index103_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA103_30 = input.LA(1);

                         
                        int index103_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA103_31 = input.LA(1);

                         
                        int index103_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA103_32 = input.LA(1);

                         
                        int index103_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMycnl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index103_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 103, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_81s = "\117\uffff";
    static final String dfa_82s = "\1\2\116\uffff";
    static final String dfa_83s = "\1\4\1\0\115\uffff";
    static final String dfa_84s = "\1\u00c7\1\0\115\uffff";
    static final String dfa_85s = "\2\uffff\1\2\113\uffff\1\1";
    static final String dfa_86s = "\1\uffff\1\0\115\uffff}>";
    static final String[] dfa_87s = {
            "\5\2\25\uffff\1\2\55\uffff\1\2\64\uffff\5\2\1\1\44\2\1\uffff\32\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final char[] dfa_83 = DFA.unpackEncodedStringToUnsignedChars(dfa_83s);
    static final char[] dfa_84 = DFA.unpackEncodedStringToUnsignedChars(dfa_84s);
    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final short[][] dfa_87 = unpackEncodedStringArray(dfa_87s);

    class DFA121 extends DFA {

        public DFA121(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 121;
            this.eot = dfa_81;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_86;
            this.transition = dfa_87;
        }
        public String getDescription() {
            return "12805:3: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA121_1 = input.LA(1);

                         
                        int index121_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalMycnl()) ) {s = 78;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index121_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 121, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA119 extends DFA {

        public DFA119(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 119;
            this.eot = dfa_81;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_86;
            this.transition = dfa_87;
        }
        public String getDescription() {
            return "12899:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA119_1 = input.LA(1);

                         
                        int index119_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalMycnl()) ) {s = 78;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index119_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 119, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_88s = "\7\uffff";
    static final String dfa_89s = "\2\uffff\1\4\3\uffff\1\4";
    static final String dfa_90s = "\1\10\1\uffff\1\u00a0\1\10\2\uffff\1\u00a0";
    static final String dfa_91s = "\1\u00b7\1\uffff\1\u00ac\1\u0098\2\uffff\1\u00ac";
    static final String dfa_92s = "\1\uffff\1\1\2\uffff\1\2\1\3\1\uffff";
    static final String dfa_93s = "\7\uffff}>";
    static final String[] dfa_94s = {
            "\1\2\u00ae\uffff\1\1",
            "",
            "\1\3\13\uffff\1\4",
            "\1\6\u008f\uffff\1\5",
            "",
            "",
            "\1\3\13\uffff\1\4"
    };

    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final char[] dfa_90 = DFA.unpackEncodedStringToUnsignedChars(dfa_90s);
    static final char[] dfa_91 = DFA.unpackEncodedStringToUnsignedChars(dfa_91s);
    static final short[] dfa_92 = DFA.unpackEncodedString(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final short[][] dfa_94 = unpackEncodedStringArray(dfa_94s);

    class DFA128 extends DFA {

        public DFA128(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 128;
            this.eot = dfa_88;
            this.eof = dfa_89;
            this.min = dfa_90;
            this.max = dfa_91;
            this.accept = dfa_92;
            this.special = dfa_93;
            this.transition = dfa_94;
        }
        public String getDescription() {
            return "13361:3: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0801002002222002L,0x0000000000000021L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000001000008000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000800000080000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0400000000800000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000000000L,0x0010000000000000L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000000L,0x0200000000000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x00000000400001F0L,0x0000000000001000L,0xFFCC42D010C00040L,0x0000000000000017L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x00000000000000FEL});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000180L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000007800L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x00000000000081C0L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000100L,0x0000000000000000L,0x0000001000080000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x00000000003F00C0L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000080040L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000C00000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x000000000F000000L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x00000000C0000000L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000700000000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000100L,0x0000000000000000L,0x03C0000000000000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000100L,0x0000000000000000L,0x07C0000000000040L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000000100L,0x0000000000000000L,0x0000001000080000L,0x0000000000000040L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000800000080L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000021700000000L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x00000000400001F0L,0x0000000000001000L,0xFFCC4AF010C80040L,0x0000000000000017L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002800000000L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000020700000000L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x00000000400001F0L,0x0000000000001000L,0xFFCC43D010C00040L,0x0000000000000017L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000010800000000L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x00000000400001F0L,0x0000000000001000L,0xFFCC46D010C00040L,0x0000000000000017L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040800000000L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x00000000400001F0L,0x0000000000001000L,0xFFFC4ED010C80040L,0x0000000000000017L});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000080800000000L});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x00000000400001F0L,0x0000000000001000L,0xFFFC46D010C00040L,0x0000000000000017L});
    public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x00000000400001F2L,0x0000000000001000L,0xFFFC52D010C00040L,0x0000000000000017L});
    public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x00000000400001F2L,0x0000000000001000L,0xFFFC42D010C00040L,0x0000000000000017L});
    public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x00000000400001F0L,0x0000000000001000L,0xFFCC42D010C80040L,0x0000000000000017L});
    public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0000000000000100L,0x0000000000000000L,0x0003811800080000L});
    public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0002800800000000L});
    public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000800800000000L});
    public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x00000000400001F0L,0x0000000000001000L,0xFFFC52D010C00040L,0x0000000000000017L});
    public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000100800000000L});
    public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x00000000400001F0L,0x0000000000001000L,0xFFFC42D010C00040L,0x0000000000000017L});
    public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x00000000400001F0L,0x0000000000001000L,0xFFCC52D010C00040L,0x0000000000000017L});
    public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x00000000400001F0L,0x0000000000001000L,0xFFCC42F010C00040L,0x0000000000000017L});
    public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x00000000400001F0L,0x0000000000001000L,0xFFFC43D010C00040L,0x0000000000000017L});
    public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x00000000400001F0L,0x0000000000001000L,0xFFFC53D010C00040L,0x0000000000000017L});
    public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000021000000000L});
    public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000021000000040L});
    public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000022000000000L});
    public static final BitSet FOLLOW_178 = new BitSet(new long[]{0x00000000400001F2L,0x0000000000001000L,0xFFCC42D010C00040L,0x0000000000000017L});
    public static final BitSet FOLLOW_179 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000028L});
    public static final BitSet FOLLOW_180 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000028L});
    public static final BitSet FOLLOW_181 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_182 = new BitSet(new long[]{0x0000000000000090L});
    public static final BitSet FOLLOW_183 = new BitSet(new long[]{0x0000000000000100L,0x0000000000000000L,0x0000003000080000L});
    public static final BitSet FOLLOW_184 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_185 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_186 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000100000040L});
    public static final BitSet FOLLOW_187 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0440000000000000L});
    public static final BitSet FOLLOW_188 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_189 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_190 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_191 = new BitSet(new long[]{0x0000000000000100L,0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_192 = new BitSet(new long[]{0x0000000000000100L,0x0000000000000000L,0x0200000000000000L});
    public static final BitSet FOLLOW_193 = new BitSet(new long[]{0x0000000000000100L,0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_194 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_195 = new BitSet(new long[]{0x0000000000000102L});

}