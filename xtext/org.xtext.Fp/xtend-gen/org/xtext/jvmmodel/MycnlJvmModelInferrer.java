/**
 * generated by Xtext 2.18.0
 */
package org.xtext.jvmmodel;

import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.common.types.JvmField;
import org.eclipse.xtext.common.types.JvmFormalParameter;
import org.eclipse.xtext.common.types.JvmGenericType;
import org.eclipse.xtext.common.types.JvmMember;
import org.eclipse.xtext.common.types.JvmOperation;
import org.eclipse.xtext.xbase.compiler.output.ITreeAppendable;
import org.eclipse.xtext.xbase.jvmmodel.AbstractModelInferrer;
import org.eclipse.xtext.xbase.jvmmodel.IJvmDeclaredTypeAcceptor;
import org.eclipse.xtext.xbase.jvmmodel.JvmTypesBuilder;
import org.eclipse.xtext.xbase.lib.Extension;
import org.eclipse.xtext.xbase.lib.Procedures.Procedure1;
import org.xtext.fp.DesignCommercial;
import org.xtext.fp.DesignEducational;
import org.xtext.fp.DesignResidential;
import org.xtext.fp.Model;
import org.xtext.fp.Query;
import org.xtext.fp.caltreesBuildAction;
import org.xtext.fp.findtempBuilAction;
import org.xtext.fp.findtempCreateLake;
import org.xtext.fp.findtempCutTrees;
import org.xtext.fp.findtempDemolish;
import org.xtext.fp.findtempPlantBushes;
import org.xtext.fp.findtempPlantTrees;
import org.xtext.fp.findtempRemoveBushes;
import org.xtext.fp.findtempRemoveLake;
import org.xtext.fp.showRegion;

/**
 * <p>Infers a JVM model from the source model.</p>
 * 
 * <p>The JVM model should contain all elements that would appear in the Java code
 * which is generated from the source model. Other models link against the JVM model rather than the source model.</p>
 */
@SuppressWarnings("all")
public class MycnlJvmModelInferrer extends AbstractModelInferrer {
  /**
   * convenience API to build and initialize JVM types and their members.
   */
  @Inject
  @Extension
  private JvmTypesBuilder _jvmTypesBuilder;
  
  /**
   * The dispatch method {@code infer} is called for each instance of the
   * given element's type that is contained in a resource.
   * 
   * @param element
   *            the model to create one or more
   *            {@link org.eclipse.xtext.common.types.JvmDeclaredType declared
   *            types} from.
   * @param acceptor
   *            each created
   *            {@link org.eclipse.xtext.common.types.JvmDeclaredType type}
   *            without a container should be passed to the acceptor in order
   *            get attached to the current resource. The acceptor's
   *            {@link IJvmDeclaredTypeAcceptor#accept(org.eclipse.xtext.common.types.JvmDeclaredType)
   *            accept(..)} method takes the constructed empty type for the
   *            pre-indexing phase. This one is further initialized in the
   *            indexing phase using the lambda you pass as the last argument.
   * @param isPreIndexingPhase
   *            whether the method is called in a pre-indexing phase, i.e.
   *            when the global index is not yet fully updated. You must not
   *            rely on linking using the index if isPreIndexingPhase is
   *            <code>true</code>.
   */
  protected void _infer(final Model element, final IJvmDeclaredTypeAcceptor acceptor, final boolean isPreIndexingPhase) {
    EList<Query> _query = element.getQuery();
    for (final Query feature : _query) {
      boolean _matched = false;
      if (feature instanceof findtempBuilAction) {
        _matched=true;
        final Procedure1<JvmGenericType> _function = (JvmGenericType it) -> {
          EList<JvmMember> _members = it.getMembers();
          final Procedure1<JvmField> _function_1 = (JvmField it_1) -> {
            it_1.setStatic(true);
            final Procedure1<ITreeAppendable> _function_2 = (ITreeAppendable it_2) -> {
              StringConcatenation _builder = new StringConcatenation();
              int _no_of_buildings = ((findtempBuilAction)feature).getNo_of_buildings();
              String _plus = (_builder.toString() + Integer.valueOf(_no_of_buildings));
              StringConcatenation _builder_1 = new StringConcatenation();
              String _plus_1 = (_plus + _builder_1);
              it_2.append(_plus_1);
            };
            this._jvmTypesBuilder.setInitializer(it_1, _function_2);
          };
          JvmField _field = this._jvmTypesBuilder.toField(feature, "buildingCount", this._typeReferenceBuilder.typeRef(int.class), _function_1);
          this._jvmTypesBuilder.<JvmField>operator_add(_members, _field);
          EList<JvmMember> _members_1 = it.getMembers();
          JvmOperation _getter = this._jvmTypesBuilder.toGetter(feature, "buildingCount", this._typeReferenceBuilder.typeRef(int.class));
          this._jvmTypesBuilder.<JvmOperation>operator_add(_members_1, _getter);
          EList<JvmMember> _members_2 = it.getMembers();
          JvmOperation _setter = this._jvmTypesBuilder.toSetter(feature, "buildingCount", this._typeReferenceBuilder.typeRef(int.class));
          this._jvmTypesBuilder.<JvmOperation>operator_add(_members_2, _setter);
          EList<JvmMember> _members_3 = it.getMembers();
          final Procedure1<JvmField> _function_2 = (JvmField it_1) -> {
            it_1.setStatic(true);
            final Procedure1<ITreeAppendable> _function_3 = (ITreeAppendable it_2) -> {
              StringConcatenation _builder = new StringConcatenation();
              int _length = ((findtempBuilAction)feature).getLength();
              String _plus = (_builder.toString() + Integer.valueOf(_length));
              StringConcatenation _builder_1 = new StringConcatenation();
              String _plus_1 = (_plus + _builder_1);
              it_2.append(_plus_1);
            };
            this._jvmTypesBuilder.setInitializer(it_1, _function_3);
          };
          JvmField _field_1 = this._jvmTypesBuilder.toField(feature, "l", this._typeReferenceBuilder.typeRef(int.class), _function_2);
          this._jvmTypesBuilder.<JvmField>operator_add(_members_3, _field_1);
          EList<JvmMember> _members_4 = it.getMembers();
          JvmOperation _getter_1 = this._jvmTypesBuilder.toGetter(feature, "l", this._typeReferenceBuilder.typeRef(int.class));
          this._jvmTypesBuilder.<JvmOperation>operator_add(_members_4, _getter_1);
          EList<JvmMember> _members_5 = it.getMembers();
          JvmOperation _setter_1 = this._jvmTypesBuilder.toSetter(feature, "l", this._typeReferenceBuilder.typeRef(int.class));
          this._jvmTypesBuilder.<JvmOperation>operator_add(_members_5, _setter_1);
          EList<JvmMember> _members_6 = it.getMembers();
          final Procedure1<JvmField> _function_3 = (JvmField it_1) -> {
            it_1.setStatic(true);
            final Procedure1<ITreeAppendable> _function_4 = (ITreeAppendable it_2) -> {
              StringConcatenation _builder = new StringConcatenation();
              int _breadth = ((findtempBuilAction)feature).getBreadth();
              String _plus = (_builder.toString() + Integer.valueOf(_breadth));
              StringConcatenation _builder_1 = new StringConcatenation();
              String _plus_1 = (_plus + _builder_1);
              it_2.append(_plus_1);
            };
            this._jvmTypesBuilder.setInitializer(it_1, _function_4);
          };
          JvmField _field_2 = this._jvmTypesBuilder.toField(feature, "b", this._typeReferenceBuilder.typeRef(int.class), _function_3);
          this._jvmTypesBuilder.<JvmField>operator_add(_members_6, _field_2);
          EList<JvmMember> _members_7 = it.getMembers();
          JvmOperation _getter_2 = this._jvmTypesBuilder.toGetter(feature, "b", this._typeReferenceBuilder.typeRef(int.class));
          this._jvmTypesBuilder.<JvmOperation>operator_add(_members_7, _getter_2);
          EList<JvmMember> _members_8 = it.getMembers();
          JvmOperation _setter_2 = this._jvmTypesBuilder.toSetter(feature, "b", this._typeReferenceBuilder.typeRef(int.class));
          this._jvmTypesBuilder.<JvmOperation>operator_add(_members_8, _setter_2);
          EList<JvmMember> _members_9 = it.getMembers();
          final Procedure1<JvmField> _function_4 = (JvmField it_1) -> {
            it_1.setStatic(true);
            final Procedure1<ITreeAppendable> _function_5 = (ITreeAppendable it_2) -> {
              StringConcatenation _builder = new StringConcatenation();
              int _height = ((findtempBuilAction)feature).getHeight();
              String _plus = (_builder.toString() + Integer.valueOf(_height));
              StringConcatenation _builder_1 = new StringConcatenation();
              String _plus_1 = (_plus + _builder_1);
              it_2.append(_plus_1);
            };
            this._jvmTypesBuilder.setInitializer(it_1, _function_5);
          };
          JvmField _field_3 = this._jvmTypesBuilder.toField(feature, "h", this._typeReferenceBuilder.typeRef(int.class), _function_4);
          this._jvmTypesBuilder.<JvmField>operator_add(_members_9, _field_3);
          EList<JvmMember> _members_10 = it.getMembers();
          JvmOperation _getter_3 = this._jvmTypesBuilder.toGetter(feature, "h", this._typeReferenceBuilder.typeRef(int.class));
          this._jvmTypesBuilder.<JvmOperation>operator_add(_members_10, _getter_3);
          EList<JvmMember> _members_11 = it.getMembers();
          JvmOperation _setter_3 = this._jvmTypesBuilder.toSetter(feature, "h", this._typeReferenceBuilder.typeRef(int.class));
          this._jvmTypesBuilder.<JvmOperation>operator_add(_members_11, _setter_3);
          EList<JvmMember> _members_12 = it.getMembers();
          final Procedure1<JvmField> _function_5 = (JvmField it_1) -> {
            it_1.setStatic(true);
            final Procedure1<ITreeAppendable> _function_6 = (ITreeAppendable it_2) -> {
              StringConcatenation _builder = new StringConcatenation();
              int _region = ((findtempBuilAction)feature).getRegion();
              String _plus = (_builder.toString() + Integer.valueOf(_region));
              StringConcatenation _builder_1 = new StringConcatenation();
              String _plus_1 = (_plus + _builder_1);
              it_2.append(_plus_1);
            };
            this._jvmTypesBuilder.setInitializer(it_1, _function_6);
          };
          JvmField _field_4 = this._jvmTypesBuilder.toField(feature, "region", this._typeReferenceBuilder.typeRef(int.class), _function_5);
          this._jvmTypesBuilder.<JvmField>operator_add(_members_12, _field_4);
          EList<JvmMember> _members_13 = it.getMembers();
          JvmOperation _getter_4 = this._jvmTypesBuilder.toGetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
          this._jvmTypesBuilder.<JvmOperation>operator_add(_members_13, _getter_4);
          EList<JvmMember> _members_14 = it.getMembers();
          JvmOperation _setter_4 = this._jvmTypesBuilder.toSetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
          this._jvmTypesBuilder.<JvmOperation>operator_add(_members_14, _setter_4);
          EList<JvmMember> _members_15 = it.getMembers();
          final Procedure1<JvmOperation> _function_6 = (JvmOperation it_1) -> {
            EList<JvmFormalParameter> _parameters = it_1.getParameters();
            JvmFormalParameter _parameter = this._jvmTypesBuilder.toParameter(feature, "args", this._jvmTypesBuilder.addArrayTypeDimension(this._jvmTypesBuilder.newTypeRef(feature, String.class)));
            this._jvmTypesBuilder.<JvmFormalParameter>operator_add(_parameters, _parameter);
            it_1.setStatic(true);
            it_1.setVarArgs(true);
            final Procedure1<ITreeAppendable> _function_7 = (ITreeAppendable it_2) -> {
              StringConcatenation _builder = new StringConcatenation();
              _builder.append("System.out.println(\"findtempBuilAction\");");
              _builder.newLine();
              _builder.append("Region region1 = new Region();");
              _builder.newLine();
              _builder.append("region1.calculateInitialLCZ(region);");
              _builder.newLine();
              _builder.append("region1.findTempBuildAction(buildingCount,l,b,h);");
              _builder.newLine();
              it_2.append(_builder);
            };
            this._jvmTypesBuilder.setBody(it_1, _function_7);
          };
          JvmOperation _method = this._jvmTypesBuilder.toMethod(feature, "main", this._jvmTypesBuilder.newTypeRef(feature, Void.TYPE), _function_6);
          this._jvmTypesBuilder.<JvmOperation>operator_add(_members_15, _method);
        };
        acceptor.<JvmGenericType>accept(this._jvmTypesBuilder.toClass(element, "DetailsExtractor"), _function);
      }
      if (!_matched) {
        if (feature instanceof findtempDemolish) {
          _matched=true;
          final Procedure1<JvmGenericType> _function = (JvmGenericType it) -> {
            EList<JvmMember> _members = it.getMembers();
            final Procedure1<JvmField> _function_1 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_2 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _no_of_buildings = ((findtempDemolish)feature).getNo_of_buildings();
                String _plus = (_builder.toString() + Integer.valueOf(_no_of_buildings));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_2);
            };
            JvmField _field = this._jvmTypesBuilder.toField(feature, "buildingCount", this._typeReferenceBuilder.typeRef(int.class), _function_1);
            this._jvmTypesBuilder.<JvmField>operator_add(_members, _field);
            EList<JvmMember> _members_1 = it.getMembers();
            JvmOperation _getter = this._jvmTypesBuilder.toGetter(feature, "buildingCount", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_1, _getter);
            EList<JvmMember> _members_2 = it.getMembers();
            JvmOperation _setter = this._jvmTypesBuilder.toSetter(feature, "buildingCount", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_2, _setter);
            EList<JvmMember> _members_3 = it.getMembers();
            final Procedure1<JvmField> _function_2 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_3 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _length = ((findtempDemolish)feature).getLength();
                String _plus = (_builder.toString() + Integer.valueOf(_length));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_3);
            };
            JvmField _field_1 = this._jvmTypesBuilder.toField(feature, "l", this._typeReferenceBuilder.typeRef(int.class), _function_2);
            this._jvmTypesBuilder.<JvmField>operator_add(_members_3, _field_1);
            EList<JvmMember> _members_4 = it.getMembers();
            JvmOperation _getter_1 = this._jvmTypesBuilder.toGetter(feature, "l", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_4, _getter_1);
            EList<JvmMember> _members_5 = it.getMembers();
            JvmOperation _setter_1 = this._jvmTypesBuilder.toSetter(feature, "l", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_5, _setter_1);
            EList<JvmMember> _members_6 = it.getMembers();
            final Procedure1<JvmField> _function_3 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_4 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _breadth = ((findtempDemolish)feature).getBreadth();
                String _plus = (_builder.toString() + Integer.valueOf(_breadth));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_4);
            };
            JvmField _field_2 = this._jvmTypesBuilder.toField(feature, "b", this._typeReferenceBuilder.typeRef(int.class), _function_3);
            this._jvmTypesBuilder.<JvmField>operator_add(_members_6, _field_2);
            EList<JvmMember> _members_7 = it.getMembers();
            JvmOperation _getter_2 = this._jvmTypesBuilder.toGetter(feature, "b", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_7, _getter_2);
            EList<JvmMember> _members_8 = it.getMembers();
            JvmOperation _setter_2 = this._jvmTypesBuilder.toSetter(feature, "b", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_8, _setter_2);
            EList<JvmMember> _members_9 = it.getMembers();
            final Procedure1<JvmField> _function_4 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_5 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _height = ((findtempDemolish)feature).getHeight();
                String _plus = (_builder.toString() + Integer.valueOf(_height));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_5);
            };
            JvmField _field_3 = this._jvmTypesBuilder.toField(feature, "h", this._typeReferenceBuilder.typeRef(int.class), _function_4);
            this._jvmTypesBuilder.<JvmField>operator_add(_members_9, _field_3);
            EList<JvmMember> _members_10 = it.getMembers();
            JvmOperation _getter_3 = this._jvmTypesBuilder.toGetter(feature, "h", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_10, _getter_3);
            EList<JvmMember> _members_11 = it.getMembers();
            JvmOperation _setter_3 = this._jvmTypesBuilder.toSetter(feature, "h", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_11, _setter_3);
            EList<JvmMember> _members_12 = it.getMembers();
            final Procedure1<JvmField> _function_5 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_6 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _region = ((findtempDemolish)feature).getRegion();
                String _plus = (_builder.toString() + Integer.valueOf(_region));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_6);
            };
            JvmField _field_4 = this._jvmTypesBuilder.toField(feature, "region", this._typeReferenceBuilder.typeRef(int.class), _function_5);
            this._jvmTypesBuilder.<JvmField>operator_add(_members_12, _field_4);
            EList<JvmMember> _members_13 = it.getMembers();
            JvmOperation _getter_4 = this._jvmTypesBuilder.toGetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_13, _getter_4);
            EList<JvmMember> _members_14 = it.getMembers();
            JvmOperation _setter_4 = this._jvmTypesBuilder.toSetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_14, _setter_4);
            EList<JvmMember> _members_15 = it.getMembers();
            final Procedure1<JvmOperation> _function_6 = (JvmOperation it_1) -> {
              EList<JvmFormalParameter> _parameters = it_1.getParameters();
              JvmFormalParameter _parameter = this._jvmTypesBuilder.toParameter(feature, "args", this._jvmTypesBuilder.addArrayTypeDimension(this._jvmTypesBuilder.newTypeRef(feature, String.class)));
              this._jvmTypesBuilder.<JvmFormalParameter>operator_add(_parameters, _parameter);
              it_1.setStatic(true);
              it_1.setVarArgs(true);
              final Procedure1<ITreeAppendable> _function_7 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                _builder.append("System.out.println(\"findtempDemolish\");");
                _builder.newLine();
                _builder.append("Region region1 = new Region();");
                _builder.newLine();
                _builder.append("region1.calculateInitialLCZ(region);");
                _builder.newLine();
                _builder.append("region1.findtempDemolish(buildingCount,l,b,h);");
                _builder.newLine();
                _builder.newLine();
                it_2.append(_builder);
              };
              this._jvmTypesBuilder.setBody(it_1, _function_7);
            };
            JvmOperation _method = this._jvmTypesBuilder.toMethod(feature, "main", this._jvmTypesBuilder.newTypeRef(feature, Void.TYPE), _function_6);
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_15, _method);
          };
          acceptor.<JvmGenericType>accept(this._jvmTypesBuilder.toClass(element, "DetailsExtractor"), _function);
        }
      }
      if (!_matched) {
        if (feature instanceof findtempPlantTrees) {
          _matched=true;
          final Procedure1<JvmGenericType> _function = (JvmGenericType it) -> {
            EList<JvmMember> _members = it.getMembers();
            final Procedure1<JvmField> _function_1 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_2 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _no_of_trees = ((findtempPlantTrees)feature).getNo_of_trees();
                String _plus = (_builder.toString() + Integer.valueOf(_no_of_trees));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_2);
            };
            JvmField _field = this._jvmTypesBuilder.toField(feature, "treeCount", this._typeReferenceBuilder.typeRef(int.class), _function_1);
            this._jvmTypesBuilder.<JvmField>operator_add(_members, _field);
            EList<JvmMember> _members_1 = it.getMembers();
            JvmOperation _getter = this._jvmTypesBuilder.toGetter(feature, "treeCount", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_1, _getter);
            EList<JvmMember> _members_2 = it.getMembers();
            JvmOperation _setter = this._jvmTypesBuilder.toSetter(feature, "treeCount", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_2, _setter);
            EList<JvmMember> _members_3 = it.getMembers();
            final Procedure1<JvmField> _function_2 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_3 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _region = ((findtempPlantTrees)feature).getRegion();
                String _plus = (_builder.toString() + Integer.valueOf(_region));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_3);
            };
            JvmField _field_1 = this._jvmTypesBuilder.toField(feature, "region", this._typeReferenceBuilder.typeRef(int.class), _function_2);
            this._jvmTypesBuilder.<JvmField>operator_add(_members_3, _field_1);
            EList<JvmMember> _members_4 = it.getMembers();
            JvmOperation _getter_1 = this._jvmTypesBuilder.toGetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_4, _getter_1);
            EList<JvmMember> _members_5 = it.getMembers();
            JvmOperation _setter_1 = this._jvmTypesBuilder.toSetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_5, _setter_1);
            EList<JvmMember> _members_6 = it.getMembers();
            final Procedure1<JvmOperation> _function_3 = (JvmOperation it_1) -> {
              EList<JvmFormalParameter> _parameters = it_1.getParameters();
              JvmFormalParameter _parameter = this._jvmTypesBuilder.toParameter(feature, "args", this._jvmTypesBuilder.addArrayTypeDimension(this._jvmTypesBuilder.newTypeRef(feature, String.class)));
              this._jvmTypesBuilder.<JvmFormalParameter>operator_add(_parameters, _parameter);
              it_1.setStatic(true);
              it_1.setVarArgs(true);
              final Procedure1<ITreeAppendable> _function_4 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                _builder.append("System.out.println(\"findtempPlantTrees\");");
                _builder.newLine();
                _builder.append("Region region1 = new Region();");
                _builder.newLine();
                _builder.append("region1.calculateInitialLCZ(region);");
                _builder.newLine();
                _builder.append("region1.findtempPlantTrees(treeCount);");
                _builder.newLine();
                _builder.newLine();
                it_2.append(_builder);
              };
              this._jvmTypesBuilder.setBody(it_1, _function_4);
            };
            JvmOperation _method = this._jvmTypesBuilder.toMethod(feature, "main", this._jvmTypesBuilder.newTypeRef(feature, Void.TYPE), _function_3);
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_6, _method);
          };
          acceptor.<JvmGenericType>accept(this._jvmTypesBuilder.toClass(element, "DetailsExtractor"), _function);
        }
      }
      if (!_matched) {
        if (feature instanceof findtempCutTrees) {
          _matched=true;
          final Procedure1<JvmGenericType> _function = (JvmGenericType it) -> {
            EList<JvmMember> _members = it.getMembers();
            final Procedure1<JvmField> _function_1 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_2 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _no_of_trees = ((findtempCutTrees)feature).getNo_of_trees();
                String _plus = (_builder.toString() + Integer.valueOf(_no_of_trees));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_2);
            };
            JvmField _field = this._jvmTypesBuilder.toField(feature, "treeCount", this._typeReferenceBuilder.typeRef(int.class), _function_1);
            this._jvmTypesBuilder.<JvmField>operator_add(_members, _field);
            EList<JvmMember> _members_1 = it.getMembers();
            JvmOperation _getter = this._jvmTypesBuilder.toGetter(feature, "treeCount", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_1, _getter);
            EList<JvmMember> _members_2 = it.getMembers();
            JvmOperation _setter = this._jvmTypesBuilder.toSetter(feature, "treeCount", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_2, _setter);
            EList<JvmMember> _members_3 = it.getMembers();
            final Procedure1<JvmField> _function_2 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_3 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _region = ((findtempCutTrees)feature).getRegion();
                String _plus = (_builder.toString() + Integer.valueOf(_region));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_3);
            };
            JvmField _field_1 = this._jvmTypesBuilder.toField(feature, "region", this._typeReferenceBuilder.typeRef(int.class), _function_2);
            this._jvmTypesBuilder.<JvmField>operator_add(_members_3, _field_1);
            EList<JvmMember> _members_4 = it.getMembers();
            JvmOperation _getter_1 = this._jvmTypesBuilder.toGetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_4, _getter_1);
            EList<JvmMember> _members_5 = it.getMembers();
            JvmOperation _setter_1 = this._jvmTypesBuilder.toSetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_5, _setter_1);
            EList<JvmMember> _members_6 = it.getMembers();
            final Procedure1<JvmOperation> _function_3 = (JvmOperation it_1) -> {
              EList<JvmFormalParameter> _parameters = it_1.getParameters();
              JvmFormalParameter _parameter = this._jvmTypesBuilder.toParameter(feature, "args", this._jvmTypesBuilder.addArrayTypeDimension(this._jvmTypesBuilder.newTypeRef(feature, String.class)));
              this._jvmTypesBuilder.<JvmFormalParameter>operator_add(_parameters, _parameter);
              it_1.setStatic(true);
              it_1.setVarArgs(true);
              final Procedure1<ITreeAppendable> _function_4 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                _builder.append("System.out.println(\"findtempCutTrees\");");
                _builder.newLine();
                _builder.append("Region region1 = new Region();");
                _builder.newLine();
                _builder.append("region1.calculateInitialLCZ(region);");
                _builder.newLine();
                _builder.append("region1.findtempCutTrees(treeCount);");
                _builder.newLine();
                it_2.append(_builder);
              };
              this._jvmTypesBuilder.setBody(it_1, _function_4);
            };
            JvmOperation _method = this._jvmTypesBuilder.toMethod(feature, "main", this._jvmTypesBuilder.newTypeRef(feature, Void.TYPE), _function_3);
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_6, _method);
          };
          acceptor.<JvmGenericType>accept(this._jvmTypesBuilder.toClass(element, "DetailsExtractor"), _function);
        }
      }
      if (!_matched) {
        if (feature instanceof findtempPlantBushes) {
          _matched=true;
          final Procedure1<JvmGenericType> _function = (JvmGenericType it) -> {
            EList<JvmMember> _members = it.getMembers();
            final Procedure1<JvmField> _function_1 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_2 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _area = ((findtempPlantBushes)feature).getArea();
                String _plus = (_builder.toString() + Integer.valueOf(_area));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_2);
            };
            JvmField _field = this._jvmTypesBuilder.toField(feature, "area", this._typeReferenceBuilder.typeRef(int.class), _function_1);
            this._jvmTypesBuilder.<JvmField>operator_add(_members, _field);
            EList<JvmMember> _members_1 = it.getMembers();
            JvmOperation _getter = this._jvmTypesBuilder.toGetter(feature, "area", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_1, _getter);
            EList<JvmMember> _members_2 = it.getMembers();
            JvmOperation _setter = this._jvmTypesBuilder.toSetter(feature, "area", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_2, _setter);
            EList<JvmMember> _members_3 = it.getMembers();
            final Procedure1<JvmField> _function_2 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_3 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _region = ((findtempPlantBushes)feature).getRegion();
                String _plus = (_builder.toString() + Integer.valueOf(_region));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_3);
            };
            JvmField _field_1 = this._jvmTypesBuilder.toField(feature, "region", this._typeReferenceBuilder.typeRef(int.class), _function_2);
            this._jvmTypesBuilder.<JvmField>operator_add(_members_3, _field_1);
            EList<JvmMember> _members_4 = it.getMembers();
            JvmOperation _getter_1 = this._jvmTypesBuilder.toGetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_4, _getter_1);
            EList<JvmMember> _members_5 = it.getMembers();
            JvmOperation _setter_1 = this._jvmTypesBuilder.toSetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_5, _setter_1);
            EList<JvmMember> _members_6 = it.getMembers();
            final Procedure1<JvmOperation> _function_3 = (JvmOperation it_1) -> {
              EList<JvmFormalParameter> _parameters = it_1.getParameters();
              JvmFormalParameter _parameter = this._jvmTypesBuilder.toParameter(feature, "args", this._jvmTypesBuilder.addArrayTypeDimension(this._jvmTypesBuilder.newTypeRef(feature, String.class)));
              this._jvmTypesBuilder.<JvmFormalParameter>operator_add(_parameters, _parameter);
              it_1.setStatic(true);
              it_1.setVarArgs(true);
              final Procedure1<ITreeAppendable> _function_4 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                _builder.append("System.out.println(\"findtempPlantBushes\");");
                _builder.newLine();
                _builder.append("Region region1 = new Region();");
                _builder.newLine();
                _builder.append("region1.calculateInitialLCZ(region);");
                _builder.newLine();
                _builder.append("region1.findtempPlantBushes(area);");
                _builder.newLine();
                it_2.append(_builder);
              };
              this._jvmTypesBuilder.setBody(it_1, _function_4);
            };
            JvmOperation _method = this._jvmTypesBuilder.toMethod(feature, "main", this._jvmTypesBuilder.newTypeRef(feature, Void.TYPE), _function_3);
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_6, _method);
          };
          acceptor.<JvmGenericType>accept(this._jvmTypesBuilder.toClass(element, "DetailsExtractor"), _function);
        }
      }
      if (!_matched) {
        if (feature instanceof findtempRemoveBushes) {
          _matched=true;
          final Procedure1<JvmGenericType> _function = (JvmGenericType it) -> {
            EList<JvmMember> _members = it.getMembers();
            final Procedure1<JvmField> _function_1 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_2 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _area = ((findtempRemoveBushes)feature).getArea();
                String _plus = (_builder.toString() + Integer.valueOf(_area));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_2);
            };
            JvmField _field = this._jvmTypesBuilder.toField(feature, "area", this._typeReferenceBuilder.typeRef(int.class), _function_1);
            this._jvmTypesBuilder.<JvmField>operator_add(_members, _field);
            EList<JvmMember> _members_1 = it.getMembers();
            JvmOperation _getter = this._jvmTypesBuilder.toGetter(feature, "area", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_1, _getter);
            EList<JvmMember> _members_2 = it.getMembers();
            JvmOperation _setter = this._jvmTypesBuilder.toSetter(feature, "area", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_2, _setter);
            EList<JvmMember> _members_3 = it.getMembers();
            final Procedure1<JvmField> _function_2 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_3 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _region = ((findtempRemoveBushes)feature).getRegion();
                String _plus = (_builder.toString() + Integer.valueOf(_region));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_3);
            };
            JvmField _field_1 = this._jvmTypesBuilder.toField(feature, "region", this._typeReferenceBuilder.typeRef(int.class), _function_2);
            this._jvmTypesBuilder.<JvmField>operator_add(_members_3, _field_1);
            EList<JvmMember> _members_4 = it.getMembers();
            JvmOperation _getter_1 = this._jvmTypesBuilder.toGetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_4, _getter_1);
            EList<JvmMember> _members_5 = it.getMembers();
            JvmOperation _setter_1 = this._jvmTypesBuilder.toSetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_5, _setter_1);
            EList<JvmMember> _members_6 = it.getMembers();
            final Procedure1<JvmOperation> _function_3 = (JvmOperation it_1) -> {
              EList<JvmFormalParameter> _parameters = it_1.getParameters();
              JvmFormalParameter _parameter = this._jvmTypesBuilder.toParameter(feature, "args", this._jvmTypesBuilder.addArrayTypeDimension(this._jvmTypesBuilder.newTypeRef(feature, String.class)));
              this._jvmTypesBuilder.<JvmFormalParameter>operator_add(_parameters, _parameter);
              it_1.setStatic(true);
              it_1.setVarArgs(true);
              final Procedure1<ITreeAppendable> _function_4 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                _builder.append("System.out.println(\"findtempRemoveBushes\");");
                _builder.newLine();
                _builder.append("Region region1 = new Region();");
                _builder.newLine();
                _builder.append("region1.calculateInitialLCZ(region);");
                _builder.newLine();
                _builder.append("region1.findtempRemoveBushes(area);");
                _builder.newLine();
                it_2.append(_builder);
              };
              this._jvmTypesBuilder.setBody(it_1, _function_4);
            };
            JvmOperation _method = this._jvmTypesBuilder.toMethod(feature, "main", this._jvmTypesBuilder.newTypeRef(feature, Void.TYPE), _function_3);
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_6, _method);
          };
          acceptor.<JvmGenericType>accept(this._jvmTypesBuilder.toClass(element, "DetailsExtractor"), _function);
        }
      }
      if (!_matched) {
        if (feature instanceof findtempCreateLake) {
          _matched=true;
          final Procedure1<JvmGenericType> _function = (JvmGenericType it) -> {
            EList<JvmMember> _members = it.getMembers();
            final Procedure1<JvmField> _function_1 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_2 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _area = ((findtempCreateLake)feature).getArea();
                String _plus = (_builder.toString() + Integer.valueOf(_area));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_2);
            };
            JvmField _field = this._jvmTypesBuilder.toField(feature, "area", this._typeReferenceBuilder.typeRef(int.class), _function_1);
            this._jvmTypesBuilder.<JvmField>operator_add(_members, _field);
            EList<JvmMember> _members_1 = it.getMembers();
            JvmOperation _getter = this._jvmTypesBuilder.toGetter(feature, "area", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_1, _getter);
            EList<JvmMember> _members_2 = it.getMembers();
            JvmOperation _setter = this._jvmTypesBuilder.toSetter(feature, "area", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_2, _setter);
            EList<JvmMember> _members_3 = it.getMembers();
            final Procedure1<JvmField> _function_2 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_3 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _region = ((findtempCreateLake)feature).getRegion();
                String _plus = (_builder.toString() + Integer.valueOf(_region));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_3);
            };
            JvmField _field_1 = this._jvmTypesBuilder.toField(feature, "region", this._typeReferenceBuilder.typeRef(int.class), _function_2);
            this._jvmTypesBuilder.<JvmField>operator_add(_members_3, _field_1);
            EList<JvmMember> _members_4 = it.getMembers();
            JvmOperation _getter_1 = this._jvmTypesBuilder.toGetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_4, _getter_1);
            EList<JvmMember> _members_5 = it.getMembers();
            JvmOperation _setter_1 = this._jvmTypesBuilder.toSetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_5, _setter_1);
            EList<JvmMember> _members_6 = it.getMembers();
            final Procedure1<JvmOperation> _function_3 = (JvmOperation it_1) -> {
              EList<JvmFormalParameter> _parameters = it_1.getParameters();
              JvmFormalParameter _parameter = this._jvmTypesBuilder.toParameter(feature, "args", this._jvmTypesBuilder.addArrayTypeDimension(this._jvmTypesBuilder.newTypeRef(feature, String.class)));
              this._jvmTypesBuilder.<JvmFormalParameter>operator_add(_parameters, _parameter);
              it_1.setStatic(true);
              it_1.setVarArgs(true);
              final Procedure1<ITreeAppendable> _function_4 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                _builder.append("System.out.println(\"findtempCreateLake\");");
                _builder.newLine();
                _builder.append("Region region1 = new Region();");
                _builder.newLine();
                _builder.append("region1.calculateInitialLCZ(region);");
                _builder.newLine();
                _builder.append("region1.findtempCreateLake(area);");
                _builder.newLine();
                it_2.append(_builder);
              };
              this._jvmTypesBuilder.setBody(it_1, _function_4);
            };
            JvmOperation _method = this._jvmTypesBuilder.toMethod(feature, "main", this._jvmTypesBuilder.newTypeRef(feature, Void.TYPE), _function_3);
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_6, _method);
          };
          acceptor.<JvmGenericType>accept(this._jvmTypesBuilder.toClass(element, "DetailsExtractor"), _function);
        }
      }
      if (!_matched) {
        if (feature instanceof findtempRemoveLake) {
          _matched=true;
          final Procedure1<JvmGenericType> _function = (JvmGenericType it) -> {
            EList<JvmMember> _members = it.getMembers();
            final Procedure1<JvmField> _function_1 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_2 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _area = ((findtempRemoveLake)feature).getArea();
                String _plus = (_builder.toString() + Integer.valueOf(_area));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_2);
            };
            JvmField _field = this._jvmTypesBuilder.toField(feature, "area", this._typeReferenceBuilder.typeRef(int.class), _function_1);
            this._jvmTypesBuilder.<JvmField>operator_add(_members, _field);
            EList<JvmMember> _members_1 = it.getMembers();
            JvmOperation _getter = this._jvmTypesBuilder.toGetter(feature, "area", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_1, _getter);
            EList<JvmMember> _members_2 = it.getMembers();
            JvmOperation _setter = this._jvmTypesBuilder.toSetter(feature, "area", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_2, _setter);
            EList<JvmMember> _members_3 = it.getMembers();
            final Procedure1<JvmField> _function_2 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_3 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _region = ((findtempRemoveLake)feature).getRegion();
                String _plus = (_builder.toString() + Integer.valueOf(_region));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_3);
            };
            JvmField _field_1 = this._jvmTypesBuilder.toField(feature, "region", this._typeReferenceBuilder.typeRef(int.class), _function_2);
            this._jvmTypesBuilder.<JvmField>operator_add(_members_3, _field_1);
            EList<JvmMember> _members_4 = it.getMembers();
            JvmOperation _getter_1 = this._jvmTypesBuilder.toGetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_4, _getter_1);
            EList<JvmMember> _members_5 = it.getMembers();
            JvmOperation _setter_1 = this._jvmTypesBuilder.toSetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_5, _setter_1);
            EList<JvmMember> _members_6 = it.getMembers();
            final Procedure1<JvmOperation> _function_3 = (JvmOperation it_1) -> {
              EList<JvmFormalParameter> _parameters = it_1.getParameters();
              JvmFormalParameter _parameter = this._jvmTypesBuilder.toParameter(feature, "args", this._jvmTypesBuilder.addArrayTypeDimension(this._jvmTypesBuilder.newTypeRef(feature, String.class)));
              this._jvmTypesBuilder.<JvmFormalParameter>operator_add(_parameters, _parameter);
              it_1.setStatic(true);
              it_1.setVarArgs(true);
              final Procedure1<ITreeAppendable> _function_4 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                _builder.append("System.out.println(\"findtempRemoveLake\");");
                _builder.newLine();
                _builder.append("Region region1 = new Region();");
                _builder.newLine();
                _builder.append("region1.calculateInitialLCZ(region);");
                _builder.newLine();
                _builder.append("region1.findtempRemoveLake(area);");
                _builder.newLine();
                it_2.append(_builder);
              };
              this._jvmTypesBuilder.setBody(it_1, _function_4);
            };
            JvmOperation _method = this._jvmTypesBuilder.toMethod(feature, "main", this._jvmTypesBuilder.newTypeRef(feature, Void.TYPE), _function_3);
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_6, _method);
          };
          acceptor.<JvmGenericType>accept(this._jvmTypesBuilder.toClass(element, "DetailsExtractor"), _function);
        }
      }
      if (!_matched) {
        if (feature instanceof caltreesBuildAction) {
          _matched=true;
          final Procedure1<JvmGenericType> _function = (JvmGenericType it) -> {
            EList<JvmMember> _members = it.getMembers();
            final Procedure1<JvmField> _function_1 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_2 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _no_of_buildings = ((caltreesBuildAction)feature).getNo_of_buildings();
                String _plus = (_builder.toString() + Integer.valueOf(_no_of_buildings));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_2);
            };
            JvmField _field = this._jvmTypesBuilder.toField(feature, "buildingCount", this._typeReferenceBuilder.typeRef(int.class), _function_1);
            this._jvmTypesBuilder.<JvmField>operator_add(_members, _field);
            EList<JvmMember> _members_1 = it.getMembers();
            JvmOperation _getter = this._jvmTypesBuilder.toGetter(feature, "buildingCount", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_1, _getter);
            EList<JvmMember> _members_2 = it.getMembers();
            JvmOperation _setter = this._jvmTypesBuilder.toSetter(feature, "buildingCount", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_2, _setter);
            EList<JvmMember> _members_3 = it.getMembers();
            final Procedure1<JvmField> _function_2 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_3 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _length = ((caltreesBuildAction)feature).getLength();
                String _plus = (_builder.toString() + Integer.valueOf(_length));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_3);
            };
            JvmField _field_1 = this._jvmTypesBuilder.toField(feature, "l", this._typeReferenceBuilder.typeRef(int.class), _function_2);
            this._jvmTypesBuilder.<JvmField>operator_add(_members_3, _field_1);
            EList<JvmMember> _members_4 = it.getMembers();
            JvmOperation _getter_1 = this._jvmTypesBuilder.toGetter(feature, "l", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_4, _getter_1);
            EList<JvmMember> _members_5 = it.getMembers();
            JvmOperation _setter_1 = this._jvmTypesBuilder.toSetter(feature, "l", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_5, _setter_1);
            EList<JvmMember> _members_6 = it.getMembers();
            final Procedure1<JvmField> _function_3 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_4 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _breadth = ((caltreesBuildAction)feature).getBreadth();
                String _plus = (_builder.toString() + Integer.valueOf(_breadth));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_4);
            };
            JvmField _field_2 = this._jvmTypesBuilder.toField(feature, "b", this._typeReferenceBuilder.typeRef(int.class), _function_3);
            this._jvmTypesBuilder.<JvmField>operator_add(_members_6, _field_2);
            EList<JvmMember> _members_7 = it.getMembers();
            JvmOperation _getter_2 = this._jvmTypesBuilder.toGetter(feature, "b", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_7, _getter_2);
            EList<JvmMember> _members_8 = it.getMembers();
            JvmOperation _setter_2 = this._jvmTypesBuilder.toSetter(feature, "b", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_8, _setter_2);
            EList<JvmMember> _members_9 = it.getMembers();
            final Procedure1<JvmField> _function_4 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_5 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _height = ((caltreesBuildAction)feature).getHeight();
                String _plus = (_builder.toString() + Integer.valueOf(_height));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_5);
            };
            JvmField _field_3 = this._jvmTypesBuilder.toField(feature, "h", this._typeReferenceBuilder.typeRef(int.class), _function_4);
            this._jvmTypesBuilder.<JvmField>operator_add(_members_9, _field_3);
            EList<JvmMember> _members_10 = it.getMembers();
            JvmOperation _getter_3 = this._jvmTypesBuilder.toGetter(feature, "h", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_10, _getter_3);
            EList<JvmMember> _members_11 = it.getMembers();
            JvmOperation _setter_3 = this._jvmTypesBuilder.toSetter(feature, "h", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_11, _setter_3);
            EList<JvmMember> _members_12 = it.getMembers();
            final Procedure1<JvmField> _function_5 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_6 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _region = ((caltreesBuildAction)feature).getRegion();
                String _plus = (_builder.toString() + Integer.valueOf(_region));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_6);
            };
            JvmField _field_4 = this._jvmTypesBuilder.toField(feature, "region", this._typeReferenceBuilder.typeRef(int.class), _function_5);
            this._jvmTypesBuilder.<JvmField>operator_add(_members_12, _field_4);
            EList<JvmMember> _members_13 = it.getMembers();
            JvmOperation _getter_4 = this._jvmTypesBuilder.toGetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_13, _getter_4);
            EList<JvmMember> _members_14 = it.getMembers();
            JvmOperation _setter_4 = this._jvmTypesBuilder.toSetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_14, _setter_4);
            EList<JvmMember> _members_15 = it.getMembers();
            final Procedure1<JvmOperation> _function_6 = (JvmOperation it_1) -> {
              EList<JvmFormalParameter> _parameters = it_1.getParameters();
              JvmFormalParameter _parameter = this._jvmTypesBuilder.toParameter(feature, "args", this._jvmTypesBuilder.addArrayTypeDimension(this._jvmTypesBuilder.newTypeRef(feature, String.class)));
              this._jvmTypesBuilder.<JvmFormalParameter>operator_add(_parameters, _parameter);
              it_1.setStatic(true);
              it_1.setVarArgs(true);
              final Procedure1<ITreeAppendable> _function_7 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                _builder.append("System.out.println(\"caltreesBuildAction\");");
                _builder.newLine();
                _builder.append("Region region1 = new Region();");
                _builder.newLine();
                _builder.append("region1.calculateInitialLCZ(region);");
                _builder.newLine();
                _builder.append("region1.caltreesBuildAction(buildingCount,l,b,h);");
                _builder.newLine();
                it_2.append(_builder);
              };
              this._jvmTypesBuilder.setBody(it_1, _function_7);
            };
            JvmOperation _method = this._jvmTypesBuilder.toMethod(feature, "main", this._jvmTypesBuilder.newTypeRef(feature, Void.TYPE), _function_6);
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_15, _method);
          };
          acceptor.<JvmGenericType>accept(this._jvmTypesBuilder.toClass(element, "DetailsExtractor"), _function);
        }
      }
      if (!_matched) {
        if (feature instanceof DesignCommercial) {
          _matched=true;
          final Procedure1<JvmGenericType> _function = (JvmGenericType it) -> {
            EList<JvmMember> _members = it.getMembers();
            final Procedure1<JvmField> _function_1 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_2 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                _builder.append("\"");
                String _plus = (_builder.toString() + "DesignCommercial");
                StringConcatenation _builder_1 = new StringConcatenation();
                _builder_1.append("\"");
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_2);
            };
            JvmField _field = this._jvmTypesBuilder.toField(feature, "flag", this._typeReferenceBuilder.typeRef(String.class), _function_1);
            this._jvmTypesBuilder.<JvmField>operator_add(_members, _field);
            EList<JvmMember> _members_1 = it.getMembers();
            JvmOperation _getter = this._jvmTypesBuilder.toGetter(feature, "flag", this._typeReferenceBuilder.typeRef(String.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_1, _getter);
            EList<JvmMember> _members_2 = it.getMembers();
            JvmOperation _setter = this._jvmTypesBuilder.toSetter(feature, "flag", this._typeReferenceBuilder.typeRef(String.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_2, _setter);
            EList<JvmMember> _members_3 = it.getMembers();
            final Procedure1<JvmField> _function_2 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_3 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _no_of_people = ((DesignCommercial)feature).getNo_of_people();
                String _plus = (_builder.toString() + Integer.valueOf(_no_of_people));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_3);
            };
            JvmField _field_1 = this._jvmTypesBuilder.toField(feature, "peopleCount", this._typeReferenceBuilder.typeRef(int.class), _function_2);
            this._jvmTypesBuilder.<JvmField>operator_add(_members_3, _field_1);
            EList<JvmMember> _members_4 = it.getMembers();
            JvmOperation _getter_1 = this._jvmTypesBuilder.toGetter(feature, "peopleCount", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_4, _getter_1);
            EList<JvmMember> _members_5 = it.getMembers();
            JvmOperation _setter_1 = this._jvmTypesBuilder.toSetter(feature, "peopleCount", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_5, _setter_1);
            EList<JvmMember> _members_6 = it.getMembers();
            final Procedure1<JvmField> _function_3 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_4 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _region = ((DesignCommercial)feature).getRegion();
                String _plus = (_builder.toString() + Integer.valueOf(_region));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_4);
            };
            JvmField _field_2 = this._jvmTypesBuilder.toField(feature, "region", this._typeReferenceBuilder.typeRef(int.class), _function_3);
            this._jvmTypesBuilder.<JvmField>operator_add(_members_6, _field_2);
            EList<JvmMember> _members_7 = it.getMembers();
            JvmOperation _getter_2 = this._jvmTypesBuilder.toGetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_7, _getter_2);
            EList<JvmMember> _members_8 = it.getMembers();
            JvmOperation _setter_2 = this._jvmTypesBuilder.toSetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_8, _setter_2);
            EList<JvmMember> _members_9 = it.getMembers();
            final Procedure1<JvmOperation> _function_4 = (JvmOperation it_1) -> {
              EList<JvmFormalParameter> _parameters = it_1.getParameters();
              JvmFormalParameter _parameter = this._jvmTypesBuilder.toParameter(feature, "args", this._jvmTypesBuilder.addArrayTypeDimension(this._jvmTypesBuilder.newTypeRef(feature, String.class)));
              this._jvmTypesBuilder.<JvmFormalParameter>operator_add(_parameters, _parameter);
              it_1.setStatic(true);
              it_1.setVarArgs(true);
              final Procedure1<ITreeAppendable> _function_5 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                _builder.append("System.out.println(\"DesignCommercial\");");
                _builder.newLine();
                _builder.append("Region region1 = new Region();");
                _builder.newLine();
                _builder.append("region1.calculateInitialLCZ(region);");
                _builder.newLine();
                _builder.append("region1.DesignCommercial(peopleCount);");
                _builder.newLine();
                _builder.newLine();
                it_2.append(_builder);
              };
              this._jvmTypesBuilder.setBody(it_1, _function_5);
            };
            JvmOperation _method = this._jvmTypesBuilder.toMethod(feature, "main", this._jvmTypesBuilder.newTypeRef(feature, Void.TYPE), _function_4);
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_9, _method);
          };
          acceptor.<JvmGenericType>accept(this._jvmTypesBuilder.toClass(element, "DetailsExtractor"), _function);
        }
      }
      if (!_matched) {
        if (feature instanceof DesignResidential) {
          _matched=true;
          final Procedure1<JvmGenericType> _function = (JvmGenericType it) -> {
            EList<JvmMember> _members = it.getMembers();
            final Procedure1<JvmField> _function_1 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_2 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                _builder.append("\"");
                String _plus = (_builder.toString() + "DesignResidential");
                StringConcatenation _builder_1 = new StringConcatenation();
                _builder_1.append("\"");
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_2);
            };
            JvmField _field = this._jvmTypesBuilder.toField(feature, "flag", this._typeReferenceBuilder.typeRef(String.class), _function_1);
            this._jvmTypesBuilder.<JvmField>operator_add(_members, _field);
            EList<JvmMember> _members_1 = it.getMembers();
            JvmOperation _getter = this._jvmTypesBuilder.toGetter(feature, "flag", this._typeReferenceBuilder.typeRef(String.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_1, _getter);
            EList<JvmMember> _members_2 = it.getMembers();
            JvmOperation _setter = this._jvmTypesBuilder.toSetter(feature, "flag", this._typeReferenceBuilder.typeRef(String.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_2, _setter);
            EList<JvmMember> _members_3 = it.getMembers();
            final Procedure1<JvmField> _function_2 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_3 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _no_of_people = ((DesignResidential)feature).getNo_of_people();
                String _plus = (_builder.toString() + Integer.valueOf(_no_of_people));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_3);
            };
            JvmField _field_1 = this._jvmTypesBuilder.toField(feature, "peopleCount", this._typeReferenceBuilder.typeRef(int.class), _function_2);
            this._jvmTypesBuilder.<JvmField>operator_add(_members_3, _field_1);
            EList<JvmMember> _members_4 = it.getMembers();
            JvmOperation _getter_1 = this._jvmTypesBuilder.toGetter(feature, "peopleCount", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_4, _getter_1);
            EList<JvmMember> _members_5 = it.getMembers();
            JvmOperation _setter_1 = this._jvmTypesBuilder.toSetter(feature, "peopleCount", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_5, _setter_1);
            EList<JvmMember> _members_6 = it.getMembers();
            final Procedure1<JvmField> _function_3 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_4 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _region = ((DesignResidential)feature).getRegion();
                String _plus = (_builder.toString() + Integer.valueOf(_region));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_4);
            };
            JvmField _field_2 = this._jvmTypesBuilder.toField(feature, "region", this._typeReferenceBuilder.typeRef(int.class), _function_3);
            this._jvmTypesBuilder.<JvmField>operator_add(_members_6, _field_2);
            EList<JvmMember> _members_7 = it.getMembers();
            JvmOperation _getter_2 = this._jvmTypesBuilder.toGetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_7, _getter_2);
            EList<JvmMember> _members_8 = it.getMembers();
            JvmOperation _setter_2 = this._jvmTypesBuilder.toSetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_8, _setter_2);
            EList<JvmMember> _members_9 = it.getMembers();
            final Procedure1<JvmOperation> _function_4 = (JvmOperation it_1) -> {
              EList<JvmFormalParameter> _parameters = it_1.getParameters();
              JvmFormalParameter _parameter = this._jvmTypesBuilder.toParameter(feature, "args", this._jvmTypesBuilder.addArrayTypeDimension(this._jvmTypesBuilder.newTypeRef(feature, String.class)));
              this._jvmTypesBuilder.<JvmFormalParameter>operator_add(_parameters, _parameter);
              it_1.setStatic(true);
              it_1.setVarArgs(true);
              final Procedure1<ITreeAppendable> _function_5 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                _builder.append("System.out.println(\"DesignResidential\");");
                _builder.newLine();
                _builder.append("Region region1 = new Region();");
                _builder.newLine();
                _builder.append("region1.calculateInitialLCZ(region);");
                _builder.newLine();
                _builder.append("region1.DesignResidential(peopleCount);");
                _builder.newLine();
                it_2.append(_builder);
              };
              this._jvmTypesBuilder.setBody(it_1, _function_5);
            };
            JvmOperation _method = this._jvmTypesBuilder.toMethod(feature, "main", this._jvmTypesBuilder.newTypeRef(feature, Void.TYPE), _function_4);
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_9, _method);
          };
          acceptor.<JvmGenericType>accept(this._jvmTypesBuilder.toClass(element, "DetailsExtractor"), _function);
        }
      }
      if (!_matched) {
        if (feature instanceof DesignEducational) {
          _matched=true;
          final Procedure1<JvmGenericType> _function = (JvmGenericType it) -> {
            EList<JvmMember> _members = it.getMembers();
            final Procedure1<JvmField> _function_1 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_2 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                _builder.append("\"");
                String _plus = (_builder.toString() + "DesignEducational");
                StringConcatenation _builder_1 = new StringConcatenation();
                _builder_1.append("\"");
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_2);
            };
            JvmField _field = this._jvmTypesBuilder.toField(feature, "flag", this._typeReferenceBuilder.typeRef(String.class), _function_1);
            this._jvmTypesBuilder.<JvmField>operator_add(_members, _field);
            EList<JvmMember> _members_1 = it.getMembers();
            JvmOperation _getter = this._jvmTypesBuilder.toGetter(feature, "flag", this._typeReferenceBuilder.typeRef(String.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_1, _getter);
            EList<JvmMember> _members_2 = it.getMembers();
            JvmOperation _setter = this._jvmTypesBuilder.toSetter(feature, "flag", this._typeReferenceBuilder.typeRef(String.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_2, _setter);
            EList<JvmMember> _members_3 = it.getMembers();
            final Procedure1<JvmField> _function_2 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_3 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _no_of_people = ((DesignEducational)feature).getNo_of_people();
                String _plus = (_builder.toString() + Integer.valueOf(_no_of_people));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_3);
            };
            JvmField _field_1 = this._jvmTypesBuilder.toField(feature, "peopleCount", this._typeReferenceBuilder.typeRef(int.class), _function_2);
            this._jvmTypesBuilder.<JvmField>operator_add(_members_3, _field_1);
            EList<JvmMember> _members_4 = it.getMembers();
            JvmOperation _getter_1 = this._jvmTypesBuilder.toGetter(feature, "peopleCount", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_4, _getter_1);
            EList<JvmMember> _members_5 = it.getMembers();
            JvmOperation _setter_1 = this._jvmTypesBuilder.toSetter(feature, "peopleCount", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_5, _setter_1);
            EList<JvmMember> _members_6 = it.getMembers();
            final Procedure1<JvmField> _function_3 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_4 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _region = ((DesignEducational)feature).getRegion();
                String _plus = (_builder.toString() + Integer.valueOf(_region));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_4);
            };
            JvmField _field_2 = this._jvmTypesBuilder.toField(feature, "region", this._typeReferenceBuilder.typeRef(int.class), _function_3);
            this._jvmTypesBuilder.<JvmField>operator_add(_members_6, _field_2);
            EList<JvmMember> _members_7 = it.getMembers();
            JvmOperation _getter_2 = this._jvmTypesBuilder.toGetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_7, _getter_2);
            EList<JvmMember> _members_8 = it.getMembers();
            JvmOperation _setter_2 = this._jvmTypesBuilder.toSetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_8, _setter_2);
            EList<JvmMember> _members_9 = it.getMembers();
            final Procedure1<JvmOperation> _function_4 = (JvmOperation it_1) -> {
              EList<JvmFormalParameter> _parameters = it_1.getParameters();
              JvmFormalParameter _parameter = this._jvmTypesBuilder.toParameter(feature, "args", this._jvmTypesBuilder.addArrayTypeDimension(this._jvmTypesBuilder.newTypeRef(feature, String.class)));
              this._jvmTypesBuilder.<JvmFormalParameter>operator_add(_parameters, _parameter);
              it_1.setStatic(true);
              it_1.setVarArgs(true);
              final Procedure1<ITreeAppendable> _function_5 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                _builder.append("System.out.println(\"DesignEducational\");");
                _builder.newLine();
                _builder.append("Region region1 = new Region();");
                _builder.newLine();
                _builder.append("region1.calculateInitialLCZ(region);");
                _builder.newLine();
                _builder.append("region1.DesignEducational(peopleCount);");
                _builder.newLine();
                it_2.append(_builder);
              };
              this._jvmTypesBuilder.setBody(it_1, _function_5);
            };
            JvmOperation _method = this._jvmTypesBuilder.toMethod(feature, "main", this._jvmTypesBuilder.newTypeRef(feature, Void.TYPE), _function_4);
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_9, _method);
          };
          acceptor.<JvmGenericType>accept(this._jvmTypesBuilder.toClass(element, "DetailsExtractor"), _function);
        }
      }
      if (!_matched) {
        if (feature instanceof showRegion) {
          _matched=true;
          final Procedure1<JvmGenericType> _function = (JvmGenericType it) -> {
            EList<JvmMember> _members = it.getMembers();
            final Procedure1<JvmField> _function_1 = (JvmField it_1) -> {
              it_1.setStatic(true);
              final Procedure1<ITreeAppendable> _function_2 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                int _region = ((showRegion)feature).getRegion();
                String _plus = (_builder.toString() + Integer.valueOf(_region));
                StringConcatenation _builder_1 = new StringConcatenation();
                String _plus_1 = (_plus + _builder_1);
                it_2.append(_plus_1);
              };
              this._jvmTypesBuilder.setInitializer(it_1, _function_2);
            };
            JvmField _field = this._jvmTypesBuilder.toField(feature, "region", this._typeReferenceBuilder.typeRef(int.class), _function_1);
            this._jvmTypesBuilder.<JvmField>operator_add(_members, _field);
            EList<JvmMember> _members_1 = it.getMembers();
            JvmOperation _getter = this._jvmTypesBuilder.toGetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_1, _getter);
            EList<JvmMember> _members_2 = it.getMembers();
            JvmOperation _setter = this._jvmTypesBuilder.toSetter(feature, "region", this._typeReferenceBuilder.typeRef(int.class));
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_2, _setter);
            EList<JvmMember> _members_3 = it.getMembers();
            final Procedure1<JvmOperation> _function_2 = (JvmOperation it_1) -> {
              EList<JvmFormalParameter> _parameters = it_1.getParameters();
              JvmFormalParameter _parameter = this._jvmTypesBuilder.toParameter(feature, "args", this._jvmTypesBuilder.addArrayTypeDimension(this._jvmTypesBuilder.newTypeRef(feature, String.class)));
              this._jvmTypesBuilder.<JvmFormalParameter>operator_add(_parameters, _parameter);
              it_1.setStatic(true);
              it_1.setVarArgs(true);
              final Procedure1<ITreeAppendable> _function_3 = (ITreeAppendable it_2) -> {
                StringConcatenation _builder = new StringConcatenation();
                _builder.append("System.out.println(\"showRegion\");");
                _builder.newLine();
                _builder.append("Region region1 = new Region();");
                _builder.newLine();
                _builder.append("region1.calculateInitialLCZ(region);");
                _builder.newLine();
                _builder.append("region1.showRegion();");
                _builder.newLine();
                it_2.append(_builder);
              };
              this._jvmTypesBuilder.setBody(it_1, _function_3);
            };
            JvmOperation _method = this._jvmTypesBuilder.toMethod(feature, "main", this._jvmTypesBuilder.newTypeRef(feature, Void.TYPE), _function_2);
            this._jvmTypesBuilder.<JvmOperation>operator_add(_members_3, _method);
          };
          acceptor.<JvmGenericType>accept(this._jvmTypesBuilder.toClass(element, "DetailsExtractor"), _function);
        }
      }
    }
  }
  
  public void infer(final EObject element, final IJvmDeclaredTypeAcceptor acceptor, final boolean isPreIndexingPhase) {
    if (element instanceof Model) {
      _infer((Model)element, acceptor, isPreIndexingPhase);
      return;
    } else if (element != null) {
      _infer(element, acceptor, isPreIndexingPhase);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(element, acceptor, isPreIndexingPhase).toString());
    }
  }
}
