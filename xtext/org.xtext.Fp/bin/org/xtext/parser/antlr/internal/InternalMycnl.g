/*
 * generated by Xtext 2.18.0
 */
grammar InternalMycnl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.services.MycnlGrammarAccess;

}

@parser::members {

 	private MycnlGrammarAccess grammarAccess;

    public InternalMycnlParser(TokenStream input, MycnlGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "DomainModel";
   	}

   	@Override
   	protected MycnlGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDomainModel
entryRuleDomainModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainModelRule()); }
	iv_ruleDomainModel=ruleDomainModel
	{ $current=$iv_ruleDomainModel.current; }
	EOF;

// Rule DomainModel
ruleDomainModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDomainModelAccess().getElementsModelParserRuleCall_0());
			}
			lv_elements_0_0=ruleModel
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getDomainModelRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"org.xtext.Mycnl.Model");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getQueryQueryParserRuleCall_0());
			}
			lv_query_0_0=ruleQuery
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"query",
					lv_query_0_0,
					"org.xtext.Mycnl.Query");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleQuery
entryRuleQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueryRule()); }
	iv_ruleQuery=ruleQuery
	{ $current=$iv_ruleQuery.current; }
	EOF;

// Rule Query
ruleQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQueryAccess().getFindtempBuilActionParserRuleCall_0());
		}
		this_findtempBuilAction_0=rulefindtempBuilAction
		{
			$current = $this_findtempBuilAction_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQueryAccess().getFindtempDemolishParserRuleCall_1());
		}
		this_findtempDemolish_1=rulefindtempDemolish
		{
			$current = $this_findtempDemolish_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQueryAccess().getFindtempPlantTreesParserRuleCall_2());
		}
		this_findtempPlantTrees_2=rulefindtempPlantTrees
		{
			$current = $this_findtempPlantTrees_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQueryAccess().getFindtempCutTreesParserRuleCall_3());
		}
		this_findtempCutTrees_3=rulefindtempCutTrees
		{
			$current = $this_findtempCutTrees_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQueryAccess().getFindtempPlantBushesParserRuleCall_4());
		}
		this_findtempPlantBushes_4=rulefindtempPlantBushes
		{
			$current = $this_findtempPlantBushes_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQueryAccess().getFindtempRemoveBushesParserRuleCall_5());
		}
		this_findtempRemoveBushes_5=rulefindtempRemoveBushes
		{
			$current = $this_findtempRemoveBushes_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQueryAccess().getFindtempCreateLakeParserRuleCall_6());
		}
		this_findtempCreateLake_6=rulefindtempCreateLake
		{
			$current = $this_findtempCreateLake_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQueryAccess().getFindtempRemoveLakeParserRuleCall_7());
		}
		this_findtempRemoveLake_7=rulefindtempRemoveLake
		{
			$current = $this_findtempRemoveLake_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQueryAccess().getCaltreesBuildActionParserRuleCall_8());
		}
		this_caltreesBuildAction_8=rulecaltreesBuildAction
		{
			$current = $this_caltreesBuildAction_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQueryAccess().getDesignCommercialParserRuleCall_9());
		}
		this_DesignCommercial_9=ruleDesignCommercial
		{
			$current = $this_DesignCommercial_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQueryAccess().getDesignResidentialParserRuleCall_10());
		}
		this_DesignResidential_10=ruleDesignResidential
		{
			$current = $this_DesignResidential_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQueryAccess().getDesignEducationalParserRuleCall_11());
		}
		this_DesignEducational_11=ruleDesignEducational
		{
			$current = $this_DesignEducational_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQueryAccess().getShowRegionParserRuleCall_12());
		}
		this_showRegion_12=ruleshowRegion
		{
			$current = $this_showRegion_12.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleshowRegion
entryRuleshowRegion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShowRegionRule()); }
	iv_ruleshowRegion=ruleshowRegion
	{ $current=$iv_ruleshowRegion.current; }
	EOF;

// Rule showRegion
ruleshowRegion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='show'
			{
				newLeafNode(otherlv_0, grammarAccess.getShowRegionAccess().getShowKeyword_0_0());
			}
			otherlv_1='details'
			{
				newLeafNode(otherlv_1, grammarAccess.getShowRegionAccess().getDetailsKeyword_0_1());
			}
			otherlv_2='of'
			{
				newLeafNode(otherlv_2, grammarAccess.getShowRegionAccess().getOfKeyword_0_2());
			}
			otherlv_3='region'
			{
				newLeafNode(otherlv_3, grammarAccess.getShowRegionAccess().getRegionKeyword_0_3());
			}
			(
				(
					lv_region_4_0=RULE_INT
					{
						newLeafNode(lv_region_4_0, grammarAccess.getShowRegionAccess().getRegionINTTerminalRuleCall_0_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShowRegionRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_4_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_5='Show'
			{
				newLeafNode(otherlv_5, grammarAccess.getShowRegionAccess().getShowKeyword_1_0());
			}
			otherlv_6='Details'
			{
				newLeafNode(otherlv_6, grammarAccess.getShowRegionAccess().getDetailsKeyword_1_1());
			}
			otherlv_7='Of'
			{
				newLeafNode(otherlv_7, grammarAccess.getShowRegionAccess().getOfKeyword_1_2());
			}
			otherlv_8='Region'
			{
				newLeafNode(otherlv_8, grammarAccess.getShowRegionAccess().getRegionKeyword_1_3());
			}
			(
				(
					lv_region_9_0=RULE_INT
					{
						newLeafNode(lv_region_9_0, grammarAccess.getShowRegionAccess().getRegionINTTerminalRuleCall_1_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShowRegionRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_9_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_10='Show'
			{
				newLeafNode(otherlv_10, grammarAccess.getShowRegionAccess().getShowKeyword_2_0());
			}
			otherlv_11='Details'
			{
				newLeafNode(otherlv_11, grammarAccess.getShowRegionAccess().getDetailsKeyword_2_1());
			}
			otherlv_12='of'
			{
				newLeafNode(otherlv_12, grammarAccess.getShowRegionAccess().getOfKeyword_2_2());
			}
			otherlv_13='Region'
			{
				newLeafNode(otherlv_13, grammarAccess.getShowRegionAccess().getRegionKeyword_2_3());
			}
			(
				(
					lv_region_14_0=RULE_INT
					{
						newLeafNode(lv_region_14_0, grammarAccess.getShowRegionAccess().getRegionINTTerminalRuleCall_2_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShowRegionRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_14_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_15='SHOW'
			{
				newLeafNode(otherlv_15, grammarAccess.getShowRegionAccess().getSHOWKeyword_3_0());
			}
			otherlv_16='DETAILS'
			{
				newLeafNode(otherlv_16, grammarAccess.getShowRegionAccess().getDETAILSKeyword_3_1());
			}
			otherlv_17='OF'
			{
				newLeafNode(otherlv_17, grammarAccess.getShowRegionAccess().getOFKeyword_3_2());
			}
			otherlv_18='REGION'
			{
				newLeafNode(otherlv_18, grammarAccess.getShowRegionAccess().getREGIONKeyword_3_3());
			}
			(
				(
					lv_region_19_0=RULE_INT
					{
						newLeafNode(lv_region_19_0, grammarAccess.getShowRegionAccess().getRegionINTTerminalRuleCall_3_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShowRegionRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_19_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_20='show'
			{
				newLeafNode(otherlv_20, grammarAccess.getShowRegionAccess().getShowKeyword_4_0());
			}
			otherlv_21='details'
			{
				newLeafNode(otherlv_21, grammarAccess.getShowRegionAccess().getDetailsKeyword_4_1());
			}
			otherlv_22='of'
			{
				newLeafNode(otherlv_22, grammarAccess.getShowRegionAccess().getOfKeyword_4_2());
			}
			otherlv_23='Region'
			{
				newLeafNode(otherlv_23, grammarAccess.getShowRegionAccess().getRegionKeyword_4_3());
			}
			(
				(
					lv_region_24_0=RULE_INT
					{
						newLeafNode(lv_region_24_0, grammarAccess.getShowRegionAccess().getRegionINTTerminalRuleCall_4_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShowRegionRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_24_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_25='Show'
			{
				newLeafNode(otherlv_25, grammarAccess.getShowRegionAccess().getShowKeyword_5_0());
			}
			otherlv_26='details'
			{
				newLeafNode(otherlv_26, grammarAccess.getShowRegionAccess().getDetailsKeyword_5_1());
			}
			otherlv_27='of'
			{
				newLeafNode(otherlv_27, grammarAccess.getShowRegionAccess().getOfKeyword_5_2());
			}
			otherlv_28='region'
			{
				newLeafNode(otherlv_28, grammarAccess.getShowRegionAccess().getRegionKeyword_5_3());
			}
			(
				(
					lv_region_29_0=RULE_INT
					{
						newLeafNode(lv_region_29_0, grammarAccess.getShowRegionAccess().getRegionINTTerminalRuleCall_5_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShowRegionRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_29_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_30='Show'
			{
				newLeafNode(otherlv_30, grammarAccess.getShowRegionAccess().getShowKeyword_6_0());
			}
			otherlv_31='details'
			{
				newLeafNode(otherlv_31, grammarAccess.getShowRegionAccess().getDetailsKeyword_6_1());
			}
			otherlv_32='of'
			{
				newLeafNode(otherlv_32, grammarAccess.getShowRegionAccess().getOfKeyword_6_2());
			}
			otherlv_33='Region'
			{
				newLeafNode(otherlv_33, grammarAccess.getShowRegionAccess().getRegionKeyword_6_3());
			}
			(
				(
					lv_region_34_0=RULE_INT
					{
						newLeafNode(lv_region_34_0, grammarAccess.getShowRegionAccess().getRegionINTTerminalRuleCall_6_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShowRegionRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_34_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
	)
;

// Entry rule entryRulefindtempBuilAction
entryRulefindtempBuilAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindtempBuilActionRule()); }
	iv_rulefindtempBuilAction=rulefindtempBuilAction
	{ $current=$iv_rulefindtempBuilAction.current; }
	EOF;

// Rule findtempBuilAction
rulefindtempBuilAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='what'
			{
				newLeafNode(otherlv_0, grammarAccess.getFindtempBuilActionAccess().getWhatKeyword_0_0());
			}
			otherlv_1='will'
			{
				newLeafNode(otherlv_1, grammarAccess.getFindtempBuilActionAccess().getWillKeyword_0_1());
			}
			otherlv_2='be'
			{
				newLeafNode(otherlv_2, grammarAccess.getFindtempBuilActionAccess().getBeKeyword_0_2());
			}
			otherlv_3='the'
			{
				newLeafNode(otherlv_3, grammarAccess.getFindtempBuilActionAccess().getTheKeyword_0_3());
			}
			otherlv_4='temperature'
			{
				newLeafNode(otherlv_4, grammarAccess.getFindtempBuilActionAccess().getTemperatureKeyword_0_4());
			}
			otherlv_5='if'
			{
				newLeafNode(otherlv_5, grammarAccess.getFindtempBuilActionAccess().getIfKeyword_0_5());
			}
			otherlv_6='we'
			{
				newLeafNode(otherlv_6, grammarAccess.getFindtempBuilActionAccess().getWeKeyword_0_6());
			}
			otherlv_7='build'
			{
				newLeafNode(otherlv_7, grammarAccess.getFindtempBuilActionAccess().getBuildKeyword_0_7());
			}
			(
				(
					lv_no_of_buildings_8_0=RULE_INT
					{
						newLeafNode(lv_no_of_buildings_8_0, grammarAccess.getFindtempBuilActionAccess().getNo_of_buildingsINTTerminalRuleCall_0_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_buildings",
							lv_no_of_buildings_8_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_9='buildings'
			{
				newLeafNode(otherlv_9, grammarAccess.getFindtempBuilActionAccess().getBuildingsKeyword_0_9());
			}
			otherlv_10='of'
			{
				newLeafNode(otherlv_10, grammarAccess.getFindtempBuilActionAccess().getOfKeyword_0_10());
			}
			otherlv_11='dimensions'
			{
				newLeafNode(otherlv_11, grammarAccess.getFindtempBuilActionAccess().getDimensionsKeyword_0_11());
			}
			(
				(
					lv_length_12_0=RULE_INT
					{
						newLeafNode(lv_length_12_0, grammarAccess.getFindtempBuilActionAccess().getLengthINTTerminalRuleCall_0_12_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"length",
							lv_length_12_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_13='x'
			{
				newLeafNode(otherlv_13, grammarAccess.getFindtempBuilActionAccess().getXKeyword_0_13());
			}
			(
				(
					lv_breadth_14_0=RULE_INT
					{
						newLeafNode(lv_breadth_14_0, grammarAccess.getFindtempBuilActionAccess().getBreadthINTTerminalRuleCall_0_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"breadth",
							lv_breadth_14_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_15='x'
			{
				newLeafNode(otherlv_15, grammarAccess.getFindtempBuilActionAccess().getXKeyword_0_15());
			}
			(
				(
					lv_height_16_0=RULE_INT
					{
						newLeafNode(lv_height_16_0, grammarAccess.getFindtempBuilActionAccess().getHeightINTTerminalRuleCall_0_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"height",
							lv_height_16_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_17='in'
			{
				newLeafNode(otherlv_17, grammarAccess.getFindtempBuilActionAccess().getInKeyword_0_17());
			}
			otherlv_18='region'
			{
				newLeafNode(otherlv_18, grammarAccess.getFindtempBuilActionAccess().getRegionKeyword_0_18());
			}
			(
				(
					lv_region_19_0=RULE_INT
					{
						newLeafNode(lv_region_19_0, grammarAccess.getFindtempBuilActionAccess().getRegionINTTerminalRuleCall_0_19_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_19_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_20='What'
			{
				newLeafNode(otherlv_20, grammarAccess.getFindtempBuilActionAccess().getWhatKeyword_1_0());
			}
			otherlv_21='Will'
			{
				newLeafNode(otherlv_21, grammarAccess.getFindtempBuilActionAccess().getWillKeyword_1_1());
			}
			otherlv_22='Be'
			{
				newLeafNode(otherlv_22, grammarAccess.getFindtempBuilActionAccess().getBeKeyword_1_2());
			}
			otherlv_23='The'
			{
				newLeafNode(otherlv_23, grammarAccess.getFindtempBuilActionAccess().getTheKeyword_1_3());
			}
			otherlv_24='Temperature'
			{
				newLeafNode(otherlv_24, grammarAccess.getFindtempBuilActionAccess().getTemperatureKeyword_1_4());
			}
			otherlv_25='If'
			{
				newLeafNode(otherlv_25, grammarAccess.getFindtempBuilActionAccess().getIfKeyword_1_5());
			}
			otherlv_26='We'
			{
				newLeafNode(otherlv_26, grammarAccess.getFindtempBuilActionAccess().getWeKeyword_1_6());
			}
			otherlv_27='Build'
			{
				newLeafNode(otherlv_27, grammarAccess.getFindtempBuilActionAccess().getBuildKeyword_1_7());
			}
			(
				(
					lv_no_of_buildings_28_0=RULE_INT
					{
						newLeafNode(lv_no_of_buildings_28_0, grammarAccess.getFindtempBuilActionAccess().getNo_of_buildingsINTTerminalRuleCall_1_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_buildings",
							lv_no_of_buildings_28_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_29='Buildings'
			{
				newLeafNode(otherlv_29, grammarAccess.getFindtempBuilActionAccess().getBuildingsKeyword_1_9());
			}
			otherlv_30='Of'
			{
				newLeafNode(otherlv_30, grammarAccess.getFindtempBuilActionAccess().getOfKeyword_1_10());
			}
			otherlv_31='Dimensions'
			{
				newLeafNode(otherlv_31, grammarAccess.getFindtempBuilActionAccess().getDimensionsKeyword_1_11());
			}
			(
				(
					lv_length_32_0=RULE_INT
					{
						newLeafNode(lv_length_32_0, grammarAccess.getFindtempBuilActionAccess().getLengthINTTerminalRuleCall_1_12_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"length",
							lv_length_32_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_33='x'
			{
				newLeafNode(otherlv_33, grammarAccess.getFindtempBuilActionAccess().getXKeyword_1_13());
			}
			(
				(
					lv_breadth_34_0=RULE_INT
					{
						newLeafNode(lv_breadth_34_0, grammarAccess.getFindtempBuilActionAccess().getBreadthINTTerminalRuleCall_1_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"breadth",
							lv_breadth_34_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_35='x'
			{
				newLeafNode(otherlv_35, grammarAccess.getFindtempBuilActionAccess().getXKeyword_1_15());
			}
			(
				(
					lv_height_36_0=RULE_INT
					{
						newLeafNode(lv_height_36_0, grammarAccess.getFindtempBuilActionAccess().getHeightINTTerminalRuleCall_1_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"height",
							lv_height_36_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_37='In'
			{
				newLeafNode(otherlv_37, grammarAccess.getFindtempBuilActionAccess().getInKeyword_1_17());
			}
			otherlv_38='Region'
			{
				newLeafNode(otherlv_38, grammarAccess.getFindtempBuilActionAccess().getRegionKeyword_1_18());
			}
			(
				(
					lv_region_39_0=RULE_INT
					{
						newLeafNode(lv_region_39_0, grammarAccess.getFindtempBuilActionAccess().getRegionINTTerminalRuleCall_1_19_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_39_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_40='What'
			{
				newLeafNode(otherlv_40, grammarAccess.getFindtempBuilActionAccess().getWhatKeyword_2_0());
			}
			otherlv_41='will'
			{
				newLeafNode(otherlv_41, grammarAccess.getFindtempBuilActionAccess().getWillKeyword_2_1());
			}
			otherlv_42='be'
			{
				newLeafNode(otherlv_42, grammarAccess.getFindtempBuilActionAccess().getBeKeyword_2_2());
			}
			otherlv_43='the'
			{
				newLeafNode(otherlv_43, grammarAccess.getFindtempBuilActionAccess().getTheKeyword_2_3());
			}
			otherlv_44='temperature'
			{
				newLeafNode(otherlv_44, grammarAccess.getFindtempBuilActionAccess().getTemperatureKeyword_2_4());
			}
			otherlv_45='if'
			{
				newLeafNode(otherlv_45, grammarAccess.getFindtempBuilActionAccess().getIfKeyword_2_5());
			}
			otherlv_46='we'
			{
				newLeafNode(otherlv_46, grammarAccess.getFindtempBuilActionAccess().getWeKeyword_2_6());
			}
			otherlv_47='build'
			{
				newLeafNode(otherlv_47, grammarAccess.getFindtempBuilActionAccess().getBuildKeyword_2_7());
			}
			(
				(
					lv_no_of_buildings_48_0=RULE_INT
					{
						newLeafNode(lv_no_of_buildings_48_0, grammarAccess.getFindtempBuilActionAccess().getNo_of_buildingsINTTerminalRuleCall_2_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_buildings",
							lv_no_of_buildings_48_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_49='buildings'
			{
				newLeafNode(otherlv_49, grammarAccess.getFindtempBuilActionAccess().getBuildingsKeyword_2_9());
			}
			otherlv_50='of'
			{
				newLeafNode(otherlv_50, grammarAccess.getFindtempBuilActionAccess().getOfKeyword_2_10());
			}
			otherlv_51='dimensions'
			{
				newLeafNode(otherlv_51, grammarAccess.getFindtempBuilActionAccess().getDimensionsKeyword_2_11());
			}
			(
				(
					lv_length_52_0=RULE_INT
					{
						newLeafNode(lv_length_52_0, grammarAccess.getFindtempBuilActionAccess().getLengthINTTerminalRuleCall_2_12_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"length",
							lv_length_52_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_53='x'
			{
				newLeafNode(otherlv_53, grammarAccess.getFindtempBuilActionAccess().getXKeyword_2_13());
			}
			(
				(
					lv_breadth_54_0=RULE_INT
					{
						newLeafNode(lv_breadth_54_0, grammarAccess.getFindtempBuilActionAccess().getBreadthINTTerminalRuleCall_2_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"breadth",
							lv_breadth_54_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_55='x'
			{
				newLeafNode(otherlv_55, grammarAccess.getFindtempBuilActionAccess().getXKeyword_2_15());
			}
			(
				(
					lv_height_56_0=RULE_INT
					{
						newLeafNode(lv_height_56_0, grammarAccess.getFindtempBuilActionAccess().getHeightINTTerminalRuleCall_2_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"height",
							lv_height_56_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_57='in'
			{
				newLeafNode(otherlv_57, grammarAccess.getFindtempBuilActionAccess().getInKeyword_2_17());
			}
			otherlv_58='region'
			{
				newLeafNode(otherlv_58, grammarAccess.getFindtempBuilActionAccess().getRegionKeyword_2_18());
			}
			(
				(
					lv_region_59_0=RULE_INT
					{
						newLeafNode(lv_region_59_0, grammarAccess.getFindtempBuilActionAccess().getRegionINTTerminalRuleCall_2_19_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_59_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_60='WHAT'
			{
				newLeafNode(otherlv_60, grammarAccess.getFindtempBuilActionAccess().getWHATKeyword_3_0());
			}
			otherlv_61='WILL'
			{
				newLeafNode(otherlv_61, grammarAccess.getFindtempBuilActionAccess().getWILLKeyword_3_1());
			}
			otherlv_62='BE'
			{
				newLeafNode(otherlv_62, grammarAccess.getFindtempBuilActionAccess().getBEKeyword_3_2());
			}
			otherlv_63='THE'
			{
				newLeafNode(otherlv_63, grammarAccess.getFindtempBuilActionAccess().getTHEKeyword_3_3());
			}
			otherlv_64='TEMPERATURE'
			{
				newLeafNode(otherlv_64, grammarAccess.getFindtempBuilActionAccess().getTEMPERATUREKeyword_3_4());
			}
			otherlv_65='IF'
			{
				newLeafNode(otherlv_65, grammarAccess.getFindtempBuilActionAccess().getIFKeyword_3_5());
			}
			otherlv_66='WE'
			{
				newLeafNode(otherlv_66, grammarAccess.getFindtempBuilActionAccess().getWEKeyword_3_6());
			}
			otherlv_67='BUILD'
			{
				newLeafNode(otherlv_67, grammarAccess.getFindtempBuilActionAccess().getBUILDKeyword_3_7());
			}
			(
				(
					lv_no_of_buildings_68_0=RULE_INT
					{
						newLeafNode(lv_no_of_buildings_68_0, grammarAccess.getFindtempBuilActionAccess().getNo_of_buildingsINTTerminalRuleCall_3_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_buildings",
							lv_no_of_buildings_68_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_69='BUILDINGS'
			{
				newLeafNode(otherlv_69, grammarAccess.getFindtempBuilActionAccess().getBUILDINGSKeyword_3_9());
			}
			otherlv_70='OF'
			{
				newLeafNode(otherlv_70, grammarAccess.getFindtempBuilActionAccess().getOFKeyword_3_10());
			}
			otherlv_71='DIMENSIONS'
			{
				newLeafNode(otherlv_71, grammarAccess.getFindtempBuilActionAccess().getDIMENSIONSKeyword_3_11());
			}
			(
				(
					lv_length_72_0=RULE_INT
					{
						newLeafNode(lv_length_72_0, grammarAccess.getFindtempBuilActionAccess().getLengthINTTerminalRuleCall_3_12_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"length",
							lv_length_72_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_73='x'
			{
				newLeafNode(otherlv_73, grammarAccess.getFindtempBuilActionAccess().getXKeyword_3_13());
			}
			(
				(
					lv_breadth_74_0=RULE_INT
					{
						newLeafNode(lv_breadth_74_0, grammarAccess.getFindtempBuilActionAccess().getBreadthINTTerminalRuleCall_3_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"breadth",
							lv_breadth_74_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_75='x'
			{
				newLeafNode(otherlv_75, grammarAccess.getFindtempBuilActionAccess().getXKeyword_3_15());
			}
			(
				(
					lv_height_76_0=RULE_INT
					{
						newLeafNode(lv_height_76_0, grammarAccess.getFindtempBuilActionAccess().getHeightINTTerminalRuleCall_3_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"height",
							lv_height_76_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_77='IN'
			{
				newLeafNode(otherlv_77, grammarAccess.getFindtempBuilActionAccess().getINKeyword_3_17());
			}
			otherlv_78='REGION'
			{
				newLeafNode(otherlv_78, grammarAccess.getFindtempBuilActionAccess().getREGIONKeyword_3_18());
			}
			(
				(
					lv_region_79_0=RULE_INT
					{
						newLeafNode(lv_region_79_0, grammarAccess.getFindtempBuilActionAccess().getRegionINTTerminalRuleCall_3_19_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_79_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_80='What'
			{
				newLeafNode(otherlv_80, grammarAccess.getFindtempBuilActionAccess().getWhatKeyword_4_0());
			}
			otherlv_81='Will'
			{
				newLeafNode(otherlv_81, grammarAccess.getFindtempBuilActionAccess().getWillKeyword_4_1());
			}
			otherlv_82='be'
			{
				newLeafNode(otherlv_82, grammarAccess.getFindtempBuilActionAccess().getBeKeyword_4_2());
			}
			otherlv_83='the'
			{
				newLeafNode(otherlv_83, grammarAccess.getFindtempBuilActionAccess().getTheKeyword_4_3());
			}
			otherlv_84='Temperature'
			{
				newLeafNode(otherlv_84, grammarAccess.getFindtempBuilActionAccess().getTemperatureKeyword_4_4());
			}
			otherlv_85='if'
			{
				newLeafNode(otherlv_85, grammarAccess.getFindtempBuilActionAccess().getIfKeyword_4_5());
			}
			otherlv_86='we'
			{
				newLeafNode(otherlv_86, grammarAccess.getFindtempBuilActionAccess().getWeKeyword_4_6());
			}
			otherlv_87='Build'
			{
				newLeafNode(otherlv_87, grammarAccess.getFindtempBuilActionAccess().getBuildKeyword_4_7());
			}
			(
				(
					lv_no_of_buildings_88_0=RULE_INT
					{
						newLeafNode(lv_no_of_buildings_88_0, grammarAccess.getFindtempBuilActionAccess().getNo_of_buildingsINTTerminalRuleCall_4_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_buildings",
							lv_no_of_buildings_88_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_89='Buildings'
			{
				newLeafNode(otherlv_89, grammarAccess.getFindtempBuilActionAccess().getBuildingsKeyword_4_9());
			}
			otherlv_90='of'
			{
				newLeafNode(otherlv_90, grammarAccess.getFindtempBuilActionAccess().getOfKeyword_4_10());
			}
			otherlv_91='Dimensions'
			{
				newLeafNode(otherlv_91, grammarAccess.getFindtempBuilActionAccess().getDimensionsKeyword_4_11());
			}
			(
				(
					lv_length_92_0=RULE_INT
					{
						newLeafNode(lv_length_92_0, grammarAccess.getFindtempBuilActionAccess().getLengthINTTerminalRuleCall_4_12_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"length",
							lv_length_92_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_93='x'
			{
				newLeafNode(otherlv_93, grammarAccess.getFindtempBuilActionAccess().getXKeyword_4_13());
			}
			(
				(
					lv_breadth_94_0=RULE_INT
					{
						newLeafNode(lv_breadth_94_0, grammarAccess.getFindtempBuilActionAccess().getBreadthINTTerminalRuleCall_4_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"breadth",
							lv_breadth_94_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_95='x'
			{
				newLeafNode(otherlv_95, grammarAccess.getFindtempBuilActionAccess().getXKeyword_4_15());
			}
			(
				(
					lv_height_96_0=RULE_INT
					{
						newLeafNode(lv_height_96_0, grammarAccess.getFindtempBuilActionAccess().getHeightINTTerminalRuleCall_4_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"height",
							lv_height_96_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_97='in'
			{
				newLeafNode(otherlv_97, grammarAccess.getFindtempBuilActionAccess().getInKeyword_4_17());
			}
			otherlv_98='Region'
			{
				newLeafNode(otherlv_98, grammarAccess.getFindtempBuilActionAccess().getRegionKeyword_4_18());
			}
			(
				(
					lv_region_99_0=RULE_INT
					{
						newLeafNode(lv_region_99_0, grammarAccess.getFindtempBuilActionAccess().getRegionINTTerminalRuleCall_4_19_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempBuilActionRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_99_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
	)
;

// Entry rule entryRulecaltreesBuildAction
entryRulecaltreesBuildAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCaltreesBuildActionRule()); }
	iv_rulecaltreesBuildAction=rulecaltreesBuildAction
	{ $current=$iv_rulecaltreesBuildAction.current; }
	EOF;

// Rule caltreesBuildAction
rulecaltreesBuildAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='how'
			{
				newLeafNode(otherlv_0, grammarAccess.getCaltreesBuildActionAccess().getHowKeyword_0_0());
			}
			otherlv_1='many'
			{
				newLeafNode(otherlv_1, grammarAccess.getCaltreesBuildActionAccess().getManyKeyword_0_1());
			}
			otherlv_2='trees'
			{
				newLeafNode(otherlv_2, grammarAccess.getCaltreesBuildActionAccess().getTreesKeyword_0_2());
			}
			otherlv_3='to'
			{
				newLeafNode(otherlv_3, grammarAccess.getCaltreesBuildActionAccess().getToKeyword_0_3());
			}
			otherlv_4='be'
			{
				newLeafNode(otherlv_4, grammarAccess.getCaltreesBuildActionAccess().getBeKeyword_0_4());
			}
			otherlv_5='planted'
			{
				newLeafNode(otherlv_5, grammarAccess.getCaltreesBuildActionAccess().getPlantedKeyword_0_5());
			}
			otherlv_6='if'
			{
				newLeafNode(otherlv_6, grammarAccess.getCaltreesBuildActionAccess().getIfKeyword_0_6());
			}
			otherlv_7='we'
			{
				newLeafNode(otherlv_7, grammarAccess.getCaltreesBuildActionAccess().getWeKeyword_0_7());
			}
			otherlv_8='build'
			{
				newLeafNode(otherlv_8, grammarAccess.getCaltreesBuildActionAccess().getBuildKeyword_0_8());
			}
			(
				(
					lv_no_of_buildings_9_0=RULE_INT
					{
						newLeafNode(lv_no_of_buildings_9_0, grammarAccess.getCaltreesBuildActionAccess().getNo_of_buildingsINTTerminalRuleCall_0_9_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_buildings",
							lv_no_of_buildings_9_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_10='of'
			{
				newLeafNode(otherlv_10, grammarAccess.getCaltreesBuildActionAccess().getOfKeyword_0_10());
			}
			otherlv_11='dimensions'
			{
				newLeafNode(otherlv_11, grammarAccess.getCaltreesBuildActionAccess().getDimensionsKeyword_0_11());
			}
			(
				(
					lv_length_12_0=RULE_INT
					{
						newLeafNode(lv_length_12_0, grammarAccess.getCaltreesBuildActionAccess().getLengthINTTerminalRuleCall_0_12_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"length",
							lv_length_12_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_13='x'
			{
				newLeafNode(otherlv_13, grammarAccess.getCaltreesBuildActionAccess().getXKeyword_0_13());
			}
			(
				(
					lv_breadth_14_0=RULE_INT
					{
						newLeafNode(lv_breadth_14_0, grammarAccess.getCaltreesBuildActionAccess().getBreadthINTTerminalRuleCall_0_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"breadth",
							lv_breadth_14_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_15='x'
			{
				newLeafNode(otherlv_15, grammarAccess.getCaltreesBuildActionAccess().getXKeyword_0_15());
			}
			(
				(
					lv_height_16_0=RULE_INT
					{
						newLeafNode(lv_height_16_0, grammarAccess.getCaltreesBuildActionAccess().getHeightINTTerminalRuleCall_0_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"height",
							lv_height_16_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_17='in'
			{
				newLeafNode(otherlv_17, grammarAccess.getCaltreesBuildActionAccess().getInKeyword_0_17());
			}
			otherlv_18='region'
			{
				newLeafNode(otherlv_18, grammarAccess.getCaltreesBuildActionAccess().getRegionKeyword_0_18());
			}
			(
				(
					lv_region_19_0=RULE_INT
					{
						newLeafNode(lv_region_19_0, grammarAccess.getCaltreesBuildActionAccess().getRegionINTTerminalRuleCall_0_19_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_19_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_20='How'
			{
				newLeafNode(otherlv_20, grammarAccess.getCaltreesBuildActionAccess().getHowKeyword_1_0());
			}
			otherlv_21='many'
			{
				newLeafNode(otherlv_21, grammarAccess.getCaltreesBuildActionAccess().getManyKeyword_1_1());
			}
			otherlv_22='trees'
			{
				newLeafNode(otherlv_22, grammarAccess.getCaltreesBuildActionAccess().getTreesKeyword_1_2());
			}
			otherlv_23='to'
			{
				newLeafNode(otherlv_23, grammarAccess.getCaltreesBuildActionAccess().getToKeyword_1_3());
			}
			otherlv_24='be'
			{
				newLeafNode(otherlv_24, grammarAccess.getCaltreesBuildActionAccess().getBeKeyword_1_4());
			}
			otherlv_25='planted'
			{
				newLeafNode(otherlv_25, grammarAccess.getCaltreesBuildActionAccess().getPlantedKeyword_1_5());
			}
			otherlv_26='if'
			{
				newLeafNode(otherlv_26, grammarAccess.getCaltreesBuildActionAccess().getIfKeyword_1_6());
			}
			otherlv_27='we'
			{
				newLeafNode(otherlv_27, grammarAccess.getCaltreesBuildActionAccess().getWeKeyword_1_7());
			}
			otherlv_28='build'
			{
				newLeafNode(otherlv_28, grammarAccess.getCaltreesBuildActionAccess().getBuildKeyword_1_8());
			}
			(
				(
					lv_no_of_buildings_29_0=RULE_INT
					{
						newLeafNode(lv_no_of_buildings_29_0, grammarAccess.getCaltreesBuildActionAccess().getNo_of_buildingsINTTerminalRuleCall_1_9_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_buildings",
							lv_no_of_buildings_29_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_30='of'
			{
				newLeafNode(otherlv_30, grammarAccess.getCaltreesBuildActionAccess().getOfKeyword_1_10());
			}
			otherlv_31='dimensions'
			{
				newLeafNode(otherlv_31, grammarAccess.getCaltreesBuildActionAccess().getDimensionsKeyword_1_11());
			}
			(
				(
					lv_length_32_0=RULE_INT
					{
						newLeafNode(lv_length_32_0, grammarAccess.getCaltreesBuildActionAccess().getLengthINTTerminalRuleCall_1_12_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"length",
							lv_length_32_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_33='x'
			{
				newLeafNode(otherlv_33, grammarAccess.getCaltreesBuildActionAccess().getXKeyword_1_13());
			}
			(
				(
					lv_breadth_34_0=RULE_INT
					{
						newLeafNode(lv_breadth_34_0, grammarAccess.getCaltreesBuildActionAccess().getBreadthINTTerminalRuleCall_1_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"breadth",
							lv_breadth_34_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_35='x'
			{
				newLeafNode(otherlv_35, grammarAccess.getCaltreesBuildActionAccess().getXKeyword_1_15());
			}
			(
				(
					lv_height_36_0=RULE_INT
					{
						newLeafNode(lv_height_36_0, grammarAccess.getCaltreesBuildActionAccess().getHeightINTTerminalRuleCall_1_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"height",
							lv_height_36_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_37='in'
			{
				newLeafNode(otherlv_37, grammarAccess.getCaltreesBuildActionAccess().getInKeyword_1_17());
			}
			otherlv_38='region'
			{
				newLeafNode(otherlv_38, grammarAccess.getCaltreesBuildActionAccess().getRegionKeyword_1_18());
			}
			(
				(
					lv_region_39_0=RULE_INT
					{
						newLeafNode(lv_region_39_0, grammarAccess.getCaltreesBuildActionAccess().getRegionINTTerminalRuleCall_1_19_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_39_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_40='How'
			{
				newLeafNode(otherlv_40, grammarAccess.getCaltreesBuildActionAccess().getHowKeyword_2_0());
			}
			otherlv_41='Many'
			{
				newLeafNode(otherlv_41, grammarAccess.getCaltreesBuildActionAccess().getManyKeyword_2_1());
			}
			otherlv_42='Trees'
			{
				newLeafNode(otherlv_42, grammarAccess.getCaltreesBuildActionAccess().getTreesKeyword_2_2());
			}
			otherlv_43='To'
			{
				newLeafNode(otherlv_43, grammarAccess.getCaltreesBuildActionAccess().getToKeyword_2_3());
			}
			otherlv_44='Be'
			{
				newLeafNode(otherlv_44, grammarAccess.getCaltreesBuildActionAccess().getBeKeyword_2_4());
			}
			otherlv_45='Planted'
			{
				newLeafNode(otherlv_45, grammarAccess.getCaltreesBuildActionAccess().getPlantedKeyword_2_5());
			}
			otherlv_46='If'
			{
				newLeafNode(otherlv_46, grammarAccess.getCaltreesBuildActionAccess().getIfKeyword_2_6());
			}
			otherlv_47='We'
			{
				newLeafNode(otherlv_47, grammarAccess.getCaltreesBuildActionAccess().getWeKeyword_2_7());
			}
			otherlv_48='Build'
			{
				newLeafNode(otherlv_48, grammarAccess.getCaltreesBuildActionAccess().getBuildKeyword_2_8());
			}
			(
				(
					lv_no_of_buildings_49_0=RULE_INT
					{
						newLeafNode(lv_no_of_buildings_49_0, grammarAccess.getCaltreesBuildActionAccess().getNo_of_buildingsINTTerminalRuleCall_2_9_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_buildings",
							lv_no_of_buildings_49_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_50='Of'
			{
				newLeafNode(otherlv_50, grammarAccess.getCaltreesBuildActionAccess().getOfKeyword_2_10());
			}
			otherlv_51='Dimensions'
			{
				newLeafNode(otherlv_51, grammarAccess.getCaltreesBuildActionAccess().getDimensionsKeyword_2_11());
			}
			(
				(
					lv_length_52_0=RULE_INT
					{
						newLeafNode(lv_length_52_0, grammarAccess.getCaltreesBuildActionAccess().getLengthINTTerminalRuleCall_2_12_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"length",
							lv_length_52_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_53='x'
			{
				newLeafNode(otherlv_53, grammarAccess.getCaltreesBuildActionAccess().getXKeyword_2_13());
			}
			(
				(
					lv_breadth_54_0=RULE_INT
					{
						newLeafNode(lv_breadth_54_0, grammarAccess.getCaltreesBuildActionAccess().getBreadthINTTerminalRuleCall_2_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"breadth",
							lv_breadth_54_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_55='x'
			{
				newLeafNode(otherlv_55, grammarAccess.getCaltreesBuildActionAccess().getXKeyword_2_15());
			}
			(
				(
					lv_height_56_0=RULE_INT
					{
						newLeafNode(lv_height_56_0, grammarAccess.getCaltreesBuildActionAccess().getHeightINTTerminalRuleCall_2_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"height",
							lv_height_56_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_57='In'
			{
				newLeafNode(otherlv_57, grammarAccess.getCaltreesBuildActionAccess().getInKeyword_2_17());
			}
			otherlv_58='Region'
			{
				newLeafNode(otherlv_58, grammarAccess.getCaltreesBuildActionAccess().getRegionKeyword_2_18());
			}
			(
				(
					lv_region_59_0=RULE_INT
					{
						newLeafNode(lv_region_59_0, grammarAccess.getCaltreesBuildActionAccess().getRegionINTTerminalRuleCall_2_19_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_59_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_60='HOW'
			{
				newLeafNode(otherlv_60, grammarAccess.getCaltreesBuildActionAccess().getHOWKeyword_3_0());
			}
			otherlv_61='MANY'
			{
				newLeafNode(otherlv_61, grammarAccess.getCaltreesBuildActionAccess().getMANYKeyword_3_1());
			}
			otherlv_62='TREES'
			{
				newLeafNode(otherlv_62, grammarAccess.getCaltreesBuildActionAccess().getTREESKeyword_3_2());
			}
			otherlv_63='TO'
			{
				newLeafNode(otherlv_63, grammarAccess.getCaltreesBuildActionAccess().getTOKeyword_3_3());
			}
			otherlv_64='BE'
			{
				newLeafNode(otherlv_64, grammarAccess.getCaltreesBuildActionAccess().getBEKeyword_3_4());
			}
			otherlv_65='PLANTED'
			{
				newLeafNode(otherlv_65, grammarAccess.getCaltreesBuildActionAccess().getPLANTEDKeyword_3_5());
			}
			otherlv_66='IF'
			{
				newLeafNode(otherlv_66, grammarAccess.getCaltreesBuildActionAccess().getIFKeyword_3_6());
			}
			otherlv_67='WE'
			{
				newLeafNode(otherlv_67, grammarAccess.getCaltreesBuildActionAccess().getWEKeyword_3_7());
			}
			otherlv_68='BUILD'
			{
				newLeafNode(otherlv_68, grammarAccess.getCaltreesBuildActionAccess().getBUILDKeyword_3_8());
			}
			(
				(
					lv_no_of_buildings_69_0=RULE_INT
					{
						newLeafNode(lv_no_of_buildings_69_0, grammarAccess.getCaltreesBuildActionAccess().getNo_of_buildingsINTTerminalRuleCall_3_9_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_buildings",
							lv_no_of_buildings_69_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_70='OF'
			{
				newLeafNode(otherlv_70, grammarAccess.getCaltreesBuildActionAccess().getOFKeyword_3_10());
			}
			otherlv_71='DIMENSIONS'
			{
				newLeafNode(otherlv_71, grammarAccess.getCaltreesBuildActionAccess().getDIMENSIONSKeyword_3_11());
			}
			(
				(
					lv_length_72_0=RULE_INT
					{
						newLeafNode(lv_length_72_0, grammarAccess.getCaltreesBuildActionAccess().getLengthINTTerminalRuleCall_3_12_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"length",
							lv_length_72_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_73='x'
			{
				newLeafNode(otherlv_73, grammarAccess.getCaltreesBuildActionAccess().getXKeyword_3_13());
			}
			(
				(
					lv_breadth_74_0=RULE_INT
					{
						newLeafNode(lv_breadth_74_0, grammarAccess.getCaltreesBuildActionAccess().getBreadthINTTerminalRuleCall_3_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"breadth",
							lv_breadth_74_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_75='x'
			{
				newLeafNode(otherlv_75, grammarAccess.getCaltreesBuildActionAccess().getXKeyword_3_15());
			}
			(
				(
					lv_height_76_0=RULE_INT
					{
						newLeafNode(lv_height_76_0, grammarAccess.getCaltreesBuildActionAccess().getHeightINTTerminalRuleCall_3_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"height",
							lv_height_76_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_77='IN'
			{
				newLeafNode(otherlv_77, grammarAccess.getCaltreesBuildActionAccess().getINKeyword_3_17());
			}
			otherlv_78='REGION'
			{
				newLeafNode(otherlv_78, grammarAccess.getCaltreesBuildActionAccess().getREGIONKeyword_3_18());
			}
			(
				(
					lv_region_79_0=RULE_INT
					{
						newLeafNode(lv_region_79_0, grammarAccess.getCaltreesBuildActionAccess().getRegionINTTerminalRuleCall_3_19_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_79_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_80='How'
			{
				newLeafNode(otherlv_80, grammarAccess.getCaltreesBuildActionAccess().getHowKeyword_4_0());
			}
			otherlv_81='Many'
			{
				newLeafNode(otherlv_81, grammarAccess.getCaltreesBuildActionAccess().getManyKeyword_4_1());
			}
			otherlv_82='Trees'
			{
				newLeafNode(otherlv_82, grammarAccess.getCaltreesBuildActionAccess().getTreesKeyword_4_2());
			}
			otherlv_83='to'
			{
				newLeafNode(otherlv_83, grammarAccess.getCaltreesBuildActionAccess().getToKeyword_4_3());
			}
			otherlv_84='be'
			{
				newLeafNode(otherlv_84, grammarAccess.getCaltreesBuildActionAccess().getBeKeyword_4_4());
			}
			otherlv_85='Planted'
			{
				newLeafNode(otherlv_85, grammarAccess.getCaltreesBuildActionAccess().getPlantedKeyword_4_5());
			}
			otherlv_86='if'
			{
				newLeafNode(otherlv_86, grammarAccess.getCaltreesBuildActionAccess().getIfKeyword_4_6());
			}
			otherlv_87='we'
			{
				newLeafNode(otherlv_87, grammarAccess.getCaltreesBuildActionAccess().getWeKeyword_4_7());
			}
			otherlv_88='Build'
			{
				newLeafNode(otherlv_88, grammarAccess.getCaltreesBuildActionAccess().getBuildKeyword_4_8());
			}
			(
				(
					lv_no_of_buildings_89_0=RULE_INT
					{
						newLeafNode(lv_no_of_buildings_89_0, grammarAccess.getCaltreesBuildActionAccess().getNo_of_buildingsINTTerminalRuleCall_4_9_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_buildings",
							lv_no_of_buildings_89_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_90='of'
			{
				newLeafNode(otherlv_90, grammarAccess.getCaltreesBuildActionAccess().getOfKeyword_4_10());
			}
			otherlv_91='Dimensions'
			{
				newLeafNode(otherlv_91, grammarAccess.getCaltreesBuildActionAccess().getDimensionsKeyword_4_11());
			}
			(
				(
					lv_length_92_0=RULE_INT
					{
						newLeafNode(lv_length_92_0, grammarAccess.getCaltreesBuildActionAccess().getLengthINTTerminalRuleCall_4_12_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"length",
							lv_length_92_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_93='x'
			{
				newLeafNode(otherlv_93, grammarAccess.getCaltreesBuildActionAccess().getXKeyword_4_13());
			}
			(
				(
					lv_breadth_94_0=RULE_INT
					{
						newLeafNode(lv_breadth_94_0, grammarAccess.getCaltreesBuildActionAccess().getBreadthINTTerminalRuleCall_4_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"breadth",
							lv_breadth_94_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_95='x'
			{
				newLeafNode(otherlv_95, grammarAccess.getCaltreesBuildActionAccess().getXKeyword_4_15());
			}
			(
				(
					lv_height_96_0=RULE_INT
					{
						newLeafNode(lv_height_96_0, grammarAccess.getCaltreesBuildActionAccess().getHeightINTTerminalRuleCall_4_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"height",
							lv_height_96_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_97='in'
			{
				newLeafNode(otherlv_97, grammarAccess.getCaltreesBuildActionAccess().getInKeyword_4_17());
			}
			otherlv_98='Region'
			{
				newLeafNode(otherlv_98, grammarAccess.getCaltreesBuildActionAccess().getRegionKeyword_4_18());
			}
			(
				(
					lv_region_99_0=RULE_INT
					{
						newLeafNode(lv_region_99_0, grammarAccess.getCaltreesBuildActionAccess().getRegionINTTerminalRuleCall_4_19_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCaltreesBuildActionRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_99_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDesignResidential
entryRuleDesignResidential returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDesignResidentialRule()); }
	iv_ruleDesignResidential=ruleDesignResidential
	{ $current=$iv_ruleDesignResidential.current; }
	EOF;

// Rule DesignResidential
ruleDesignResidential returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='what'
			{
				newLeafNode(otherlv_0, grammarAccess.getDesignResidentialAccess().getWhatKeyword_0_0());
			}
			otherlv_1='will'
			{
				newLeafNode(otherlv_1, grammarAccess.getDesignResidentialAccess().getWillKeyword_0_1());
			}
			otherlv_2='be'
			{
				newLeafNode(otherlv_2, grammarAccess.getDesignResidentialAccess().getBeKeyword_0_2());
			}
			otherlv_3='the'
			{
				newLeafNode(otherlv_3, grammarAccess.getDesignResidentialAccess().getTheKeyword_0_3());
			}
			otherlv_4='design'
			{
				newLeafNode(otherlv_4, grammarAccess.getDesignResidentialAccess().getDesignKeyword_0_4());
			}
			otherlv_5='plan'
			{
				newLeafNode(otherlv_5, grammarAccess.getDesignResidentialAccess().getPlanKeyword_0_5());
			}
			otherlv_6='for'
			{
				newLeafNode(otherlv_6, grammarAccess.getDesignResidentialAccess().getForKeyword_0_6());
			}
			otherlv_7='residential'
			{
				newLeafNode(otherlv_7, grammarAccess.getDesignResidentialAccess().getResidentialKeyword_0_7());
			}
			otherlv_8='area'
			{
				newLeafNode(otherlv_8, grammarAccess.getDesignResidentialAccess().getAreaKeyword_0_8());
			}
			otherlv_9='for'
			{
				newLeafNode(otherlv_9, grammarAccess.getDesignResidentialAccess().getForKeyword_0_9());
			}
			(
				(
					lv_no_of_people_10_0=RULE_INT
					{
						newLeafNode(lv_no_of_people_10_0, grammarAccess.getDesignResidentialAccess().getNo_of_peopleINTTerminalRuleCall_0_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignResidentialRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_people",
							lv_no_of_people_10_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_11='people'
			{
				newLeafNode(otherlv_11, grammarAccess.getDesignResidentialAccess().getPeopleKeyword_0_11());
			}
			otherlv_12='in'
			{
				newLeafNode(otherlv_12, grammarAccess.getDesignResidentialAccess().getInKeyword_0_12());
			}
			otherlv_13='region'
			{
				newLeafNode(otherlv_13, grammarAccess.getDesignResidentialAccess().getRegionKeyword_0_13());
			}
			(
				(
					lv_region_14_0=RULE_INT
					{
						newLeafNode(lv_region_14_0, grammarAccess.getDesignResidentialAccess().getRegionINTTerminalRuleCall_0_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignResidentialRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_14_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_15='What'
			{
				newLeafNode(otherlv_15, grammarAccess.getDesignResidentialAccess().getWhatKeyword_1_0());
			}
			otherlv_16='Will'
			{
				newLeafNode(otherlv_16, grammarAccess.getDesignResidentialAccess().getWillKeyword_1_1());
			}
			otherlv_17='Be'
			{
				newLeafNode(otherlv_17, grammarAccess.getDesignResidentialAccess().getBeKeyword_1_2());
			}
			otherlv_18='The'
			{
				newLeafNode(otherlv_18, grammarAccess.getDesignResidentialAccess().getTheKeyword_1_3());
			}
			otherlv_19='Design'
			{
				newLeafNode(otherlv_19, grammarAccess.getDesignResidentialAccess().getDesignKeyword_1_4());
			}
			otherlv_20='Plan'
			{
				newLeafNode(otherlv_20, grammarAccess.getDesignResidentialAccess().getPlanKeyword_1_5());
			}
			otherlv_21='For'
			{
				newLeafNode(otherlv_21, grammarAccess.getDesignResidentialAccess().getForKeyword_1_6());
			}
			otherlv_22='Residential'
			{
				newLeafNode(otherlv_22, grammarAccess.getDesignResidentialAccess().getResidentialKeyword_1_7());
			}
			otherlv_23='Area'
			{
				newLeafNode(otherlv_23, grammarAccess.getDesignResidentialAccess().getAreaKeyword_1_8());
			}
			otherlv_24='For'
			{
				newLeafNode(otherlv_24, grammarAccess.getDesignResidentialAccess().getForKeyword_1_9());
			}
			(
				(
					lv_no_of_people_25_0=RULE_INT
					{
						newLeafNode(lv_no_of_people_25_0, grammarAccess.getDesignResidentialAccess().getNo_of_peopleINTTerminalRuleCall_1_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignResidentialRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_people",
							lv_no_of_people_25_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_26='People'
			{
				newLeafNode(otherlv_26, grammarAccess.getDesignResidentialAccess().getPeopleKeyword_1_11());
			}
			otherlv_27='In'
			{
				newLeafNode(otherlv_27, grammarAccess.getDesignResidentialAccess().getInKeyword_1_12());
			}
			otherlv_28='Region'
			{
				newLeafNode(otherlv_28, grammarAccess.getDesignResidentialAccess().getRegionKeyword_1_13());
			}
			(
				(
					lv_region_29_0=RULE_INT
					{
						newLeafNode(lv_region_29_0, grammarAccess.getDesignResidentialAccess().getRegionINTTerminalRuleCall_1_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignResidentialRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_29_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_30='What'
			{
				newLeafNode(otherlv_30, grammarAccess.getDesignResidentialAccess().getWhatKeyword_2_0());
			}
			otherlv_31='will'
			{
				newLeafNode(otherlv_31, grammarAccess.getDesignResidentialAccess().getWillKeyword_2_1());
			}
			otherlv_32='be'
			{
				newLeafNode(otherlv_32, grammarAccess.getDesignResidentialAccess().getBeKeyword_2_2());
			}
			otherlv_33='the'
			{
				newLeafNode(otherlv_33, grammarAccess.getDesignResidentialAccess().getTheKeyword_2_3());
			}
			otherlv_34='design'
			{
				newLeafNode(otherlv_34, grammarAccess.getDesignResidentialAccess().getDesignKeyword_2_4());
			}
			otherlv_35='plan'
			{
				newLeafNode(otherlv_35, grammarAccess.getDesignResidentialAccess().getPlanKeyword_2_5());
			}
			otherlv_36='for'
			{
				newLeafNode(otherlv_36, grammarAccess.getDesignResidentialAccess().getForKeyword_2_6());
			}
			otherlv_37='residential'
			{
				newLeafNode(otherlv_37, grammarAccess.getDesignResidentialAccess().getResidentialKeyword_2_7());
			}
			otherlv_38='area'
			{
				newLeafNode(otherlv_38, grammarAccess.getDesignResidentialAccess().getAreaKeyword_2_8());
			}
			otherlv_39='for'
			{
				newLeafNode(otherlv_39, grammarAccess.getDesignResidentialAccess().getForKeyword_2_9());
			}
			(
				(
					lv_no_of_people_40_0=RULE_INT
					{
						newLeafNode(lv_no_of_people_40_0, grammarAccess.getDesignResidentialAccess().getNo_of_peopleINTTerminalRuleCall_2_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignResidentialRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_people",
							lv_no_of_people_40_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_41='people'
			{
				newLeafNode(otherlv_41, grammarAccess.getDesignResidentialAccess().getPeopleKeyword_2_11());
			}
			otherlv_42='in'
			{
				newLeafNode(otherlv_42, grammarAccess.getDesignResidentialAccess().getInKeyword_2_12());
			}
			otherlv_43='region'
			{
				newLeafNode(otherlv_43, grammarAccess.getDesignResidentialAccess().getRegionKeyword_2_13());
			}
			(
				(
					lv_region_44_0=RULE_INT
					{
						newLeafNode(lv_region_44_0, grammarAccess.getDesignResidentialAccess().getRegionINTTerminalRuleCall_2_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignResidentialRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_44_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_45='WHAT'
			{
				newLeafNode(otherlv_45, grammarAccess.getDesignResidentialAccess().getWHATKeyword_3_0());
			}
			otherlv_46='WILL'
			{
				newLeafNode(otherlv_46, grammarAccess.getDesignResidentialAccess().getWILLKeyword_3_1());
			}
			otherlv_47='BE'
			{
				newLeafNode(otherlv_47, grammarAccess.getDesignResidentialAccess().getBEKeyword_3_2());
			}
			otherlv_48='THE'
			{
				newLeafNode(otherlv_48, grammarAccess.getDesignResidentialAccess().getTHEKeyword_3_3());
			}
			otherlv_49='DESIGN'
			{
				newLeafNode(otherlv_49, grammarAccess.getDesignResidentialAccess().getDESIGNKeyword_3_4());
			}
			otherlv_50='PLAN'
			{
				newLeafNode(otherlv_50, grammarAccess.getDesignResidentialAccess().getPLANKeyword_3_5());
			}
			otherlv_51='FOR'
			{
				newLeafNode(otherlv_51, grammarAccess.getDesignResidentialAccess().getFORKeyword_3_6());
			}
			otherlv_52='RESIDENTIAL'
			{
				newLeafNode(otherlv_52, grammarAccess.getDesignResidentialAccess().getRESIDENTIALKeyword_3_7());
			}
			otherlv_53='AREA'
			{
				newLeafNode(otherlv_53, grammarAccess.getDesignResidentialAccess().getAREAKeyword_3_8());
			}
			otherlv_54='FOR'
			{
				newLeafNode(otherlv_54, grammarAccess.getDesignResidentialAccess().getFORKeyword_3_9());
			}
			(
				(
					lv_no_of_people_55_0=RULE_INT
					{
						newLeafNode(lv_no_of_people_55_0, grammarAccess.getDesignResidentialAccess().getNo_of_peopleINTTerminalRuleCall_3_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignResidentialRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_people",
							lv_no_of_people_55_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_56='PEOPLE'
			{
				newLeafNode(otherlv_56, grammarAccess.getDesignResidentialAccess().getPEOPLEKeyword_3_11());
			}
			otherlv_57='IN'
			{
				newLeafNode(otherlv_57, grammarAccess.getDesignResidentialAccess().getINKeyword_3_12());
			}
			otherlv_58='REGION'
			{
				newLeafNode(otherlv_58, grammarAccess.getDesignResidentialAccess().getREGIONKeyword_3_13());
			}
			(
				(
					lv_region_59_0=RULE_INT
					{
						newLeafNode(lv_region_59_0, grammarAccess.getDesignResidentialAccess().getRegionINTTerminalRuleCall_3_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignResidentialRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_59_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_60='What'
			{
				newLeafNode(otherlv_60, grammarAccess.getDesignResidentialAccess().getWhatKeyword_4_0());
			}
			otherlv_61='Will'
			{
				newLeafNode(otherlv_61, grammarAccess.getDesignResidentialAccess().getWillKeyword_4_1());
			}
			otherlv_62='be'
			{
				newLeafNode(otherlv_62, grammarAccess.getDesignResidentialAccess().getBeKeyword_4_2());
			}
			otherlv_63='the'
			{
				newLeafNode(otherlv_63, grammarAccess.getDesignResidentialAccess().getTheKeyword_4_3());
			}
			otherlv_64='Design'
			{
				newLeafNode(otherlv_64, grammarAccess.getDesignResidentialAccess().getDesignKeyword_4_4());
			}
			otherlv_65='Plan'
			{
				newLeafNode(otherlv_65, grammarAccess.getDesignResidentialAccess().getPlanKeyword_4_5());
			}
			otherlv_66='for'
			{
				newLeafNode(otherlv_66, grammarAccess.getDesignResidentialAccess().getForKeyword_4_6());
			}
			otherlv_67='Residential'
			{
				newLeafNode(otherlv_67, grammarAccess.getDesignResidentialAccess().getResidentialKeyword_4_7());
			}
			otherlv_68='Area'
			{
				newLeafNode(otherlv_68, grammarAccess.getDesignResidentialAccess().getAreaKeyword_4_8());
			}
			otherlv_69='For'
			{
				newLeafNode(otherlv_69, grammarAccess.getDesignResidentialAccess().getForKeyword_4_9());
			}
			(
				(
					lv_no_of_people_70_0=RULE_INT
					{
						newLeafNode(lv_no_of_people_70_0, grammarAccess.getDesignResidentialAccess().getNo_of_peopleINTTerminalRuleCall_4_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignResidentialRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_people",
							lv_no_of_people_70_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_71='People'
			{
				newLeafNode(otherlv_71, grammarAccess.getDesignResidentialAccess().getPeopleKeyword_4_11());
			}
			otherlv_72='in'
			{
				newLeafNode(otherlv_72, grammarAccess.getDesignResidentialAccess().getInKeyword_4_12());
			}
			otherlv_73='Region'
			{
				newLeafNode(otherlv_73, grammarAccess.getDesignResidentialAccess().getRegionKeyword_4_13());
			}
			(
				(
					lv_region_74_0=RULE_INT
					{
						newLeafNode(lv_region_74_0, grammarAccess.getDesignResidentialAccess().getRegionINTTerminalRuleCall_4_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignResidentialRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_74_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
	)
;

// Entry rule entryRulefindtempDemolish
entryRulefindtempDemolish returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindtempDemolishRule()); }
	iv_rulefindtempDemolish=rulefindtempDemolish
	{ $current=$iv_rulefindtempDemolish.current; }
	EOF;

// Rule findtempDemolish
rulefindtempDemolish returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='what'
			{
				newLeafNode(otherlv_0, grammarAccess.getFindtempDemolishAccess().getWhatKeyword_0_0());
			}
			otherlv_1='will'
			{
				newLeafNode(otherlv_1, grammarAccess.getFindtempDemolishAccess().getWillKeyword_0_1());
			}
			otherlv_2='be'
			{
				newLeafNode(otherlv_2, grammarAccess.getFindtempDemolishAccess().getBeKeyword_0_2());
			}
			otherlv_3='the'
			{
				newLeafNode(otherlv_3, grammarAccess.getFindtempDemolishAccess().getTheKeyword_0_3());
			}
			otherlv_4='temperature'
			{
				newLeafNode(otherlv_4, grammarAccess.getFindtempDemolishAccess().getTemperatureKeyword_0_4());
			}
			otherlv_5='if'
			{
				newLeafNode(otherlv_5, grammarAccess.getFindtempDemolishAccess().getIfKeyword_0_5());
			}
			otherlv_6='we'
			{
				newLeafNode(otherlv_6, grammarAccess.getFindtempDemolishAccess().getWeKeyword_0_6());
			}
			otherlv_7='demolish'
			{
				newLeafNode(otherlv_7, grammarAccess.getFindtempDemolishAccess().getDemolishKeyword_0_7());
			}
			(
				(
					lv_no_of_buildings_8_0=RULE_INT
					{
						newLeafNode(lv_no_of_buildings_8_0, grammarAccess.getFindtempDemolishAccess().getNo_of_buildingsINTTerminalRuleCall_0_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempDemolishRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_buildings",
							lv_no_of_buildings_8_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_9='buildings'
			{
				newLeafNode(otherlv_9, grammarAccess.getFindtempDemolishAccess().getBuildingsKeyword_0_9());
			}
			(
				otherlv_10='of'
				{
					newLeafNode(otherlv_10, grammarAccess.getFindtempDemolishAccess().getOfKeyword_0_10_0());
				}
				otherlv_11='dimensions'
				{
					newLeafNode(otherlv_11, grammarAccess.getFindtempDemolishAccess().getDimensionsKeyword_0_10_1());
				}
				(
					(
						lv_length_12_0=RULE_INT
						{
							newLeafNode(lv_length_12_0, grammarAccess.getFindtempDemolishAccess().getLengthINTTerminalRuleCall_0_10_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFindtempDemolishRule());
							}
							setWithLastConsumed(
								$current,
								"length",
								lv_length_12_0,
								"org.eclipse.xtext.xbase.Xbase.INT");
						}
					)
				)
				otherlv_13='x'
				{
					newLeafNode(otherlv_13, grammarAccess.getFindtempDemolishAccess().getXKeyword_0_10_3());
				}
				(
					(
						lv_breadth_14_0=RULE_INT
						{
							newLeafNode(lv_breadth_14_0, grammarAccess.getFindtempDemolishAccess().getBreadthINTTerminalRuleCall_0_10_4_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFindtempDemolishRule());
							}
							setWithLastConsumed(
								$current,
								"breadth",
								lv_breadth_14_0,
								"org.eclipse.xtext.xbase.Xbase.INT");
						}
					)
				)
				otherlv_15='x'
				{
					newLeafNode(otherlv_15, grammarAccess.getFindtempDemolishAccess().getXKeyword_0_10_5());
				}
				(
					(
						lv_height_16_0=RULE_INT
						{
							newLeafNode(lv_height_16_0, grammarAccess.getFindtempDemolishAccess().getHeightINTTerminalRuleCall_0_10_6_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFindtempDemolishRule());
							}
							setWithLastConsumed(
								$current,
								"height",
								lv_height_16_0,
								"org.eclipse.xtext.xbase.Xbase.INT");
						}
					)
				)
			)?
			otherlv_17='in'
			{
				newLeafNode(otherlv_17, grammarAccess.getFindtempDemolishAccess().getInKeyword_0_11());
			}
			otherlv_18='region'
			{
				newLeafNode(otherlv_18, grammarAccess.getFindtempDemolishAccess().getRegionKeyword_0_12());
			}
			(
				(
					lv_region_19_0=RULE_INT
					{
						newLeafNode(lv_region_19_0, grammarAccess.getFindtempDemolishAccess().getRegionINTTerminalRuleCall_0_13_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempDemolishRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_19_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_20='What'
			{
				newLeafNode(otherlv_20, grammarAccess.getFindtempDemolishAccess().getWhatKeyword_1_0());
			}
			otherlv_21='will'
			{
				newLeafNode(otherlv_21, grammarAccess.getFindtempDemolishAccess().getWillKeyword_1_1());
			}
			otherlv_22='be'
			{
				newLeafNode(otherlv_22, grammarAccess.getFindtempDemolishAccess().getBeKeyword_1_2());
			}
			otherlv_23='the'
			{
				newLeafNode(otherlv_23, grammarAccess.getFindtempDemolishAccess().getTheKeyword_1_3());
			}
			otherlv_24='temperature'
			{
				newLeafNode(otherlv_24, grammarAccess.getFindtempDemolishAccess().getTemperatureKeyword_1_4());
			}
			otherlv_25='if'
			{
				newLeafNode(otherlv_25, grammarAccess.getFindtempDemolishAccess().getIfKeyword_1_5());
			}
			otherlv_26='we'
			{
				newLeafNode(otherlv_26, grammarAccess.getFindtempDemolishAccess().getWeKeyword_1_6());
			}
			otherlv_27='demolish'
			{
				newLeafNode(otherlv_27, grammarAccess.getFindtempDemolishAccess().getDemolishKeyword_1_7());
			}
			(
				(
					lv_no_of_buildings_28_0=RULE_INT
					{
						newLeafNode(lv_no_of_buildings_28_0, grammarAccess.getFindtempDemolishAccess().getNo_of_buildingsINTTerminalRuleCall_1_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempDemolishRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_buildings",
							lv_no_of_buildings_28_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_29='buildings'
			{
				newLeafNode(otherlv_29, grammarAccess.getFindtempDemolishAccess().getBuildingsKeyword_1_9());
			}
			(
				otherlv_30='of'
				{
					newLeafNode(otherlv_30, grammarAccess.getFindtempDemolishAccess().getOfKeyword_1_10_0());
				}
				otherlv_31='dimensions'
				{
					newLeafNode(otherlv_31, grammarAccess.getFindtempDemolishAccess().getDimensionsKeyword_1_10_1());
				}
				(
					(
						lv_length_32_0=RULE_INT
						{
							newLeafNode(lv_length_32_0, grammarAccess.getFindtempDemolishAccess().getLengthINTTerminalRuleCall_1_10_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFindtempDemolishRule());
							}
							setWithLastConsumed(
								$current,
								"length",
								lv_length_32_0,
								"org.eclipse.xtext.xbase.Xbase.INT");
						}
					)
				)
				otherlv_33='x'
				{
					newLeafNode(otherlv_33, grammarAccess.getFindtempDemolishAccess().getXKeyword_1_10_3());
				}
				(
					(
						lv_breadth_34_0=RULE_INT
						{
							newLeafNode(lv_breadth_34_0, grammarAccess.getFindtempDemolishAccess().getBreadthINTTerminalRuleCall_1_10_4_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFindtempDemolishRule());
							}
							setWithLastConsumed(
								$current,
								"breadth",
								lv_breadth_34_0,
								"org.eclipse.xtext.xbase.Xbase.INT");
						}
					)
				)
				otherlv_35='x'
				{
					newLeafNode(otherlv_35, grammarAccess.getFindtempDemolishAccess().getXKeyword_1_10_5());
				}
				(
					(
						lv_height_36_0=RULE_INT
						{
							newLeafNode(lv_height_36_0, grammarAccess.getFindtempDemolishAccess().getHeightINTTerminalRuleCall_1_10_6_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFindtempDemolishRule());
							}
							setWithLastConsumed(
								$current,
								"height",
								lv_height_36_0,
								"org.eclipse.xtext.xbase.Xbase.INT");
						}
					)
				)
			)?
			otherlv_37='in'
			{
				newLeafNode(otherlv_37, grammarAccess.getFindtempDemolishAccess().getInKeyword_1_11());
			}
			otherlv_38='region'
			{
				newLeafNode(otherlv_38, grammarAccess.getFindtempDemolishAccess().getRegionKeyword_1_12());
			}
			(
				(
					lv_region_39_0=RULE_INT
					{
						newLeafNode(lv_region_39_0, grammarAccess.getFindtempDemolishAccess().getRegionINTTerminalRuleCall_1_13_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempDemolishRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_39_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_40='What'
			{
				newLeafNode(otherlv_40, grammarAccess.getFindtempDemolishAccess().getWhatKeyword_2_0());
			}
			otherlv_41='Will'
			{
				newLeafNode(otherlv_41, grammarAccess.getFindtempDemolishAccess().getWillKeyword_2_1());
			}
			otherlv_42='Be'
			{
				newLeafNode(otherlv_42, grammarAccess.getFindtempDemolishAccess().getBeKeyword_2_2());
			}
			otherlv_43='The'
			{
				newLeafNode(otherlv_43, grammarAccess.getFindtempDemolishAccess().getTheKeyword_2_3());
			}
			otherlv_44='Temperature'
			{
				newLeafNode(otherlv_44, grammarAccess.getFindtempDemolishAccess().getTemperatureKeyword_2_4());
			}
			otherlv_45='If'
			{
				newLeafNode(otherlv_45, grammarAccess.getFindtempDemolishAccess().getIfKeyword_2_5());
			}
			otherlv_46='We'
			{
				newLeafNode(otherlv_46, grammarAccess.getFindtempDemolishAccess().getWeKeyword_2_6());
			}
			otherlv_47='Demolish'
			{
				newLeafNode(otherlv_47, grammarAccess.getFindtempDemolishAccess().getDemolishKeyword_2_7());
			}
			(
				(
					lv_no_of_buildings_48_0=RULE_INT
					{
						newLeafNode(lv_no_of_buildings_48_0, grammarAccess.getFindtempDemolishAccess().getNo_of_buildingsINTTerminalRuleCall_2_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempDemolishRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_buildings",
							lv_no_of_buildings_48_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_49='Buildings'
			{
				newLeafNode(otherlv_49, grammarAccess.getFindtempDemolishAccess().getBuildingsKeyword_2_9());
			}
			(
				otherlv_50='Of'
				{
					newLeafNode(otherlv_50, grammarAccess.getFindtempDemolishAccess().getOfKeyword_2_10_0());
				}
				otherlv_51='Dimensions'
				{
					newLeafNode(otherlv_51, grammarAccess.getFindtempDemolishAccess().getDimensionsKeyword_2_10_1());
				}
				(
					(
						lv_length_52_0=RULE_INT
						{
							newLeafNode(lv_length_52_0, grammarAccess.getFindtempDemolishAccess().getLengthINTTerminalRuleCall_2_10_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFindtempDemolishRule());
							}
							setWithLastConsumed(
								$current,
								"length",
								lv_length_52_0,
								"org.eclipse.xtext.xbase.Xbase.INT");
						}
					)
				)
				otherlv_53='x'
				{
					newLeafNode(otherlv_53, grammarAccess.getFindtempDemolishAccess().getXKeyword_2_10_3());
				}
				(
					(
						lv_breadth_54_0=RULE_INT
						{
							newLeafNode(lv_breadth_54_0, grammarAccess.getFindtempDemolishAccess().getBreadthINTTerminalRuleCall_2_10_4_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFindtempDemolishRule());
							}
							setWithLastConsumed(
								$current,
								"breadth",
								lv_breadth_54_0,
								"org.eclipse.xtext.xbase.Xbase.INT");
						}
					)
				)
				otherlv_55='x'
				{
					newLeafNode(otherlv_55, grammarAccess.getFindtempDemolishAccess().getXKeyword_2_10_5());
				}
				(
					(
						lv_height_56_0=RULE_INT
						{
							newLeafNode(lv_height_56_0, grammarAccess.getFindtempDemolishAccess().getHeightINTTerminalRuleCall_2_10_6_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFindtempDemolishRule());
							}
							setWithLastConsumed(
								$current,
								"height",
								lv_height_56_0,
								"org.eclipse.xtext.xbase.Xbase.INT");
						}
					)
				)
			)?
			otherlv_57='In'
			{
				newLeafNode(otherlv_57, grammarAccess.getFindtempDemolishAccess().getInKeyword_2_11());
			}
			otherlv_58='Region'
			{
				newLeafNode(otherlv_58, grammarAccess.getFindtempDemolishAccess().getRegionKeyword_2_12());
			}
			(
				(
					lv_region_59_0=RULE_INT
					{
						newLeafNode(lv_region_59_0, grammarAccess.getFindtempDemolishAccess().getRegionINTTerminalRuleCall_2_13_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempDemolishRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_59_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_60='WHAT'
			{
				newLeafNode(otherlv_60, grammarAccess.getFindtempDemolishAccess().getWHATKeyword_3_0());
			}
			otherlv_61='WILL'
			{
				newLeafNode(otherlv_61, grammarAccess.getFindtempDemolishAccess().getWILLKeyword_3_1());
			}
			otherlv_62='BE'
			{
				newLeafNode(otherlv_62, grammarAccess.getFindtempDemolishAccess().getBEKeyword_3_2());
			}
			otherlv_63='THE'
			{
				newLeafNode(otherlv_63, grammarAccess.getFindtempDemolishAccess().getTHEKeyword_3_3());
			}
			otherlv_64='TEMPERATURE'
			{
				newLeafNode(otherlv_64, grammarAccess.getFindtempDemolishAccess().getTEMPERATUREKeyword_3_4());
			}
			otherlv_65='IF'
			{
				newLeafNode(otherlv_65, grammarAccess.getFindtempDemolishAccess().getIFKeyword_3_5());
			}
			otherlv_66='WE'
			{
				newLeafNode(otherlv_66, grammarAccess.getFindtempDemolishAccess().getWEKeyword_3_6());
			}
			otherlv_67='DEMOLISH'
			{
				newLeafNode(otherlv_67, grammarAccess.getFindtempDemolishAccess().getDEMOLISHKeyword_3_7());
			}
			(
				(
					lv_no_of_buildings_68_0=RULE_INT
					{
						newLeafNode(lv_no_of_buildings_68_0, grammarAccess.getFindtempDemolishAccess().getNo_of_buildingsINTTerminalRuleCall_3_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempDemolishRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_buildings",
							lv_no_of_buildings_68_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_69='BUILDINGS'
			{
				newLeafNode(otherlv_69, grammarAccess.getFindtempDemolishAccess().getBUILDINGSKeyword_3_9());
			}
			(
				otherlv_70='OF'
				{
					newLeafNode(otherlv_70, grammarAccess.getFindtempDemolishAccess().getOFKeyword_3_10_0());
				}
				otherlv_71='DIMENSIONS'
				{
					newLeafNode(otherlv_71, grammarAccess.getFindtempDemolishAccess().getDIMENSIONSKeyword_3_10_1());
				}
				(
					(
						lv_length_72_0=RULE_INT
						{
							newLeafNode(lv_length_72_0, grammarAccess.getFindtempDemolishAccess().getLengthINTTerminalRuleCall_3_10_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFindtempDemolishRule());
							}
							setWithLastConsumed(
								$current,
								"length",
								lv_length_72_0,
								"org.eclipse.xtext.xbase.Xbase.INT");
						}
					)
				)
				otherlv_73='x'
				{
					newLeafNode(otherlv_73, grammarAccess.getFindtempDemolishAccess().getXKeyword_3_10_3());
				}
				(
					(
						lv_breadth_74_0=RULE_INT
						{
							newLeafNode(lv_breadth_74_0, grammarAccess.getFindtempDemolishAccess().getBreadthINTTerminalRuleCall_3_10_4_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFindtempDemolishRule());
							}
							setWithLastConsumed(
								$current,
								"breadth",
								lv_breadth_74_0,
								"org.eclipse.xtext.xbase.Xbase.INT");
						}
					)
				)
				otherlv_75='x'
				{
					newLeafNode(otherlv_75, grammarAccess.getFindtempDemolishAccess().getXKeyword_3_10_5());
				}
				(
					(
						lv_height_76_0=RULE_INT
						{
							newLeafNode(lv_height_76_0, grammarAccess.getFindtempDemolishAccess().getHeightINTTerminalRuleCall_3_10_6_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFindtempDemolishRule());
							}
							setWithLastConsumed(
								$current,
								"height",
								lv_height_76_0,
								"org.eclipse.xtext.xbase.Xbase.INT");
						}
					)
				)
			)?
			otherlv_77='IN'
			{
				newLeafNode(otherlv_77, grammarAccess.getFindtempDemolishAccess().getINKeyword_3_11());
			}
			otherlv_78='REGION'
			{
				newLeafNode(otherlv_78, grammarAccess.getFindtempDemolishAccess().getREGIONKeyword_3_12());
			}
			(
				(
					lv_region_79_0=RULE_INT
					{
						newLeafNode(lv_region_79_0, grammarAccess.getFindtempDemolishAccess().getRegionINTTerminalRuleCall_3_13_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempDemolishRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_79_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_80='What'
			{
				newLeafNode(otherlv_80, grammarAccess.getFindtempDemolishAccess().getWhatKeyword_4_0());
			}
			otherlv_81='Will'
			{
				newLeafNode(otherlv_81, grammarAccess.getFindtempDemolishAccess().getWillKeyword_4_1());
			}
			otherlv_82='be'
			{
				newLeafNode(otherlv_82, grammarAccess.getFindtempDemolishAccess().getBeKeyword_4_2());
			}
			otherlv_83='the'
			{
				newLeafNode(otherlv_83, grammarAccess.getFindtempDemolishAccess().getTheKeyword_4_3());
			}
			otherlv_84='Temperature'
			{
				newLeafNode(otherlv_84, grammarAccess.getFindtempDemolishAccess().getTemperatureKeyword_4_4());
			}
			otherlv_85='if'
			{
				newLeafNode(otherlv_85, grammarAccess.getFindtempDemolishAccess().getIfKeyword_4_5());
			}
			otherlv_86='we'
			{
				newLeafNode(otherlv_86, grammarAccess.getFindtempDemolishAccess().getWeKeyword_4_6());
			}
			otherlv_87='Demolish'
			{
				newLeafNode(otherlv_87, grammarAccess.getFindtempDemolishAccess().getDemolishKeyword_4_7());
			}
			(
				(
					lv_no_of_buildings_88_0=RULE_INT
					{
						newLeafNode(lv_no_of_buildings_88_0, grammarAccess.getFindtempDemolishAccess().getNo_of_buildingsINTTerminalRuleCall_4_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempDemolishRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_buildings",
							lv_no_of_buildings_88_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_89='Buildings'
			{
				newLeafNode(otherlv_89, grammarAccess.getFindtempDemolishAccess().getBuildingsKeyword_4_9());
			}
			(
				otherlv_90='of'
				{
					newLeafNode(otherlv_90, grammarAccess.getFindtempDemolishAccess().getOfKeyword_4_10_0());
				}
				otherlv_91='Dimensions'
				{
					newLeafNode(otherlv_91, grammarAccess.getFindtempDemolishAccess().getDimensionsKeyword_4_10_1());
				}
				(
					(
						lv_length_92_0=RULE_INT
						{
							newLeafNode(lv_length_92_0, grammarAccess.getFindtempDemolishAccess().getLengthINTTerminalRuleCall_4_10_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFindtempDemolishRule());
							}
							setWithLastConsumed(
								$current,
								"length",
								lv_length_92_0,
								"org.eclipse.xtext.xbase.Xbase.INT");
						}
					)
				)
				otherlv_93='x'
				{
					newLeafNode(otherlv_93, grammarAccess.getFindtempDemolishAccess().getXKeyword_4_10_3());
				}
				(
					(
						lv_breadth_94_0=RULE_INT
						{
							newLeafNode(lv_breadth_94_0, grammarAccess.getFindtempDemolishAccess().getBreadthINTTerminalRuleCall_4_10_4_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFindtempDemolishRule());
							}
							setWithLastConsumed(
								$current,
								"breadth",
								lv_breadth_94_0,
								"org.eclipse.xtext.xbase.Xbase.INT");
						}
					)
				)
				otherlv_95='x'
				{
					newLeafNode(otherlv_95, grammarAccess.getFindtempDemolishAccess().getXKeyword_4_10_5());
				}
				(
					(
						lv_height_96_0=RULE_INT
						{
							newLeafNode(lv_height_96_0, grammarAccess.getFindtempDemolishAccess().getHeightINTTerminalRuleCall_4_10_6_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFindtempDemolishRule());
							}
							setWithLastConsumed(
								$current,
								"height",
								lv_height_96_0,
								"org.eclipse.xtext.xbase.Xbase.INT");
						}
					)
				)
			)?
			otherlv_97='in'
			{
				newLeafNode(otherlv_97, grammarAccess.getFindtempDemolishAccess().getInKeyword_4_11());
			}
			otherlv_98='Region'
			{
				newLeafNode(otherlv_98, grammarAccess.getFindtempDemolishAccess().getRegionKeyword_4_12());
			}
			(
				(
					lv_region_99_0=RULE_INT
					{
						newLeafNode(lv_region_99_0, grammarAccess.getFindtempDemolishAccess().getRegionINTTerminalRuleCall_4_13_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempDemolishRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_99_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
	)
;

// Entry rule entryRulefindtempPlantTrees
entryRulefindtempPlantTrees returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindtempPlantTreesRule()); }
	iv_rulefindtempPlantTrees=rulefindtempPlantTrees
	{ $current=$iv_rulefindtempPlantTrees.current; }
	EOF;

// Rule findtempPlantTrees
rulefindtempPlantTrees returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='what'
			{
				newLeafNode(otherlv_0, grammarAccess.getFindtempPlantTreesAccess().getWhatKeyword_0_0());
			}
			otherlv_1='will'
			{
				newLeafNode(otherlv_1, grammarAccess.getFindtempPlantTreesAccess().getWillKeyword_0_1());
			}
			otherlv_2='be'
			{
				newLeafNode(otherlv_2, grammarAccess.getFindtempPlantTreesAccess().getBeKeyword_0_2());
			}
			otherlv_3='the'
			{
				newLeafNode(otherlv_3, grammarAccess.getFindtempPlantTreesAccess().getTheKeyword_0_3());
			}
			otherlv_4='temperature'
			{
				newLeafNode(otherlv_4, grammarAccess.getFindtempPlantTreesAccess().getTemperatureKeyword_0_4());
			}
			otherlv_5='if'
			{
				newLeafNode(otherlv_5, grammarAccess.getFindtempPlantTreesAccess().getIfKeyword_0_5());
			}
			otherlv_6='we'
			{
				newLeafNode(otherlv_6, grammarAccess.getFindtempPlantTreesAccess().getWeKeyword_0_6());
			}
			otherlv_7='plant'
			{
				newLeafNode(otherlv_7, grammarAccess.getFindtempPlantTreesAccess().getPlantKeyword_0_7());
			}
			(
				(
					lv_no_of_trees_8_0=RULE_INT
					{
						newLeafNode(lv_no_of_trees_8_0, grammarAccess.getFindtempPlantTreesAccess().getNo_of_treesINTTerminalRuleCall_0_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempPlantTreesRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_trees",
							lv_no_of_trees_8_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_9='trees'
			{
				newLeafNode(otherlv_9, grammarAccess.getFindtempPlantTreesAccess().getTreesKeyword_0_9());
			}
			otherlv_10='in'
			{
				newLeafNode(otherlv_10, grammarAccess.getFindtempPlantTreesAccess().getInKeyword_0_10());
			}
			otherlv_11='region'
			{
				newLeafNode(otherlv_11, grammarAccess.getFindtempPlantTreesAccess().getRegionKeyword_0_11());
			}
			(
				(
					lv_region_12_0=RULE_INT
					{
						newLeafNode(lv_region_12_0, grammarAccess.getFindtempPlantTreesAccess().getRegionINTTerminalRuleCall_0_12_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempPlantTreesRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_12_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_13='What'
			{
				newLeafNode(otherlv_13, grammarAccess.getFindtempPlantTreesAccess().getWhatKeyword_1_0());
			}
			otherlv_14='will'
			{
				newLeafNode(otherlv_14, grammarAccess.getFindtempPlantTreesAccess().getWillKeyword_1_1());
			}
			otherlv_15='be'
			{
				newLeafNode(otherlv_15, grammarAccess.getFindtempPlantTreesAccess().getBeKeyword_1_2());
			}
			otherlv_16='the'
			{
				newLeafNode(otherlv_16, grammarAccess.getFindtempPlantTreesAccess().getTheKeyword_1_3());
			}
			otherlv_17='temperature'
			{
				newLeafNode(otherlv_17, grammarAccess.getFindtempPlantTreesAccess().getTemperatureKeyword_1_4());
			}
			otherlv_18='if'
			{
				newLeafNode(otherlv_18, grammarAccess.getFindtempPlantTreesAccess().getIfKeyword_1_5());
			}
			otherlv_19='we'
			{
				newLeafNode(otherlv_19, grammarAccess.getFindtempPlantTreesAccess().getWeKeyword_1_6());
			}
			otherlv_20='plant'
			{
				newLeafNode(otherlv_20, grammarAccess.getFindtempPlantTreesAccess().getPlantKeyword_1_7());
			}
			(
				(
					lv_no_of_trees_21_0=RULE_INT
					{
						newLeafNode(lv_no_of_trees_21_0, grammarAccess.getFindtempPlantTreesAccess().getNo_of_treesINTTerminalRuleCall_1_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempPlantTreesRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_trees",
							lv_no_of_trees_21_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_22='trees'
			{
				newLeafNode(otherlv_22, grammarAccess.getFindtempPlantTreesAccess().getTreesKeyword_1_9());
			}
			otherlv_23='in'
			{
				newLeafNode(otherlv_23, grammarAccess.getFindtempPlantTreesAccess().getInKeyword_1_10());
			}
			otherlv_24='region'
			{
				newLeafNode(otherlv_24, grammarAccess.getFindtempPlantTreesAccess().getRegionKeyword_1_11());
			}
			(
				(
					lv_region_25_0=RULE_INT
					{
						newLeafNode(lv_region_25_0, grammarAccess.getFindtempPlantTreesAccess().getRegionINTTerminalRuleCall_1_12_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempPlantTreesRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_25_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_26='What'
			{
				newLeafNode(otherlv_26, grammarAccess.getFindtempPlantTreesAccess().getWhatKeyword_2_0());
			}
			otherlv_27='Will'
			{
				newLeafNode(otherlv_27, grammarAccess.getFindtempPlantTreesAccess().getWillKeyword_2_1());
			}
			otherlv_28='Be'
			{
				newLeafNode(otherlv_28, grammarAccess.getFindtempPlantTreesAccess().getBeKeyword_2_2());
			}
			otherlv_29='The'
			{
				newLeafNode(otherlv_29, grammarAccess.getFindtempPlantTreesAccess().getTheKeyword_2_3());
			}
			otherlv_30='Temperature'
			{
				newLeafNode(otherlv_30, grammarAccess.getFindtempPlantTreesAccess().getTemperatureKeyword_2_4());
			}
			otherlv_31='If'
			{
				newLeafNode(otherlv_31, grammarAccess.getFindtempPlantTreesAccess().getIfKeyword_2_5());
			}
			otherlv_32='We'
			{
				newLeafNode(otherlv_32, grammarAccess.getFindtempPlantTreesAccess().getWeKeyword_2_6());
			}
			otherlv_33='Plant'
			{
				newLeafNode(otherlv_33, grammarAccess.getFindtempPlantTreesAccess().getPlantKeyword_2_7());
			}
			(
				(
					lv_no_of_trees_34_0=RULE_INT
					{
						newLeafNode(lv_no_of_trees_34_0, grammarAccess.getFindtempPlantTreesAccess().getNo_of_treesINTTerminalRuleCall_2_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempPlantTreesRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_trees",
							lv_no_of_trees_34_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_35='Trees'
			{
				newLeafNode(otherlv_35, grammarAccess.getFindtempPlantTreesAccess().getTreesKeyword_2_9());
			}
			otherlv_36='In'
			{
				newLeafNode(otherlv_36, grammarAccess.getFindtempPlantTreesAccess().getInKeyword_2_10());
			}
			otherlv_37='Region'
			{
				newLeafNode(otherlv_37, grammarAccess.getFindtempPlantTreesAccess().getRegionKeyword_2_11());
			}
			(
				(
					lv_region_38_0=RULE_INT
					{
						newLeafNode(lv_region_38_0, grammarAccess.getFindtempPlantTreesAccess().getRegionINTTerminalRuleCall_2_12_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempPlantTreesRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_38_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_39='WHAT'
			{
				newLeafNode(otherlv_39, grammarAccess.getFindtempPlantTreesAccess().getWHATKeyword_3_0());
			}
			otherlv_40='WILL'
			{
				newLeafNode(otherlv_40, grammarAccess.getFindtempPlantTreesAccess().getWILLKeyword_3_1());
			}
			otherlv_41='BE'
			{
				newLeafNode(otherlv_41, grammarAccess.getFindtempPlantTreesAccess().getBEKeyword_3_2());
			}
			otherlv_42='THE'
			{
				newLeafNode(otherlv_42, grammarAccess.getFindtempPlantTreesAccess().getTHEKeyword_3_3());
			}
			otherlv_43='TEMPERATURE'
			{
				newLeafNode(otherlv_43, grammarAccess.getFindtempPlantTreesAccess().getTEMPERATUREKeyword_3_4());
			}
			otherlv_44='IF'
			{
				newLeafNode(otherlv_44, grammarAccess.getFindtempPlantTreesAccess().getIFKeyword_3_5());
			}
			otherlv_45='WE'
			{
				newLeafNode(otherlv_45, grammarAccess.getFindtempPlantTreesAccess().getWEKeyword_3_6());
			}
			otherlv_46='PLANT'
			{
				newLeafNode(otherlv_46, grammarAccess.getFindtempPlantTreesAccess().getPLANTKeyword_3_7());
			}
			(
				(
					lv_no_of_trees_47_0=RULE_INT
					{
						newLeafNode(lv_no_of_trees_47_0, grammarAccess.getFindtempPlantTreesAccess().getNo_of_treesINTTerminalRuleCall_3_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempPlantTreesRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_trees",
							lv_no_of_trees_47_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_48='TREES'
			{
				newLeafNode(otherlv_48, grammarAccess.getFindtempPlantTreesAccess().getTREESKeyword_3_9());
			}
			otherlv_49='IN'
			{
				newLeafNode(otherlv_49, grammarAccess.getFindtempPlantTreesAccess().getINKeyword_3_10());
			}
			otherlv_50='REGION'
			{
				newLeafNode(otherlv_50, grammarAccess.getFindtempPlantTreesAccess().getREGIONKeyword_3_11());
			}
			(
				(
					lv_region_51_0=RULE_INT
					{
						newLeafNode(lv_region_51_0, grammarAccess.getFindtempPlantTreesAccess().getRegionINTTerminalRuleCall_3_12_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempPlantTreesRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_51_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_52='What'
			{
				newLeafNode(otherlv_52, grammarAccess.getFindtempPlantTreesAccess().getWhatKeyword_4_0());
			}
			otherlv_53='Will'
			{
				newLeafNode(otherlv_53, grammarAccess.getFindtempPlantTreesAccess().getWillKeyword_4_1());
			}
			otherlv_54='be'
			{
				newLeafNode(otherlv_54, grammarAccess.getFindtempPlantTreesAccess().getBeKeyword_4_2());
			}
			otherlv_55='the'
			{
				newLeafNode(otherlv_55, grammarAccess.getFindtempPlantTreesAccess().getTheKeyword_4_3());
			}
			otherlv_56='Temperature'
			{
				newLeafNode(otherlv_56, grammarAccess.getFindtempPlantTreesAccess().getTemperatureKeyword_4_4());
			}
			otherlv_57='if'
			{
				newLeafNode(otherlv_57, grammarAccess.getFindtempPlantTreesAccess().getIfKeyword_4_5());
			}
			otherlv_58='we'
			{
				newLeafNode(otherlv_58, grammarAccess.getFindtempPlantTreesAccess().getWeKeyword_4_6());
			}
			otherlv_59='Plant'
			{
				newLeafNode(otherlv_59, grammarAccess.getFindtempPlantTreesAccess().getPlantKeyword_4_7());
			}
			(
				(
					lv_no_of_trees_60_0=RULE_INT
					{
						newLeafNode(lv_no_of_trees_60_0, grammarAccess.getFindtempPlantTreesAccess().getNo_of_treesINTTerminalRuleCall_4_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempPlantTreesRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_trees",
							lv_no_of_trees_60_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_61='Trees'
			{
				newLeafNode(otherlv_61, grammarAccess.getFindtempPlantTreesAccess().getTreesKeyword_4_9());
			}
			otherlv_62='in'
			{
				newLeafNode(otherlv_62, grammarAccess.getFindtempPlantTreesAccess().getInKeyword_4_10());
			}
			otherlv_63='Region'
			{
				newLeafNode(otherlv_63, grammarAccess.getFindtempPlantTreesAccess().getRegionKeyword_4_11());
			}
			(
				(
					lv_region_64_0=RULE_INT
					{
						newLeafNode(lv_region_64_0, grammarAccess.getFindtempPlantTreesAccess().getRegionINTTerminalRuleCall_4_12_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempPlantTreesRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_64_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
	)
;

// Entry rule entryRulefindtempCutTrees
entryRulefindtempCutTrees returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindtempCutTreesRule()); }
	iv_rulefindtempCutTrees=rulefindtempCutTrees
	{ $current=$iv_rulefindtempCutTrees.current; }
	EOF;

// Rule findtempCutTrees
rulefindtempCutTrees returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='what'
			{
				newLeafNode(otherlv_0, grammarAccess.getFindtempCutTreesAccess().getWhatKeyword_0_0());
			}
			otherlv_1='will'
			{
				newLeafNode(otherlv_1, grammarAccess.getFindtempCutTreesAccess().getWillKeyword_0_1());
			}
			otherlv_2='be'
			{
				newLeafNode(otherlv_2, grammarAccess.getFindtempCutTreesAccess().getBeKeyword_0_2());
			}
			otherlv_3='the'
			{
				newLeafNode(otherlv_3, grammarAccess.getFindtempCutTreesAccess().getTheKeyword_0_3());
			}
			otherlv_4='temperature'
			{
				newLeafNode(otherlv_4, grammarAccess.getFindtempCutTreesAccess().getTemperatureKeyword_0_4());
			}
			otherlv_5='if'
			{
				newLeafNode(otherlv_5, grammarAccess.getFindtempCutTreesAccess().getIfKeyword_0_5());
			}
			otherlv_6='we'
			{
				newLeafNode(otherlv_6, grammarAccess.getFindtempCutTreesAccess().getWeKeyword_0_6());
			}
			otherlv_7='cut'
			{
				newLeafNode(otherlv_7, grammarAccess.getFindtempCutTreesAccess().getCutKeyword_0_7());
			}
			(
				(
					lv_no_of_trees_8_0=RULE_INT
					{
						newLeafNode(lv_no_of_trees_8_0, grammarAccess.getFindtempCutTreesAccess().getNo_of_treesINTTerminalRuleCall_0_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempCutTreesRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_trees",
							lv_no_of_trees_8_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_9='trees'
			{
				newLeafNode(otherlv_9, grammarAccess.getFindtempCutTreesAccess().getTreesKeyword_0_9());
			}
			otherlv_10='in'
			{
				newLeafNode(otherlv_10, grammarAccess.getFindtempCutTreesAccess().getInKeyword_0_10());
			}
			otherlv_11='region'
			{
				newLeafNode(otherlv_11, grammarAccess.getFindtempCutTreesAccess().getRegionKeyword_0_11());
			}
			(
				(
					lv_region_12_0=RULE_INT
					{
						newLeafNode(lv_region_12_0, grammarAccess.getFindtempCutTreesAccess().getRegionINTTerminalRuleCall_0_12_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempCutTreesRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_12_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_13='What'
			{
				newLeafNode(otherlv_13, grammarAccess.getFindtempCutTreesAccess().getWhatKeyword_1_0());
			}
			otherlv_14='will'
			{
				newLeafNode(otherlv_14, grammarAccess.getFindtempCutTreesAccess().getWillKeyword_1_1());
			}
			otherlv_15='be'
			{
				newLeafNode(otherlv_15, grammarAccess.getFindtempCutTreesAccess().getBeKeyword_1_2());
			}
			otherlv_16='the'
			{
				newLeafNode(otherlv_16, grammarAccess.getFindtempCutTreesAccess().getTheKeyword_1_3());
			}
			otherlv_17='temperature'
			{
				newLeafNode(otherlv_17, grammarAccess.getFindtempCutTreesAccess().getTemperatureKeyword_1_4());
			}
			otherlv_18='if'
			{
				newLeafNode(otherlv_18, grammarAccess.getFindtempCutTreesAccess().getIfKeyword_1_5());
			}
			otherlv_19='we'
			{
				newLeafNode(otherlv_19, grammarAccess.getFindtempCutTreesAccess().getWeKeyword_1_6());
			}
			otherlv_20='cut'
			{
				newLeafNode(otherlv_20, grammarAccess.getFindtempCutTreesAccess().getCutKeyword_1_7());
			}
			(
				(
					lv_no_of_trees_21_0=RULE_INT
					{
						newLeafNode(lv_no_of_trees_21_0, grammarAccess.getFindtempCutTreesAccess().getNo_of_treesINTTerminalRuleCall_1_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempCutTreesRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_trees",
							lv_no_of_trees_21_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_22='trees'
			{
				newLeafNode(otherlv_22, grammarAccess.getFindtempCutTreesAccess().getTreesKeyword_1_9());
			}
			otherlv_23='in'
			{
				newLeafNode(otherlv_23, grammarAccess.getFindtempCutTreesAccess().getInKeyword_1_10());
			}
			otherlv_24='region'
			{
				newLeafNode(otherlv_24, grammarAccess.getFindtempCutTreesAccess().getRegionKeyword_1_11());
			}
			(
				(
					lv_region_25_0=RULE_INT
					{
						newLeafNode(lv_region_25_0, grammarAccess.getFindtempCutTreesAccess().getRegionINTTerminalRuleCall_1_12_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempCutTreesRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_25_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_26='What'
			{
				newLeafNode(otherlv_26, grammarAccess.getFindtempCutTreesAccess().getWhatKeyword_2_0());
			}
			otherlv_27='Will'
			{
				newLeafNode(otherlv_27, grammarAccess.getFindtempCutTreesAccess().getWillKeyword_2_1());
			}
			otherlv_28='Be'
			{
				newLeafNode(otherlv_28, grammarAccess.getFindtempCutTreesAccess().getBeKeyword_2_2());
			}
			otherlv_29='The'
			{
				newLeafNode(otherlv_29, grammarAccess.getFindtempCutTreesAccess().getTheKeyword_2_3());
			}
			otherlv_30='Temperature'
			{
				newLeafNode(otherlv_30, grammarAccess.getFindtempCutTreesAccess().getTemperatureKeyword_2_4());
			}
			otherlv_31='If'
			{
				newLeafNode(otherlv_31, grammarAccess.getFindtempCutTreesAccess().getIfKeyword_2_5());
			}
			otherlv_32='We'
			{
				newLeafNode(otherlv_32, grammarAccess.getFindtempCutTreesAccess().getWeKeyword_2_6());
			}
			otherlv_33='Cut'
			{
				newLeafNode(otherlv_33, grammarAccess.getFindtempCutTreesAccess().getCutKeyword_2_7());
			}
			(
				(
					lv_no_of_trees_34_0=RULE_INT
					{
						newLeafNode(lv_no_of_trees_34_0, grammarAccess.getFindtempCutTreesAccess().getNo_of_treesINTTerminalRuleCall_2_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempCutTreesRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_trees",
							lv_no_of_trees_34_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_35='Trees'
			{
				newLeafNode(otherlv_35, grammarAccess.getFindtempCutTreesAccess().getTreesKeyword_2_9());
			}
			otherlv_36='In'
			{
				newLeafNode(otherlv_36, grammarAccess.getFindtempCutTreesAccess().getInKeyword_2_10());
			}
			otherlv_37='Region'
			{
				newLeafNode(otherlv_37, grammarAccess.getFindtempCutTreesAccess().getRegionKeyword_2_11());
			}
			(
				(
					lv_region_38_0=RULE_INT
					{
						newLeafNode(lv_region_38_0, grammarAccess.getFindtempCutTreesAccess().getRegionINTTerminalRuleCall_2_12_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempCutTreesRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_38_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_39='WHAT'
			{
				newLeafNode(otherlv_39, grammarAccess.getFindtempCutTreesAccess().getWHATKeyword_3_0());
			}
			otherlv_40='WILL'
			{
				newLeafNode(otherlv_40, grammarAccess.getFindtempCutTreesAccess().getWILLKeyword_3_1());
			}
			otherlv_41='BE'
			{
				newLeafNode(otherlv_41, grammarAccess.getFindtempCutTreesAccess().getBEKeyword_3_2());
			}
			otherlv_42='THE'
			{
				newLeafNode(otherlv_42, grammarAccess.getFindtempCutTreesAccess().getTHEKeyword_3_3());
			}
			otherlv_43='TEMPERATURE'
			{
				newLeafNode(otherlv_43, grammarAccess.getFindtempCutTreesAccess().getTEMPERATUREKeyword_3_4());
			}
			otherlv_44='IF'
			{
				newLeafNode(otherlv_44, grammarAccess.getFindtempCutTreesAccess().getIFKeyword_3_5());
			}
			otherlv_45='WE'
			{
				newLeafNode(otherlv_45, grammarAccess.getFindtempCutTreesAccess().getWEKeyword_3_6());
			}
			otherlv_46='CUT'
			{
				newLeafNode(otherlv_46, grammarAccess.getFindtempCutTreesAccess().getCUTKeyword_3_7());
			}
			(
				(
					lv_no_of_trees_47_0=RULE_INT
					{
						newLeafNode(lv_no_of_trees_47_0, grammarAccess.getFindtempCutTreesAccess().getNo_of_treesINTTerminalRuleCall_3_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempCutTreesRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_trees",
							lv_no_of_trees_47_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_48='TREES'
			{
				newLeafNode(otherlv_48, grammarAccess.getFindtempCutTreesAccess().getTREESKeyword_3_9());
			}
			otherlv_49='in'
			{
				newLeafNode(otherlv_49, grammarAccess.getFindtempCutTreesAccess().getInKeyword_3_10());
			}
			otherlv_50='REGION'
			{
				newLeafNode(otherlv_50, grammarAccess.getFindtempCutTreesAccess().getREGIONKeyword_3_11());
			}
			(
				(
					lv_region_51_0=RULE_INT
					{
						newLeafNode(lv_region_51_0, grammarAccess.getFindtempCutTreesAccess().getRegionINTTerminalRuleCall_3_12_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempCutTreesRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_51_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_52='What'
			{
				newLeafNode(otherlv_52, grammarAccess.getFindtempCutTreesAccess().getWhatKeyword_4_0());
			}
			otherlv_53='Will'
			{
				newLeafNode(otherlv_53, grammarAccess.getFindtempCutTreesAccess().getWillKeyword_4_1());
			}
			otherlv_54='be'
			{
				newLeafNode(otherlv_54, grammarAccess.getFindtempCutTreesAccess().getBeKeyword_4_2());
			}
			otherlv_55='the'
			{
				newLeafNode(otherlv_55, grammarAccess.getFindtempCutTreesAccess().getTheKeyword_4_3());
			}
			otherlv_56='Temperature'
			{
				newLeafNode(otherlv_56, grammarAccess.getFindtempCutTreesAccess().getTemperatureKeyword_4_4());
			}
			otherlv_57='if'
			{
				newLeafNode(otherlv_57, grammarAccess.getFindtempCutTreesAccess().getIfKeyword_4_5());
			}
			otherlv_58='we'
			{
				newLeafNode(otherlv_58, grammarAccess.getFindtempCutTreesAccess().getWeKeyword_4_6());
			}
			otherlv_59='Cut'
			{
				newLeafNode(otherlv_59, grammarAccess.getFindtempCutTreesAccess().getCutKeyword_4_7());
			}
			(
				(
					lv_no_of_trees_60_0=RULE_INT
					{
						newLeafNode(lv_no_of_trees_60_0, grammarAccess.getFindtempCutTreesAccess().getNo_of_treesINTTerminalRuleCall_4_8_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempCutTreesRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_trees",
							lv_no_of_trees_60_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_61='Trees'
			{
				newLeafNode(otherlv_61, grammarAccess.getFindtempCutTreesAccess().getTreesKeyword_4_9());
			}
			otherlv_62='in'
			{
				newLeafNode(otherlv_62, grammarAccess.getFindtempCutTreesAccess().getInKeyword_4_10());
			}
			otherlv_63='Region'
			{
				newLeafNode(otherlv_63, grammarAccess.getFindtempCutTreesAccess().getRegionKeyword_4_11());
			}
			(
				(
					lv_region_64_0=RULE_INT
					{
						newLeafNode(lv_region_64_0, grammarAccess.getFindtempCutTreesAccess().getRegionINTTerminalRuleCall_4_12_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempCutTreesRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_64_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
	)
;

// Entry rule entryRulefindtempPlantBushes
entryRulefindtempPlantBushes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindtempPlantBushesRule()); }
	iv_rulefindtempPlantBushes=rulefindtempPlantBushes
	{ $current=$iv_rulefindtempPlantBushes.current; }
	EOF;

// Rule findtempPlantBushes
rulefindtempPlantBushes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='what'
			{
				newLeafNode(otherlv_0, grammarAccess.getFindtempPlantBushesAccess().getWhatKeyword_0_0());
			}
			otherlv_1='will'
			{
				newLeafNode(otherlv_1, grammarAccess.getFindtempPlantBushesAccess().getWillKeyword_0_1());
			}
			otherlv_2='be'
			{
				newLeafNode(otherlv_2, grammarAccess.getFindtempPlantBushesAccess().getBeKeyword_0_2());
			}
			otherlv_3='the'
			{
				newLeafNode(otherlv_3, grammarAccess.getFindtempPlantBushesAccess().getTheKeyword_0_3());
			}
			otherlv_4='temperature'
			{
				newLeafNode(otherlv_4, grammarAccess.getFindtempPlantBushesAccess().getTemperatureKeyword_0_4());
			}
			otherlv_5='if'
			{
				newLeafNode(otherlv_5, grammarAccess.getFindtempPlantBushesAccess().getIfKeyword_0_5());
			}
			otherlv_6='we'
			{
				newLeafNode(otherlv_6, grammarAccess.getFindtempPlantBushesAccess().getWeKeyword_0_6());
			}
			otherlv_7='plant'
			{
				newLeafNode(otherlv_7, grammarAccess.getFindtempPlantBushesAccess().getPlantKeyword_0_7());
			}
			otherlv_8='bushes'
			{
				newLeafNode(otherlv_8, grammarAccess.getFindtempPlantBushesAccess().getBushesKeyword_0_8());
			}
			otherlv_9='in'
			{
				newLeafNode(otherlv_9, grammarAccess.getFindtempPlantBushesAccess().getInKeyword_0_9());
			}
			(
				(
					lv_area_10_0=RULE_INT
					{
						newLeafNode(lv_area_10_0, grammarAccess.getFindtempPlantBushesAccess().getAreaINTTerminalRuleCall_0_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempPlantBushesRule());
						}
						setWithLastConsumed(
							$current,
							"area",
							lv_area_10_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_11='square'
			{
				newLeafNode(otherlv_11, grammarAccess.getFindtempPlantBushesAccess().getSquareKeyword_0_11());
			}
			otherlv_12='meter'
			{
				newLeafNode(otherlv_12, grammarAccess.getFindtempPlantBushesAccess().getMeterKeyword_0_12());
			}
			otherlv_13='area'
			{
				newLeafNode(otherlv_13, grammarAccess.getFindtempPlantBushesAccess().getAreaKeyword_0_13());
			}
			otherlv_14='in'
			{
				newLeafNode(otherlv_14, grammarAccess.getFindtempPlantBushesAccess().getInKeyword_0_14());
			}
			otherlv_15='region'
			{
				newLeafNode(otherlv_15, grammarAccess.getFindtempPlantBushesAccess().getRegionKeyword_0_15());
			}
			(
				(
					lv_region_16_0=RULE_INT
					{
						newLeafNode(lv_region_16_0, grammarAccess.getFindtempPlantBushesAccess().getRegionINTTerminalRuleCall_0_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempPlantBushesRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_16_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_17='What'
			{
				newLeafNode(otherlv_17, grammarAccess.getFindtempPlantBushesAccess().getWhatKeyword_1_0());
			}
			otherlv_18='will'
			{
				newLeafNode(otherlv_18, grammarAccess.getFindtempPlantBushesAccess().getWillKeyword_1_1());
			}
			otherlv_19='be'
			{
				newLeafNode(otherlv_19, grammarAccess.getFindtempPlantBushesAccess().getBeKeyword_1_2());
			}
			otherlv_20='the'
			{
				newLeafNode(otherlv_20, grammarAccess.getFindtempPlantBushesAccess().getTheKeyword_1_3());
			}
			otherlv_21='temperature'
			{
				newLeafNode(otherlv_21, grammarAccess.getFindtempPlantBushesAccess().getTemperatureKeyword_1_4());
			}
			otherlv_22='if'
			{
				newLeafNode(otherlv_22, grammarAccess.getFindtempPlantBushesAccess().getIfKeyword_1_5());
			}
			otherlv_23='we'
			{
				newLeafNode(otherlv_23, grammarAccess.getFindtempPlantBushesAccess().getWeKeyword_1_6());
			}
			otherlv_24='plant'
			{
				newLeafNode(otherlv_24, grammarAccess.getFindtempPlantBushesAccess().getPlantKeyword_1_7());
			}
			otherlv_25='bushes'
			{
				newLeafNode(otherlv_25, grammarAccess.getFindtempPlantBushesAccess().getBushesKeyword_1_8());
			}
			otherlv_26='in'
			{
				newLeafNode(otherlv_26, grammarAccess.getFindtempPlantBushesAccess().getInKeyword_1_9());
			}
			(
				(
					lv_area_27_0=RULE_INT
					{
						newLeafNode(lv_area_27_0, grammarAccess.getFindtempPlantBushesAccess().getAreaINTTerminalRuleCall_1_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempPlantBushesRule());
						}
						setWithLastConsumed(
							$current,
							"area",
							lv_area_27_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_28='square'
			{
				newLeafNode(otherlv_28, grammarAccess.getFindtempPlantBushesAccess().getSquareKeyword_1_11());
			}
			otherlv_29='meter'
			{
				newLeafNode(otherlv_29, grammarAccess.getFindtempPlantBushesAccess().getMeterKeyword_1_12());
			}
			otherlv_30='area'
			{
				newLeafNode(otherlv_30, grammarAccess.getFindtempPlantBushesAccess().getAreaKeyword_1_13());
			}
			otherlv_31='in'
			{
				newLeafNode(otherlv_31, grammarAccess.getFindtempPlantBushesAccess().getInKeyword_1_14());
			}
			otherlv_32='region'
			{
				newLeafNode(otherlv_32, grammarAccess.getFindtempPlantBushesAccess().getRegionKeyword_1_15());
			}
			(
				(
					lv_region_33_0=RULE_INT
					{
						newLeafNode(lv_region_33_0, grammarAccess.getFindtempPlantBushesAccess().getRegionINTTerminalRuleCall_1_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempPlantBushesRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_33_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_34='What'
			{
				newLeafNode(otherlv_34, grammarAccess.getFindtempPlantBushesAccess().getWhatKeyword_2_0());
			}
			otherlv_35='Will'
			{
				newLeafNode(otherlv_35, grammarAccess.getFindtempPlantBushesAccess().getWillKeyword_2_1());
			}
			otherlv_36='Be'
			{
				newLeafNode(otherlv_36, grammarAccess.getFindtempPlantBushesAccess().getBeKeyword_2_2());
			}
			otherlv_37='The'
			{
				newLeafNode(otherlv_37, grammarAccess.getFindtempPlantBushesAccess().getTheKeyword_2_3());
			}
			otherlv_38='Temperature'
			{
				newLeafNode(otherlv_38, grammarAccess.getFindtempPlantBushesAccess().getTemperatureKeyword_2_4());
			}
			otherlv_39='If'
			{
				newLeafNode(otherlv_39, grammarAccess.getFindtempPlantBushesAccess().getIfKeyword_2_5());
			}
			otherlv_40='We'
			{
				newLeafNode(otherlv_40, grammarAccess.getFindtempPlantBushesAccess().getWeKeyword_2_6());
			}
			otherlv_41='Plant'
			{
				newLeafNode(otherlv_41, grammarAccess.getFindtempPlantBushesAccess().getPlantKeyword_2_7());
			}
			otherlv_42='Bushes'
			{
				newLeafNode(otherlv_42, grammarAccess.getFindtempPlantBushesAccess().getBushesKeyword_2_8());
			}
			otherlv_43='In'
			{
				newLeafNode(otherlv_43, grammarAccess.getFindtempPlantBushesAccess().getInKeyword_2_9());
			}
			(
				(
					lv_area_44_0=RULE_INT
					{
						newLeafNode(lv_area_44_0, grammarAccess.getFindtempPlantBushesAccess().getAreaINTTerminalRuleCall_2_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempPlantBushesRule());
						}
						setWithLastConsumed(
							$current,
							"area",
							lv_area_44_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_45='Square'
			{
				newLeafNode(otherlv_45, grammarAccess.getFindtempPlantBushesAccess().getSquareKeyword_2_11());
			}
			otherlv_46='Meter'
			{
				newLeafNode(otherlv_46, grammarAccess.getFindtempPlantBushesAccess().getMeterKeyword_2_12());
			}
			otherlv_47='Area'
			{
				newLeafNode(otherlv_47, grammarAccess.getFindtempPlantBushesAccess().getAreaKeyword_2_13());
			}
			otherlv_48='In'
			{
				newLeafNode(otherlv_48, grammarAccess.getFindtempPlantBushesAccess().getInKeyword_2_14());
			}
			otherlv_49='Region'
			{
				newLeafNode(otherlv_49, grammarAccess.getFindtempPlantBushesAccess().getRegionKeyword_2_15());
			}
			(
				(
					lv_region_50_0=RULE_INT
					{
						newLeafNode(lv_region_50_0, grammarAccess.getFindtempPlantBushesAccess().getRegionINTTerminalRuleCall_2_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempPlantBushesRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_50_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_51='What'
			{
				newLeafNode(otherlv_51, grammarAccess.getFindtempPlantBushesAccess().getWhatKeyword_3_0());
			}
			otherlv_52='Will'
			{
				newLeafNode(otherlv_52, grammarAccess.getFindtempPlantBushesAccess().getWillKeyword_3_1());
			}
			otherlv_53='be'
			{
				newLeafNode(otherlv_53, grammarAccess.getFindtempPlantBushesAccess().getBeKeyword_3_2());
			}
			otherlv_54='the'
			{
				newLeafNode(otherlv_54, grammarAccess.getFindtempPlantBushesAccess().getTheKeyword_3_3());
			}
			otherlv_55='Temperature'
			{
				newLeafNode(otherlv_55, grammarAccess.getFindtempPlantBushesAccess().getTemperatureKeyword_3_4());
			}
			otherlv_56='if'
			{
				newLeafNode(otherlv_56, grammarAccess.getFindtempPlantBushesAccess().getIfKeyword_3_5());
			}
			otherlv_57='we'
			{
				newLeafNode(otherlv_57, grammarAccess.getFindtempPlantBushesAccess().getWeKeyword_3_6());
			}
			otherlv_58='Plant'
			{
				newLeafNode(otherlv_58, grammarAccess.getFindtempPlantBushesAccess().getPlantKeyword_3_7());
			}
			otherlv_59='Bushes'
			{
				newLeafNode(otherlv_59, grammarAccess.getFindtempPlantBushesAccess().getBushesKeyword_3_8());
			}
			otherlv_60='in'
			{
				newLeafNode(otherlv_60, grammarAccess.getFindtempPlantBushesAccess().getInKeyword_3_9());
			}
			(
				(
					lv_area_61_0=RULE_INT
					{
						newLeafNode(lv_area_61_0, grammarAccess.getFindtempPlantBushesAccess().getAreaINTTerminalRuleCall_3_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempPlantBushesRule());
						}
						setWithLastConsumed(
							$current,
							"area",
							lv_area_61_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_62='Square'
			{
				newLeafNode(otherlv_62, grammarAccess.getFindtempPlantBushesAccess().getSquareKeyword_3_11());
			}
			otherlv_63='Meter'
			{
				newLeafNode(otherlv_63, grammarAccess.getFindtempPlantBushesAccess().getMeterKeyword_3_12());
			}
			otherlv_64='Area'
			{
				newLeafNode(otherlv_64, grammarAccess.getFindtempPlantBushesAccess().getAreaKeyword_3_13());
			}
			otherlv_65='in'
			{
				newLeafNode(otherlv_65, grammarAccess.getFindtempPlantBushesAccess().getInKeyword_3_14());
			}
			otherlv_66='Region'
			{
				newLeafNode(otherlv_66, grammarAccess.getFindtempPlantBushesAccess().getRegionKeyword_3_15());
			}
			(
				(
					lv_region_67_0=RULE_INT
					{
						newLeafNode(lv_region_67_0, grammarAccess.getFindtempPlantBushesAccess().getRegionINTTerminalRuleCall_3_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempPlantBushesRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_67_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_68='WHAT'
			{
				newLeafNode(otherlv_68, grammarAccess.getFindtempPlantBushesAccess().getWHATKeyword_4_0());
			}
			otherlv_69='WILL'
			{
				newLeafNode(otherlv_69, grammarAccess.getFindtempPlantBushesAccess().getWILLKeyword_4_1());
			}
			otherlv_70='BE'
			{
				newLeafNode(otherlv_70, grammarAccess.getFindtempPlantBushesAccess().getBEKeyword_4_2());
			}
			otherlv_71='THE'
			{
				newLeafNode(otherlv_71, grammarAccess.getFindtempPlantBushesAccess().getTHEKeyword_4_3());
			}
			otherlv_72='TEMPERATURE'
			{
				newLeafNode(otherlv_72, grammarAccess.getFindtempPlantBushesAccess().getTEMPERATUREKeyword_4_4());
			}
			otherlv_73='IF'
			{
				newLeafNode(otherlv_73, grammarAccess.getFindtempPlantBushesAccess().getIFKeyword_4_5());
			}
			otherlv_74='WE'
			{
				newLeafNode(otherlv_74, grammarAccess.getFindtempPlantBushesAccess().getWEKeyword_4_6());
			}
			otherlv_75='PLANT'
			{
				newLeafNode(otherlv_75, grammarAccess.getFindtempPlantBushesAccess().getPLANTKeyword_4_7());
			}
			otherlv_76='BUSHES'
			{
				newLeafNode(otherlv_76, grammarAccess.getFindtempPlantBushesAccess().getBUSHESKeyword_4_8());
			}
			otherlv_77='IN'
			{
				newLeafNode(otherlv_77, grammarAccess.getFindtempPlantBushesAccess().getINKeyword_4_9());
			}
			(
				(
					lv_area_78_0=RULE_INT
					{
						newLeafNode(lv_area_78_0, grammarAccess.getFindtempPlantBushesAccess().getAreaINTTerminalRuleCall_4_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempPlantBushesRule());
						}
						setWithLastConsumed(
							$current,
							"area",
							lv_area_78_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_79='SQUARE'
			{
				newLeafNode(otherlv_79, grammarAccess.getFindtempPlantBushesAccess().getSQUAREKeyword_4_11());
			}
			otherlv_80='METER'
			{
				newLeafNode(otherlv_80, grammarAccess.getFindtempPlantBushesAccess().getMETERKeyword_4_12());
			}
			otherlv_81='AREA'
			{
				newLeafNode(otherlv_81, grammarAccess.getFindtempPlantBushesAccess().getAREAKeyword_4_13());
			}
			otherlv_82='IN'
			{
				newLeafNode(otherlv_82, grammarAccess.getFindtempPlantBushesAccess().getINKeyword_4_14());
			}
			otherlv_83='REGION'
			{
				newLeafNode(otherlv_83, grammarAccess.getFindtempPlantBushesAccess().getREGIONKeyword_4_15());
			}
			(
				(
					lv_region_84_0=RULE_INT
					{
						newLeafNode(lv_region_84_0, grammarAccess.getFindtempPlantBushesAccess().getRegionINTTerminalRuleCall_4_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempPlantBushesRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_84_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
	)
;

// Entry rule entryRulefindtempRemoveBushes
entryRulefindtempRemoveBushes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindtempRemoveBushesRule()); }
	iv_rulefindtempRemoveBushes=rulefindtempRemoveBushes
	{ $current=$iv_rulefindtempRemoveBushes.current; }
	EOF;

// Rule findtempRemoveBushes
rulefindtempRemoveBushes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='what'
			{
				newLeafNode(otherlv_0, grammarAccess.getFindtempRemoveBushesAccess().getWhatKeyword_0_0());
			}
			otherlv_1='will'
			{
				newLeafNode(otherlv_1, grammarAccess.getFindtempRemoveBushesAccess().getWillKeyword_0_1());
			}
			otherlv_2='be'
			{
				newLeafNode(otherlv_2, grammarAccess.getFindtempRemoveBushesAccess().getBeKeyword_0_2());
			}
			otherlv_3='the'
			{
				newLeafNode(otherlv_3, grammarAccess.getFindtempRemoveBushesAccess().getTheKeyword_0_3());
			}
			otherlv_4='temperature'
			{
				newLeafNode(otherlv_4, grammarAccess.getFindtempRemoveBushesAccess().getTemperatureKeyword_0_4());
			}
			otherlv_5='if'
			{
				newLeafNode(otherlv_5, grammarAccess.getFindtempRemoveBushesAccess().getIfKeyword_0_5());
			}
			otherlv_6='we'
			{
				newLeafNode(otherlv_6, grammarAccess.getFindtempRemoveBushesAccess().getWeKeyword_0_6());
			}
			otherlv_7='remove'
			{
				newLeafNode(otherlv_7, grammarAccess.getFindtempRemoveBushesAccess().getRemoveKeyword_0_7());
			}
			otherlv_8='bushes'
			{
				newLeafNode(otherlv_8, grammarAccess.getFindtempRemoveBushesAccess().getBushesKeyword_0_8());
			}
			otherlv_9='in'
			{
				newLeafNode(otherlv_9, grammarAccess.getFindtempRemoveBushesAccess().getInKeyword_0_9());
			}
			(
				(
					lv_area_10_0=RULE_INT
					{
						newLeafNode(lv_area_10_0, grammarAccess.getFindtempRemoveBushesAccess().getAreaINTTerminalRuleCall_0_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempRemoveBushesRule());
						}
						setWithLastConsumed(
							$current,
							"area",
							lv_area_10_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_11='square'
			{
				newLeafNode(otherlv_11, grammarAccess.getFindtempRemoveBushesAccess().getSquareKeyword_0_11());
			}
			otherlv_12='meter'
			{
				newLeafNode(otherlv_12, grammarAccess.getFindtempRemoveBushesAccess().getMeterKeyword_0_12());
			}
			otherlv_13='area'
			{
				newLeafNode(otherlv_13, grammarAccess.getFindtempRemoveBushesAccess().getAreaKeyword_0_13());
			}
			otherlv_14='in'
			{
				newLeafNode(otherlv_14, grammarAccess.getFindtempRemoveBushesAccess().getInKeyword_0_14());
			}
			otherlv_15='region'
			{
				newLeafNode(otherlv_15, grammarAccess.getFindtempRemoveBushesAccess().getRegionKeyword_0_15());
			}
			(
				(
					lv_region_16_0=RULE_INT
					{
						newLeafNode(lv_region_16_0, grammarAccess.getFindtempRemoveBushesAccess().getRegionINTTerminalRuleCall_0_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempRemoveBushesRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_16_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_17='What'
			{
				newLeafNode(otherlv_17, grammarAccess.getFindtempRemoveBushesAccess().getWhatKeyword_1_0());
			}
			otherlv_18='will'
			{
				newLeafNode(otherlv_18, grammarAccess.getFindtempRemoveBushesAccess().getWillKeyword_1_1());
			}
			otherlv_19='be'
			{
				newLeafNode(otherlv_19, grammarAccess.getFindtempRemoveBushesAccess().getBeKeyword_1_2());
			}
			otherlv_20='the'
			{
				newLeafNode(otherlv_20, grammarAccess.getFindtempRemoveBushesAccess().getTheKeyword_1_3());
			}
			otherlv_21='temperature'
			{
				newLeafNode(otherlv_21, grammarAccess.getFindtempRemoveBushesAccess().getTemperatureKeyword_1_4());
			}
			otherlv_22='if'
			{
				newLeafNode(otherlv_22, grammarAccess.getFindtempRemoveBushesAccess().getIfKeyword_1_5());
			}
			otherlv_23='we'
			{
				newLeafNode(otherlv_23, grammarAccess.getFindtempRemoveBushesAccess().getWeKeyword_1_6());
			}
			otherlv_24='remove'
			{
				newLeafNode(otherlv_24, grammarAccess.getFindtempRemoveBushesAccess().getRemoveKeyword_1_7());
			}
			otherlv_25='bushes'
			{
				newLeafNode(otherlv_25, grammarAccess.getFindtempRemoveBushesAccess().getBushesKeyword_1_8());
			}
			otherlv_26='in'
			{
				newLeafNode(otherlv_26, grammarAccess.getFindtempRemoveBushesAccess().getInKeyword_1_9());
			}
			(
				(
					lv_area_27_0=RULE_INT
					{
						newLeafNode(lv_area_27_0, grammarAccess.getFindtempRemoveBushesAccess().getAreaINTTerminalRuleCall_1_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempRemoveBushesRule());
						}
						setWithLastConsumed(
							$current,
							"area",
							lv_area_27_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_28='square'
			{
				newLeafNode(otherlv_28, grammarAccess.getFindtempRemoveBushesAccess().getSquareKeyword_1_11());
			}
			otherlv_29='meter'
			{
				newLeafNode(otherlv_29, grammarAccess.getFindtempRemoveBushesAccess().getMeterKeyword_1_12());
			}
			otherlv_30='area'
			{
				newLeafNode(otherlv_30, grammarAccess.getFindtempRemoveBushesAccess().getAreaKeyword_1_13());
			}
			otherlv_31='in'
			{
				newLeafNode(otherlv_31, grammarAccess.getFindtempRemoveBushesAccess().getInKeyword_1_14());
			}
			otherlv_32='region'
			{
				newLeafNode(otherlv_32, grammarAccess.getFindtempRemoveBushesAccess().getRegionKeyword_1_15());
			}
			(
				(
					lv_region_33_0=RULE_INT
					{
						newLeafNode(lv_region_33_0, grammarAccess.getFindtempRemoveBushesAccess().getRegionINTTerminalRuleCall_1_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempRemoveBushesRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_33_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_34='What'
			{
				newLeafNode(otherlv_34, grammarAccess.getFindtempRemoveBushesAccess().getWhatKeyword_2_0());
			}
			otherlv_35='Will'
			{
				newLeafNode(otherlv_35, grammarAccess.getFindtempRemoveBushesAccess().getWillKeyword_2_1());
			}
			otherlv_36='Be'
			{
				newLeafNode(otherlv_36, grammarAccess.getFindtempRemoveBushesAccess().getBeKeyword_2_2());
			}
			otherlv_37='The'
			{
				newLeafNode(otherlv_37, grammarAccess.getFindtempRemoveBushesAccess().getTheKeyword_2_3());
			}
			otherlv_38='Temperature'
			{
				newLeafNode(otherlv_38, grammarAccess.getFindtempRemoveBushesAccess().getTemperatureKeyword_2_4());
			}
			otherlv_39='If'
			{
				newLeafNode(otherlv_39, grammarAccess.getFindtempRemoveBushesAccess().getIfKeyword_2_5());
			}
			otherlv_40='We'
			{
				newLeafNode(otherlv_40, grammarAccess.getFindtempRemoveBushesAccess().getWeKeyword_2_6());
			}
			otherlv_41='Remove'
			{
				newLeafNode(otherlv_41, grammarAccess.getFindtempRemoveBushesAccess().getRemoveKeyword_2_7());
			}
			otherlv_42='Bushes'
			{
				newLeafNode(otherlv_42, grammarAccess.getFindtempRemoveBushesAccess().getBushesKeyword_2_8());
			}
			otherlv_43='In'
			{
				newLeafNode(otherlv_43, grammarAccess.getFindtempRemoveBushesAccess().getInKeyword_2_9());
			}
			(
				(
					lv_area_44_0=RULE_INT
					{
						newLeafNode(lv_area_44_0, grammarAccess.getFindtempRemoveBushesAccess().getAreaINTTerminalRuleCall_2_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempRemoveBushesRule());
						}
						setWithLastConsumed(
							$current,
							"area",
							lv_area_44_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_45='Square'
			{
				newLeafNode(otherlv_45, grammarAccess.getFindtempRemoveBushesAccess().getSquareKeyword_2_11());
			}
			otherlv_46='Meter'
			{
				newLeafNode(otherlv_46, grammarAccess.getFindtempRemoveBushesAccess().getMeterKeyword_2_12());
			}
			otherlv_47='Area'
			{
				newLeafNode(otherlv_47, grammarAccess.getFindtempRemoveBushesAccess().getAreaKeyword_2_13());
			}
			otherlv_48='In'
			{
				newLeafNode(otherlv_48, grammarAccess.getFindtempRemoveBushesAccess().getInKeyword_2_14());
			}
			otherlv_49='Region'
			{
				newLeafNode(otherlv_49, grammarAccess.getFindtempRemoveBushesAccess().getRegionKeyword_2_15());
			}
			(
				(
					lv_region_50_0=RULE_INT
					{
						newLeafNode(lv_region_50_0, grammarAccess.getFindtempRemoveBushesAccess().getRegionINTTerminalRuleCall_2_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempRemoveBushesRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_50_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_51='What'
			{
				newLeafNode(otherlv_51, grammarAccess.getFindtempRemoveBushesAccess().getWhatKeyword_3_0());
			}
			otherlv_52='Will'
			{
				newLeafNode(otherlv_52, grammarAccess.getFindtempRemoveBushesAccess().getWillKeyword_3_1());
			}
			otherlv_53='be'
			{
				newLeafNode(otherlv_53, grammarAccess.getFindtempRemoveBushesAccess().getBeKeyword_3_2());
			}
			otherlv_54='the'
			{
				newLeafNode(otherlv_54, grammarAccess.getFindtempRemoveBushesAccess().getTheKeyword_3_3());
			}
			otherlv_55='Temperature'
			{
				newLeafNode(otherlv_55, grammarAccess.getFindtempRemoveBushesAccess().getTemperatureKeyword_3_4());
			}
			otherlv_56='if'
			{
				newLeafNode(otherlv_56, grammarAccess.getFindtempRemoveBushesAccess().getIfKeyword_3_5());
			}
			otherlv_57='we'
			{
				newLeafNode(otherlv_57, grammarAccess.getFindtempRemoveBushesAccess().getWeKeyword_3_6());
			}
			otherlv_58='Remove'
			{
				newLeafNode(otherlv_58, grammarAccess.getFindtempRemoveBushesAccess().getRemoveKeyword_3_7());
			}
			otherlv_59='Bushes'
			{
				newLeafNode(otherlv_59, grammarAccess.getFindtempRemoveBushesAccess().getBushesKeyword_3_8());
			}
			otherlv_60='in'
			{
				newLeafNode(otherlv_60, grammarAccess.getFindtempRemoveBushesAccess().getInKeyword_3_9());
			}
			(
				(
					lv_area_61_0=RULE_INT
					{
						newLeafNode(lv_area_61_0, grammarAccess.getFindtempRemoveBushesAccess().getAreaINTTerminalRuleCall_3_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempRemoveBushesRule());
						}
						setWithLastConsumed(
							$current,
							"area",
							lv_area_61_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_62='Square'
			{
				newLeafNode(otherlv_62, grammarAccess.getFindtempRemoveBushesAccess().getSquareKeyword_3_11());
			}
			otherlv_63='Meter'
			{
				newLeafNode(otherlv_63, grammarAccess.getFindtempRemoveBushesAccess().getMeterKeyword_3_12());
			}
			otherlv_64='Area'
			{
				newLeafNode(otherlv_64, grammarAccess.getFindtempRemoveBushesAccess().getAreaKeyword_3_13());
			}
			otherlv_65='in'
			{
				newLeafNode(otherlv_65, grammarAccess.getFindtempRemoveBushesAccess().getInKeyword_3_14());
			}
			otherlv_66='Region'
			{
				newLeafNode(otherlv_66, grammarAccess.getFindtempRemoveBushesAccess().getRegionKeyword_3_15());
			}
			(
				(
					lv_region_67_0=RULE_INT
					{
						newLeafNode(lv_region_67_0, grammarAccess.getFindtempRemoveBushesAccess().getRegionINTTerminalRuleCall_3_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempRemoveBushesRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_67_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_68='WHAT'
			{
				newLeafNode(otherlv_68, grammarAccess.getFindtempRemoveBushesAccess().getWHATKeyword_4_0());
			}
			otherlv_69='WILL'
			{
				newLeafNode(otherlv_69, grammarAccess.getFindtempRemoveBushesAccess().getWILLKeyword_4_1());
			}
			otherlv_70='BE'
			{
				newLeafNode(otherlv_70, grammarAccess.getFindtempRemoveBushesAccess().getBEKeyword_4_2());
			}
			otherlv_71='THE'
			{
				newLeafNode(otherlv_71, grammarAccess.getFindtempRemoveBushesAccess().getTHEKeyword_4_3());
			}
			otherlv_72='TEMPERATURE'
			{
				newLeafNode(otherlv_72, grammarAccess.getFindtempRemoveBushesAccess().getTEMPERATUREKeyword_4_4());
			}
			otherlv_73='IF'
			{
				newLeafNode(otherlv_73, grammarAccess.getFindtempRemoveBushesAccess().getIFKeyword_4_5());
			}
			otherlv_74='WE'
			{
				newLeafNode(otherlv_74, grammarAccess.getFindtempRemoveBushesAccess().getWEKeyword_4_6());
			}
			otherlv_75='REMOVE'
			{
				newLeafNode(otherlv_75, grammarAccess.getFindtempRemoveBushesAccess().getREMOVEKeyword_4_7());
			}
			otherlv_76='BUSHES'
			{
				newLeafNode(otherlv_76, grammarAccess.getFindtempRemoveBushesAccess().getBUSHESKeyword_4_8());
			}
			otherlv_77='IN'
			{
				newLeafNode(otherlv_77, grammarAccess.getFindtempRemoveBushesAccess().getINKeyword_4_9());
			}
			(
				(
					lv_area_78_0=RULE_INT
					{
						newLeafNode(lv_area_78_0, grammarAccess.getFindtempRemoveBushesAccess().getAreaINTTerminalRuleCall_4_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempRemoveBushesRule());
						}
						setWithLastConsumed(
							$current,
							"area",
							lv_area_78_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_79='SQUARE'
			{
				newLeafNode(otherlv_79, grammarAccess.getFindtempRemoveBushesAccess().getSQUAREKeyword_4_11());
			}
			otherlv_80='METER'
			{
				newLeafNode(otherlv_80, grammarAccess.getFindtempRemoveBushesAccess().getMETERKeyword_4_12());
			}
			otherlv_81='AREA'
			{
				newLeafNode(otherlv_81, grammarAccess.getFindtempRemoveBushesAccess().getAREAKeyword_4_13());
			}
			otherlv_82='IN'
			{
				newLeafNode(otherlv_82, grammarAccess.getFindtempRemoveBushesAccess().getINKeyword_4_14());
			}
			otherlv_83='REGION'
			{
				newLeafNode(otherlv_83, grammarAccess.getFindtempRemoveBushesAccess().getREGIONKeyword_4_15());
			}
			(
				(
					lv_region_84_0=RULE_INT
					{
						newLeafNode(lv_region_84_0, grammarAccess.getFindtempRemoveBushesAccess().getRegionINTTerminalRuleCall_4_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempRemoveBushesRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_84_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
	)
;

// Entry rule entryRulefindtempCreateLake
entryRulefindtempCreateLake returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindtempCreateLakeRule()); }
	iv_rulefindtempCreateLake=rulefindtempCreateLake
	{ $current=$iv_rulefindtempCreateLake.current; }
	EOF;

// Rule findtempCreateLake
rulefindtempCreateLake returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='what'
			{
				newLeafNode(otherlv_0, grammarAccess.getFindtempCreateLakeAccess().getWhatKeyword_0_0());
			}
			otherlv_1='will'
			{
				newLeafNode(otherlv_1, grammarAccess.getFindtempCreateLakeAccess().getWillKeyword_0_1());
			}
			otherlv_2='be'
			{
				newLeafNode(otherlv_2, grammarAccess.getFindtempCreateLakeAccess().getBeKeyword_0_2());
			}
			otherlv_3='the'
			{
				newLeafNode(otherlv_3, grammarAccess.getFindtempCreateLakeAccess().getTheKeyword_0_3());
			}
			otherlv_4='temperature'
			{
				newLeafNode(otherlv_4, grammarAccess.getFindtempCreateLakeAccess().getTemperatureKeyword_0_4());
			}
			otherlv_5='if'
			{
				newLeafNode(otherlv_5, grammarAccess.getFindtempCreateLakeAccess().getIfKeyword_0_5());
			}
			otherlv_6='we'
			{
				newLeafNode(otherlv_6, grammarAccess.getFindtempCreateLakeAccess().getWeKeyword_0_6());
			}
			otherlv_7='create'
			{
				newLeafNode(otherlv_7, grammarAccess.getFindtempCreateLakeAccess().getCreateKeyword_0_7());
			}
			otherlv_8='lake'
			{
				newLeafNode(otherlv_8, grammarAccess.getFindtempCreateLakeAccess().getLakeKeyword_0_8());
			}
			otherlv_9='over'
			{
				newLeafNode(otherlv_9, grammarAccess.getFindtempCreateLakeAccess().getOverKeyword_0_9());
			}
			otherlv_10='area'
			{
				newLeafNode(otherlv_10, grammarAccess.getFindtempCreateLakeAccess().getAreaKeyword_0_10());
			}
			(
				(
					lv_area_11_0=RULE_INT
					{
						newLeafNode(lv_area_11_0, grammarAccess.getFindtempCreateLakeAccess().getAreaINTTerminalRuleCall_0_11_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempCreateLakeRule());
						}
						setWithLastConsumed(
							$current,
							"area",
							lv_area_11_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_12='square'
			{
				newLeafNode(otherlv_12, grammarAccess.getFindtempCreateLakeAccess().getSquareKeyword_0_12());
			}
			otherlv_13='meter'
			{
				newLeafNode(otherlv_13, grammarAccess.getFindtempCreateLakeAccess().getMeterKeyword_0_13());
			}
			otherlv_14='in'
			{
				newLeafNode(otherlv_14, grammarAccess.getFindtempCreateLakeAccess().getInKeyword_0_14());
			}
			otherlv_15='region'
			{
				newLeafNode(otherlv_15, grammarAccess.getFindtempCreateLakeAccess().getRegionKeyword_0_15());
			}
			(
				(
					lv_region_16_0=RULE_INT
					{
						newLeafNode(lv_region_16_0, grammarAccess.getFindtempCreateLakeAccess().getRegionINTTerminalRuleCall_0_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempCreateLakeRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_16_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_17='What'
			{
				newLeafNode(otherlv_17, grammarAccess.getFindtempCreateLakeAccess().getWhatKeyword_1_0());
			}
			otherlv_18='will'
			{
				newLeafNode(otherlv_18, grammarAccess.getFindtempCreateLakeAccess().getWillKeyword_1_1());
			}
			otherlv_19='be'
			{
				newLeafNode(otherlv_19, grammarAccess.getFindtempCreateLakeAccess().getBeKeyword_1_2());
			}
			otherlv_20='the'
			{
				newLeafNode(otherlv_20, grammarAccess.getFindtempCreateLakeAccess().getTheKeyword_1_3());
			}
			otherlv_21='temperature'
			{
				newLeafNode(otherlv_21, grammarAccess.getFindtempCreateLakeAccess().getTemperatureKeyword_1_4());
			}
			otherlv_22='if'
			{
				newLeafNode(otherlv_22, grammarAccess.getFindtempCreateLakeAccess().getIfKeyword_1_5());
			}
			otherlv_23='we'
			{
				newLeafNode(otherlv_23, grammarAccess.getFindtempCreateLakeAccess().getWeKeyword_1_6());
			}
			otherlv_24='create'
			{
				newLeafNode(otherlv_24, grammarAccess.getFindtempCreateLakeAccess().getCreateKeyword_1_7());
			}
			otherlv_25='lake'
			{
				newLeafNode(otherlv_25, grammarAccess.getFindtempCreateLakeAccess().getLakeKeyword_1_8());
			}
			otherlv_26='over'
			{
				newLeafNode(otherlv_26, grammarAccess.getFindtempCreateLakeAccess().getOverKeyword_1_9());
			}
			otherlv_27='area'
			{
				newLeafNode(otherlv_27, grammarAccess.getFindtempCreateLakeAccess().getAreaKeyword_1_10());
			}
			(
				(
					lv_area_28_0=RULE_INT
					{
						newLeafNode(lv_area_28_0, grammarAccess.getFindtempCreateLakeAccess().getAreaINTTerminalRuleCall_1_11_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempCreateLakeRule());
						}
						setWithLastConsumed(
							$current,
							"area",
							lv_area_28_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_29='square'
			{
				newLeafNode(otherlv_29, grammarAccess.getFindtempCreateLakeAccess().getSquareKeyword_1_12());
			}
			otherlv_30='meter'
			{
				newLeafNode(otherlv_30, grammarAccess.getFindtempCreateLakeAccess().getMeterKeyword_1_13());
			}
			otherlv_31='in'
			{
				newLeafNode(otherlv_31, grammarAccess.getFindtempCreateLakeAccess().getInKeyword_1_14());
			}
			otherlv_32='region'
			{
				newLeafNode(otherlv_32, grammarAccess.getFindtempCreateLakeAccess().getRegionKeyword_1_15());
			}
			(
				(
					lv_region_33_0=RULE_INT
					{
						newLeafNode(lv_region_33_0, grammarAccess.getFindtempCreateLakeAccess().getRegionINTTerminalRuleCall_1_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempCreateLakeRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_33_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_34='what'
			{
				newLeafNode(otherlv_34, grammarAccess.getFindtempCreateLakeAccess().getWhatKeyword_2_0());
			}
			otherlv_35='will'
			{
				newLeafNode(otherlv_35, grammarAccess.getFindtempCreateLakeAccess().getWillKeyword_2_1());
			}
			otherlv_36='be'
			{
				newLeafNode(otherlv_36, grammarAccess.getFindtempCreateLakeAccess().getBeKeyword_2_2());
			}
			otherlv_37='the'
			{
				newLeafNode(otherlv_37, grammarAccess.getFindtempCreateLakeAccess().getTheKeyword_2_3());
			}
			otherlv_38='Temperature'
			{
				newLeafNode(otherlv_38, grammarAccess.getFindtempCreateLakeAccess().getTemperatureKeyword_2_4());
			}
			otherlv_39='If'
			{
				newLeafNode(otherlv_39, grammarAccess.getFindtempCreateLakeAccess().getIfKeyword_2_5());
			}
			otherlv_40='We'
			{
				newLeafNode(otherlv_40, grammarAccess.getFindtempCreateLakeAccess().getWeKeyword_2_6());
			}
			otherlv_41='Create'
			{
				newLeafNode(otherlv_41, grammarAccess.getFindtempCreateLakeAccess().getCreateKeyword_2_7());
			}
			otherlv_42='Lake'
			{
				newLeafNode(otherlv_42, grammarAccess.getFindtempCreateLakeAccess().getLakeKeyword_2_8());
			}
			otherlv_43='Over'
			{
				newLeafNode(otherlv_43, grammarAccess.getFindtempCreateLakeAccess().getOverKeyword_2_9());
			}
			otherlv_44='Area'
			{
				newLeafNode(otherlv_44, grammarAccess.getFindtempCreateLakeAccess().getAreaKeyword_2_10());
			}
			(
				(
					lv_area_45_0=RULE_INT
					{
						newLeafNode(lv_area_45_0, grammarAccess.getFindtempCreateLakeAccess().getAreaINTTerminalRuleCall_2_11_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempCreateLakeRule());
						}
						setWithLastConsumed(
							$current,
							"area",
							lv_area_45_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_46='Square'
			{
				newLeafNode(otherlv_46, grammarAccess.getFindtempCreateLakeAccess().getSquareKeyword_2_12());
			}
			otherlv_47='Meter'
			{
				newLeafNode(otherlv_47, grammarAccess.getFindtempCreateLakeAccess().getMeterKeyword_2_13());
			}
			otherlv_48='In'
			{
				newLeafNode(otherlv_48, grammarAccess.getFindtempCreateLakeAccess().getInKeyword_2_14());
			}
			otherlv_49='Region'
			{
				newLeafNode(otherlv_49, grammarAccess.getFindtempCreateLakeAccess().getRegionKeyword_2_15());
			}
			(
				(
					lv_region_50_0=RULE_INT
					{
						newLeafNode(lv_region_50_0, grammarAccess.getFindtempCreateLakeAccess().getRegionINTTerminalRuleCall_2_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempCreateLakeRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_50_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_51='what'
			{
				newLeafNode(otherlv_51, grammarAccess.getFindtempCreateLakeAccess().getWhatKeyword_3_0());
			}
			otherlv_52='will'
			{
				newLeafNode(otherlv_52, grammarAccess.getFindtempCreateLakeAccess().getWillKeyword_3_1());
			}
			otherlv_53='be'
			{
				newLeafNode(otherlv_53, grammarAccess.getFindtempCreateLakeAccess().getBeKeyword_3_2());
			}
			otherlv_54='the'
			{
				newLeafNode(otherlv_54, grammarAccess.getFindtempCreateLakeAccess().getTheKeyword_3_3());
			}
			otherlv_55='Temperature'
			{
				newLeafNode(otherlv_55, grammarAccess.getFindtempCreateLakeAccess().getTemperatureKeyword_3_4());
			}
			otherlv_56='if'
			{
				newLeafNode(otherlv_56, grammarAccess.getFindtempCreateLakeAccess().getIfKeyword_3_5());
			}
			otherlv_57='we'
			{
				newLeafNode(otherlv_57, grammarAccess.getFindtempCreateLakeAccess().getWeKeyword_3_6());
			}
			otherlv_58='Create'
			{
				newLeafNode(otherlv_58, grammarAccess.getFindtempCreateLakeAccess().getCreateKeyword_3_7());
			}
			otherlv_59='Lake'
			{
				newLeafNode(otherlv_59, grammarAccess.getFindtempCreateLakeAccess().getLakeKeyword_3_8());
			}
			otherlv_60='Over'
			{
				newLeafNode(otherlv_60, grammarAccess.getFindtempCreateLakeAccess().getOverKeyword_3_9());
			}
			otherlv_61='Area'
			{
				newLeafNode(otherlv_61, grammarAccess.getFindtempCreateLakeAccess().getAreaKeyword_3_10());
			}
			(
				(
					lv_area_62_0=RULE_INT
					{
						newLeafNode(lv_area_62_0, grammarAccess.getFindtempCreateLakeAccess().getAreaINTTerminalRuleCall_3_11_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempCreateLakeRule());
						}
						setWithLastConsumed(
							$current,
							"area",
							lv_area_62_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_63='Square'
			{
				newLeafNode(otherlv_63, grammarAccess.getFindtempCreateLakeAccess().getSquareKeyword_3_12());
			}
			otherlv_64='Meter'
			{
				newLeafNode(otherlv_64, grammarAccess.getFindtempCreateLakeAccess().getMeterKeyword_3_13());
			}
			otherlv_65='in'
			{
				newLeafNode(otherlv_65, grammarAccess.getFindtempCreateLakeAccess().getInKeyword_3_14());
			}
			otherlv_66='Region'
			{
				newLeafNode(otherlv_66, grammarAccess.getFindtempCreateLakeAccess().getRegionKeyword_3_15());
			}
			(
				(
					lv_region_67_0=RULE_INT
					{
						newLeafNode(lv_region_67_0, grammarAccess.getFindtempCreateLakeAccess().getRegionINTTerminalRuleCall_3_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempCreateLakeRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_67_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_68='WHAT'
			{
				newLeafNode(otherlv_68, grammarAccess.getFindtempCreateLakeAccess().getWHATKeyword_4_0());
			}
			otherlv_69='WILL'
			{
				newLeafNode(otherlv_69, grammarAccess.getFindtempCreateLakeAccess().getWILLKeyword_4_1());
			}
			otherlv_70='BE'
			{
				newLeafNode(otherlv_70, grammarAccess.getFindtempCreateLakeAccess().getBEKeyword_4_2());
			}
			otherlv_71='THE'
			{
				newLeafNode(otherlv_71, grammarAccess.getFindtempCreateLakeAccess().getTHEKeyword_4_3());
			}
			otherlv_72='TEMPERATURE'
			{
				newLeafNode(otherlv_72, grammarAccess.getFindtempCreateLakeAccess().getTEMPERATUREKeyword_4_4());
			}
			otherlv_73='IF'
			{
				newLeafNode(otherlv_73, grammarAccess.getFindtempCreateLakeAccess().getIFKeyword_4_5());
			}
			otherlv_74='WE'
			{
				newLeafNode(otherlv_74, grammarAccess.getFindtempCreateLakeAccess().getWEKeyword_4_6());
			}
			otherlv_75='CREATE'
			{
				newLeafNode(otherlv_75, grammarAccess.getFindtempCreateLakeAccess().getCREATEKeyword_4_7());
			}
			otherlv_76='LAKE'
			{
				newLeafNode(otherlv_76, grammarAccess.getFindtempCreateLakeAccess().getLAKEKeyword_4_8());
			}
			otherlv_77='OVER'
			{
				newLeafNode(otherlv_77, grammarAccess.getFindtempCreateLakeAccess().getOVERKeyword_4_9());
			}
			otherlv_78='AREA'
			{
				newLeafNode(otherlv_78, grammarAccess.getFindtempCreateLakeAccess().getAREAKeyword_4_10());
			}
			(
				(
					lv_area_79_0=RULE_INT
					{
						newLeafNode(lv_area_79_0, grammarAccess.getFindtempCreateLakeAccess().getAreaINTTerminalRuleCall_4_11_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempCreateLakeRule());
						}
						setWithLastConsumed(
							$current,
							"area",
							lv_area_79_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_80='SQUARE'
			{
				newLeafNode(otherlv_80, grammarAccess.getFindtempCreateLakeAccess().getSQUAREKeyword_4_12());
			}
			otherlv_81='METER'
			{
				newLeafNode(otherlv_81, grammarAccess.getFindtempCreateLakeAccess().getMETERKeyword_4_13());
			}
			otherlv_82='IN'
			{
				newLeafNode(otherlv_82, grammarAccess.getFindtempCreateLakeAccess().getINKeyword_4_14());
			}
			otherlv_83='REGION'
			{
				newLeafNode(otherlv_83, grammarAccess.getFindtempCreateLakeAccess().getREGIONKeyword_4_15());
			}
			(
				(
					lv_region_84_0=RULE_INT
					{
						newLeafNode(lv_region_84_0, grammarAccess.getFindtempCreateLakeAccess().getRegionINTTerminalRuleCall_4_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempCreateLakeRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_84_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
	)
;

// Entry rule entryRulefindtempRemoveLake
entryRulefindtempRemoveLake returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindtempRemoveLakeRule()); }
	iv_rulefindtempRemoveLake=rulefindtempRemoveLake
	{ $current=$iv_rulefindtempRemoveLake.current; }
	EOF;

// Rule findtempRemoveLake
rulefindtempRemoveLake returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='what'
			{
				newLeafNode(otherlv_0, grammarAccess.getFindtempRemoveLakeAccess().getWhatKeyword_0_0());
			}
			otherlv_1='will'
			{
				newLeafNode(otherlv_1, grammarAccess.getFindtempRemoveLakeAccess().getWillKeyword_0_1());
			}
			otherlv_2='be'
			{
				newLeafNode(otherlv_2, grammarAccess.getFindtempRemoveLakeAccess().getBeKeyword_0_2());
			}
			otherlv_3='the'
			{
				newLeafNode(otherlv_3, grammarAccess.getFindtempRemoveLakeAccess().getTheKeyword_0_3());
			}
			otherlv_4='temperature'
			{
				newLeafNode(otherlv_4, grammarAccess.getFindtempRemoveLakeAccess().getTemperatureKeyword_0_4());
			}
			otherlv_5='if'
			{
				newLeafNode(otherlv_5, grammarAccess.getFindtempRemoveLakeAccess().getIfKeyword_0_5());
			}
			otherlv_6='we'
			{
				newLeafNode(otherlv_6, grammarAccess.getFindtempRemoveLakeAccess().getWeKeyword_0_6());
			}
			otherlv_7='remove'
			{
				newLeafNode(otherlv_7, grammarAccess.getFindtempRemoveLakeAccess().getRemoveKeyword_0_7());
			}
			otherlv_8='lake'
			{
				newLeafNode(otherlv_8, grammarAccess.getFindtempRemoveLakeAccess().getLakeKeyword_0_8());
			}
			otherlv_9='over'
			{
				newLeafNode(otherlv_9, grammarAccess.getFindtempRemoveLakeAccess().getOverKeyword_0_9());
			}
			otherlv_10='area'
			{
				newLeafNode(otherlv_10, grammarAccess.getFindtempRemoveLakeAccess().getAreaKeyword_0_10());
			}
			(
				(
					lv_area_11_0=RULE_INT
					{
						newLeafNode(lv_area_11_0, grammarAccess.getFindtempRemoveLakeAccess().getAreaINTTerminalRuleCall_0_11_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempRemoveLakeRule());
						}
						setWithLastConsumed(
							$current,
							"area",
							lv_area_11_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_12='square'
			{
				newLeafNode(otherlv_12, grammarAccess.getFindtempRemoveLakeAccess().getSquareKeyword_0_12());
			}
			otherlv_13='meter'
			{
				newLeafNode(otherlv_13, grammarAccess.getFindtempRemoveLakeAccess().getMeterKeyword_0_13());
			}
			otherlv_14='in'
			{
				newLeafNode(otherlv_14, grammarAccess.getFindtempRemoveLakeAccess().getInKeyword_0_14());
			}
			otherlv_15='region'
			{
				newLeafNode(otherlv_15, grammarAccess.getFindtempRemoveLakeAccess().getRegionKeyword_0_15());
			}
			(
				(
					lv_region_16_0=RULE_INT
					{
						newLeafNode(lv_region_16_0, grammarAccess.getFindtempRemoveLakeAccess().getRegionINTTerminalRuleCall_0_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempRemoveLakeRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_16_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_17='What'
			{
				newLeafNode(otherlv_17, grammarAccess.getFindtempRemoveLakeAccess().getWhatKeyword_1_0());
			}
			otherlv_18='will'
			{
				newLeafNode(otherlv_18, grammarAccess.getFindtempRemoveLakeAccess().getWillKeyword_1_1());
			}
			otherlv_19='be'
			{
				newLeafNode(otherlv_19, grammarAccess.getFindtempRemoveLakeAccess().getBeKeyword_1_2());
			}
			otherlv_20='the'
			{
				newLeafNode(otherlv_20, grammarAccess.getFindtempRemoveLakeAccess().getTheKeyword_1_3());
			}
			otherlv_21='temperature'
			{
				newLeafNode(otherlv_21, grammarAccess.getFindtempRemoveLakeAccess().getTemperatureKeyword_1_4());
			}
			otherlv_22='if'
			{
				newLeafNode(otherlv_22, grammarAccess.getFindtempRemoveLakeAccess().getIfKeyword_1_5());
			}
			otherlv_23='we'
			{
				newLeafNode(otherlv_23, grammarAccess.getFindtempRemoveLakeAccess().getWeKeyword_1_6());
			}
			otherlv_24='remove'
			{
				newLeafNode(otherlv_24, grammarAccess.getFindtempRemoveLakeAccess().getRemoveKeyword_1_7());
			}
			otherlv_25='lake'
			{
				newLeafNode(otherlv_25, grammarAccess.getFindtempRemoveLakeAccess().getLakeKeyword_1_8());
			}
			otherlv_26='over'
			{
				newLeafNode(otherlv_26, grammarAccess.getFindtempRemoveLakeAccess().getOverKeyword_1_9());
			}
			otherlv_27='area'
			{
				newLeafNode(otherlv_27, grammarAccess.getFindtempRemoveLakeAccess().getAreaKeyword_1_10());
			}
			(
				(
					lv_area_28_0=RULE_INT
					{
						newLeafNode(lv_area_28_0, grammarAccess.getFindtempRemoveLakeAccess().getAreaINTTerminalRuleCall_1_11_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempRemoveLakeRule());
						}
						setWithLastConsumed(
							$current,
							"area",
							lv_area_28_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_29='square'
			{
				newLeafNode(otherlv_29, grammarAccess.getFindtempRemoveLakeAccess().getSquareKeyword_1_12());
			}
			otherlv_30='meter'
			{
				newLeafNode(otherlv_30, grammarAccess.getFindtempRemoveLakeAccess().getMeterKeyword_1_13());
			}
			otherlv_31='in'
			{
				newLeafNode(otherlv_31, grammarAccess.getFindtempRemoveLakeAccess().getInKeyword_1_14());
			}
			otherlv_32='region'
			{
				newLeafNode(otherlv_32, grammarAccess.getFindtempRemoveLakeAccess().getRegionKeyword_1_15());
			}
			(
				(
					lv_region_33_0=RULE_INT
					{
						newLeafNode(lv_region_33_0, grammarAccess.getFindtempRemoveLakeAccess().getRegionINTTerminalRuleCall_1_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempRemoveLakeRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_33_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_34='What'
			{
				newLeafNode(otherlv_34, grammarAccess.getFindtempRemoveLakeAccess().getWhatKeyword_2_0());
			}
			otherlv_35='Will'
			{
				newLeafNode(otherlv_35, grammarAccess.getFindtempRemoveLakeAccess().getWillKeyword_2_1());
			}
			otherlv_36='Be'
			{
				newLeafNode(otherlv_36, grammarAccess.getFindtempRemoveLakeAccess().getBeKeyword_2_2());
			}
			otherlv_37='The'
			{
				newLeafNode(otherlv_37, grammarAccess.getFindtempRemoveLakeAccess().getTheKeyword_2_3());
			}
			otherlv_38='Temperature'
			{
				newLeafNode(otherlv_38, grammarAccess.getFindtempRemoveLakeAccess().getTemperatureKeyword_2_4());
			}
			otherlv_39='If'
			{
				newLeafNode(otherlv_39, grammarAccess.getFindtempRemoveLakeAccess().getIfKeyword_2_5());
			}
			otherlv_40='We'
			{
				newLeafNode(otherlv_40, grammarAccess.getFindtempRemoveLakeAccess().getWeKeyword_2_6());
			}
			otherlv_41='Remove'
			{
				newLeafNode(otherlv_41, grammarAccess.getFindtempRemoveLakeAccess().getRemoveKeyword_2_7());
			}
			otherlv_42='Lake'
			{
				newLeafNode(otherlv_42, grammarAccess.getFindtempRemoveLakeAccess().getLakeKeyword_2_8());
			}
			otherlv_43='Over'
			{
				newLeafNode(otherlv_43, grammarAccess.getFindtempRemoveLakeAccess().getOverKeyword_2_9());
			}
			otherlv_44='Area'
			{
				newLeafNode(otherlv_44, grammarAccess.getFindtempRemoveLakeAccess().getAreaKeyword_2_10());
			}
			(
				(
					lv_area_45_0=RULE_INT
					{
						newLeafNode(lv_area_45_0, grammarAccess.getFindtempRemoveLakeAccess().getAreaINTTerminalRuleCall_2_11_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempRemoveLakeRule());
						}
						setWithLastConsumed(
							$current,
							"area",
							lv_area_45_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_46='Square'
			{
				newLeafNode(otherlv_46, grammarAccess.getFindtempRemoveLakeAccess().getSquareKeyword_2_12());
			}
			otherlv_47='Meter'
			{
				newLeafNode(otherlv_47, grammarAccess.getFindtempRemoveLakeAccess().getMeterKeyword_2_13());
			}
			otherlv_48='In'
			{
				newLeafNode(otherlv_48, grammarAccess.getFindtempRemoveLakeAccess().getInKeyword_2_14());
			}
			otherlv_49='Region'
			{
				newLeafNode(otherlv_49, grammarAccess.getFindtempRemoveLakeAccess().getRegionKeyword_2_15());
			}
			(
				(
					lv_region_50_0=RULE_INT
					{
						newLeafNode(lv_region_50_0, grammarAccess.getFindtempRemoveLakeAccess().getRegionINTTerminalRuleCall_2_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempRemoveLakeRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_50_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_51='What'
			{
				newLeafNode(otherlv_51, grammarAccess.getFindtempRemoveLakeAccess().getWhatKeyword_3_0());
			}
			otherlv_52='Will'
			{
				newLeafNode(otherlv_52, grammarAccess.getFindtempRemoveLakeAccess().getWillKeyword_3_1());
			}
			otherlv_53='be'
			{
				newLeafNode(otherlv_53, grammarAccess.getFindtempRemoveLakeAccess().getBeKeyword_3_2());
			}
			otherlv_54='the'
			{
				newLeafNode(otherlv_54, grammarAccess.getFindtempRemoveLakeAccess().getTheKeyword_3_3());
			}
			otherlv_55='Temperature'
			{
				newLeafNode(otherlv_55, grammarAccess.getFindtempRemoveLakeAccess().getTemperatureKeyword_3_4());
			}
			otherlv_56='if'
			{
				newLeafNode(otherlv_56, grammarAccess.getFindtempRemoveLakeAccess().getIfKeyword_3_5());
			}
			otherlv_57='we'
			{
				newLeafNode(otherlv_57, grammarAccess.getFindtempRemoveLakeAccess().getWeKeyword_3_6());
			}
			otherlv_58='Remove'
			{
				newLeafNode(otherlv_58, grammarAccess.getFindtempRemoveLakeAccess().getRemoveKeyword_3_7());
			}
			otherlv_59='Lake'
			{
				newLeafNode(otherlv_59, grammarAccess.getFindtempRemoveLakeAccess().getLakeKeyword_3_8());
			}
			otherlv_60='Over'
			{
				newLeafNode(otherlv_60, grammarAccess.getFindtempRemoveLakeAccess().getOverKeyword_3_9());
			}
			otherlv_61='Area'
			{
				newLeafNode(otherlv_61, grammarAccess.getFindtempRemoveLakeAccess().getAreaKeyword_3_10());
			}
			(
				(
					lv_area_62_0=RULE_INT
					{
						newLeafNode(lv_area_62_0, grammarAccess.getFindtempRemoveLakeAccess().getAreaINTTerminalRuleCall_3_11_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempRemoveLakeRule());
						}
						setWithLastConsumed(
							$current,
							"area",
							lv_area_62_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_63='Square'
			{
				newLeafNode(otherlv_63, grammarAccess.getFindtempRemoveLakeAccess().getSquareKeyword_3_12());
			}
			otherlv_64='Meter'
			{
				newLeafNode(otherlv_64, grammarAccess.getFindtempRemoveLakeAccess().getMeterKeyword_3_13());
			}
			otherlv_65='in'
			{
				newLeafNode(otherlv_65, grammarAccess.getFindtempRemoveLakeAccess().getInKeyword_3_14());
			}
			otherlv_66='Region'
			{
				newLeafNode(otherlv_66, grammarAccess.getFindtempRemoveLakeAccess().getRegionKeyword_3_15());
			}
			(
				(
					lv_region_67_0=RULE_INT
					{
						newLeafNode(lv_region_67_0, grammarAccess.getFindtempRemoveLakeAccess().getRegionINTTerminalRuleCall_3_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempRemoveLakeRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_67_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_68='WHAT'
			{
				newLeafNode(otherlv_68, grammarAccess.getFindtempRemoveLakeAccess().getWHATKeyword_4_0());
			}
			otherlv_69='WILL'
			{
				newLeafNode(otherlv_69, grammarAccess.getFindtempRemoveLakeAccess().getWILLKeyword_4_1());
			}
			otherlv_70='BE'
			{
				newLeafNode(otherlv_70, grammarAccess.getFindtempRemoveLakeAccess().getBEKeyword_4_2());
			}
			otherlv_71='THE'
			{
				newLeafNode(otherlv_71, grammarAccess.getFindtempRemoveLakeAccess().getTHEKeyword_4_3());
			}
			otherlv_72='TEMPERATURE'
			{
				newLeafNode(otherlv_72, grammarAccess.getFindtempRemoveLakeAccess().getTEMPERATUREKeyword_4_4());
			}
			otherlv_73='IF'
			{
				newLeafNode(otherlv_73, grammarAccess.getFindtempRemoveLakeAccess().getIFKeyword_4_5());
			}
			otherlv_74='WE'
			{
				newLeafNode(otherlv_74, grammarAccess.getFindtempRemoveLakeAccess().getWEKeyword_4_6());
			}
			otherlv_75='REMOVE'
			{
				newLeafNode(otherlv_75, grammarAccess.getFindtempRemoveLakeAccess().getREMOVEKeyword_4_7());
			}
			otherlv_76='LAKE'
			{
				newLeafNode(otherlv_76, grammarAccess.getFindtempRemoveLakeAccess().getLAKEKeyword_4_8());
			}
			otherlv_77='OVER'
			{
				newLeafNode(otherlv_77, grammarAccess.getFindtempRemoveLakeAccess().getOVERKeyword_4_9());
			}
			otherlv_78='AREA'
			{
				newLeafNode(otherlv_78, grammarAccess.getFindtempRemoveLakeAccess().getAREAKeyword_4_10());
			}
			(
				(
					lv_area_79_0=RULE_INT
					{
						newLeafNode(lv_area_79_0, grammarAccess.getFindtempRemoveLakeAccess().getAreaINTTerminalRuleCall_4_11_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempRemoveLakeRule());
						}
						setWithLastConsumed(
							$current,
							"area",
							lv_area_79_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_80='SQUARE'
			{
				newLeafNode(otherlv_80, grammarAccess.getFindtempRemoveLakeAccess().getSQUAREKeyword_4_12());
			}
			otherlv_81='METER'
			{
				newLeafNode(otherlv_81, grammarAccess.getFindtempRemoveLakeAccess().getMETERKeyword_4_13());
			}
			otherlv_82='IN'
			{
				newLeafNode(otherlv_82, grammarAccess.getFindtempRemoveLakeAccess().getINKeyword_4_14());
			}
			otherlv_83='REGION'
			{
				newLeafNode(otherlv_83, grammarAccess.getFindtempRemoveLakeAccess().getREGIONKeyword_4_15());
			}
			(
				(
					lv_region_84_0=RULE_INT
					{
						newLeafNode(lv_region_84_0, grammarAccess.getFindtempRemoveLakeAccess().getRegionINTTerminalRuleCall_4_16_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFindtempRemoveLakeRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_84_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDesignCommercial
entryRuleDesignCommercial returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDesignCommercialRule()); }
	iv_ruleDesignCommercial=ruleDesignCommercial
	{ $current=$iv_ruleDesignCommercial.current; }
	EOF;

// Rule DesignCommercial
ruleDesignCommercial returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='what'
			{
				newLeafNode(otherlv_0, grammarAccess.getDesignCommercialAccess().getWhatKeyword_0_0());
			}
			otherlv_1='will'
			{
				newLeafNode(otherlv_1, grammarAccess.getDesignCommercialAccess().getWillKeyword_0_1());
			}
			otherlv_2='be'
			{
				newLeafNode(otherlv_2, grammarAccess.getDesignCommercialAccess().getBeKeyword_0_2());
			}
			otherlv_3='the'
			{
				newLeafNode(otherlv_3, grammarAccess.getDesignCommercialAccess().getTheKeyword_0_3());
			}
			otherlv_4='design'
			{
				newLeafNode(otherlv_4, grammarAccess.getDesignCommercialAccess().getDesignKeyword_0_4());
			}
			otherlv_5='plan'
			{
				newLeafNode(otherlv_5, grammarAccess.getDesignCommercialAccess().getPlanKeyword_0_5());
			}
			otherlv_6='for'
			{
				newLeafNode(otherlv_6, grammarAccess.getDesignCommercialAccess().getForKeyword_0_6());
			}
			otherlv_7='commercial'
			{
				newLeafNode(otherlv_7, grammarAccess.getDesignCommercialAccess().getCommercialKeyword_0_7());
			}
			otherlv_8='area'
			{
				newLeafNode(otherlv_8, grammarAccess.getDesignCommercialAccess().getAreaKeyword_0_8());
			}
			otherlv_9='for'
			{
				newLeafNode(otherlv_9, grammarAccess.getDesignCommercialAccess().getForKeyword_0_9());
			}
			(
				(
					lv_no_of_people_10_0=RULE_INT
					{
						newLeafNode(lv_no_of_people_10_0, grammarAccess.getDesignCommercialAccess().getNo_of_peopleINTTerminalRuleCall_0_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignCommercialRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_people",
							lv_no_of_people_10_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_11='people'
			{
				newLeafNode(otherlv_11, grammarAccess.getDesignCommercialAccess().getPeopleKeyword_0_11());
			}
			otherlv_12='in'
			{
				newLeafNode(otherlv_12, grammarAccess.getDesignCommercialAccess().getInKeyword_0_12());
			}
			otherlv_13='region'
			{
				newLeafNode(otherlv_13, grammarAccess.getDesignCommercialAccess().getRegionKeyword_0_13());
			}
			(
				(
					lv_region_14_0=RULE_INT
					{
						newLeafNode(lv_region_14_0, grammarAccess.getDesignCommercialAccess().getRegionINTTerminalRuleCall_0_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignCommercialRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_14_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_15='What'
			{
				newLeafNode(otherlv_15, grammarAccess.getDesignCommercialAccess().getWhatKeyword_1_0());
			}
			otherlv_16='will'
			{
				newLeafNode(otherlv_16, grammarAccess.getDesignCommercialAccess().getWillKeyword_1_1());
			}
			otherlv_17='be'
			{
				newLeafNode(otherlv_17, grammarAccess.getDesignCommercialAccess().getBeKeyword_1_2());
			}
			otherlv_18='the'
			{
				newLeafNode(otherlv_18, grammarAccess.getDesignCommercialAccess().getTheKeyword_1_3());
			}
			otherlv_19='design'
			{
				newLeafNode(otherlv_19, grammarAccess.getDesignCommercialAccess().getDesignKeyword_1_4());
			}
			otherlv_20='plan'
			{
				newLeafNode(otherlv_20, grammarAccess.getDesignCommercialAccess().getPlanKeyword_1_5());
			}
			otherlv_21='for'
			{
				newLeafNode(otherlv_21, grammarAccess.getDesignCommercialAccess().getForKeyword_1_6());
			}
			otherlv_22='commercial'
			{
				newLeafNode(otherlv_22, grammarAccess.getDesignCommercialAccess().getCommercialKeyword_1_7());
			}
			otherlv_23='area'
			{
				newLeafNode(otherlv_23, grammarAccess.getDesignCommercialAccess().getAreaKeyword_1_8());
			}
			otherlv_24='for'
			{
				newLeafNode(otherlv_24, grammarAccess.getDesignCommercialAccess().getForKeyword_1_9());
			}
			(
				(
					lv_no_of_people_25_0=RULE_INT
					{
						newLeafNode(lv_no_of_people_25_0, grammarAccess.getDesignCommercialAccess().getNo_of_peopleINTTerminalRuleCall_1_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignCommercialRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_people",
							lv_no_of_people_25_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_26='people'
			{
				newLeafNode(otherlv_26, grammarAccess.getDesignCommercialAccess().getPeopleKeyword_1_11());
			}
			otherlv_27='in'
			{
				newLeafNode(otherlv_27, grammarAccess.getDesignCommercialAccess().getInKeyword_1_12());
			}
			otherlv_28='region'
			{
				newLeafNode(otherlv_28, grammarAccess.getDesignCommercialAccess().getRegionKeyword_1_13());
			}
			(
				(
					lv_region_29_0=RULE_INT
					{
						newLeafNode(lv_region_29_0, grammarAccess.getDesignCommercialAccess().getRegionINTTerminalRuleCall_1_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignCommercialRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_29_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_30='What'
			{
				newLeafNode(otherlv_30, grammarAccess.getDesignCommercialAccess().getWhatKeyword_2_0());
			}
			otherlv_31='Will'
			{
				newLeafNode(otherlv_31, grammarAccess.getDesignCommercialAccess().getWillKeyword_2_1());
			}
			otherlv_32='Be'
			{
				newLeafNode(otherlv_32, grammarAccess.getDesignCommercialAccess().getBeKeyword_2_2());
			}
			otherlv_33='The'
			{
				newLeafNode(otherlv_33, grammarAccess.getDesignCommercialAccess().getTheKeyword_2_3());
			}
			otherlv_34='Design'
			{
				newLeafNode(otherlv_34, grammarAccess.getDesignCommercialAccess().getDesignKeyword_2_4());
			}
			otherlv_35='Plan'
			{
				newLeafNode(otherlv_35, grammarAccess.getDesignCommercialAccess().getPlanKeyword_2_5());
			}
			otherlv_36='For'
			{
				newLeafNode(otherlv_36, grammarAccess.getDesignCommercialAccess().getForKeyword_2_6());
			}
			otherlv_37='Commercial'
			{
				newLeafNode(otherlv_37, grammarAccess.getDesignCommercialAccess().getCommercialKeyword_2_7());
			}
			otherlv_38='Area'
			{
				newLeafNode(otherlv_38, grammarAccess.getDesignCommercialAccess().getAreaKeyword_2_8());
			}
			otherlv_39='For'
			{
				newLeafNode(otherlv_39, grammarAccess.getDesignCommercialAccess().getForKeyword_2_9());
			}
			(
				(
					lv_no_of_people_40_0=RULE_INT
					{
						newLeafNode(lv_no_of_people_40_0, grammarAccess.getDesignCommercialAccess().getNo_of_peopleINTTerminalRuleCall_2_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignCommercialRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_people",
							lv_no_of_people_40_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_41='People'
			{
				newLeafNode(otherlv_41, grammarAccess.getDesignCommercialAccess().getPeopleKeyword_2_11());
			}
			otherlv_42='In'
			{
				newLeafNode(otherlv_42, grammarAccess.getDesignCommercialAccess().getInKeyword_2_12());
			}
			otherlv_43='Region'
			{
				newLeafNode(otherlv_43, grammarAccess.getDesignCommercialAccess().getRegionKeyword_2_13());
			}
			(
				(
					lv_region_44_0=RULE_INT
					{
						newLeafNode(lv_region_44_0, grammarAccess.getDesignCommercialAccess().getRegionINTTerminalRuleCall_2_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignCommercialRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_44_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_45='What'
			{
				newLeafNode(otherlv_45, grammarAccess.getDesignCommercialAccess().getWhatKeyword_3_0());
			}
			otherlv_46='Will'
			{
				newLeafNode(otherlv_46, grammarAccess.getDesignCommercialAccess().getWillKeyword_3_1());
			}
			otherlv_47='be'
			{
				newLeafNode(otherlv_47, grammarAccess.getDesignCommercialAccess().getBeKeyword_3_2());
			}
			otherlv_48='the'
			{
				newLeafNode(otherlv_48, grammarAccess.getDesignCommercialAccess().getTheKeyword_3_3());
			}
			otherlv_49='Design'
			{
				newLeafNode(otherlv_49, grammarAccess.getDesignCommercialAccess().getDesignKeyword_3_4());
			}
			otherlv_50='Plan'
			{
				newLeafNode(otherlv_50, grammarAccess.getDesignCommercialAccess().getPlanKeyword_3_5());
			}
			otherlv_51='for'
			{
				newLeafNode(otherlv_51, grammarAccess.getDesignCommercialAccess().getForKeyword_3_6());
			}
			otherlv_52='Commercial'
			{
				newLeafNode(otherlv_52, grammarAccess.getDesignCommercialAccess().getCommercialKeyword_3_7());
			}
			otherlv_53='Area'
			{
				newLeafNode(otherlv_53, grammarAccess.getDesignCommercialAccess().getAreaKeyword_3_8());
			}
			otherlv_54='for'
			{
				newLeafNode(otherlv_54, grammarAccess.getDesignCommercialAccess().getForKeyword_3_9());
			}
			(
				(
					lv_no_of_people_55_0=RULE_INT
					{
						newLeafNode(lv_no_of_people_55_0, grammarAccess.getDesignCommercialAccess().getNo_of_peopleINTTerminalRuleCall_3_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignCommercialRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_people",
							lv_no_of_people_55_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_56='People'
			{
				newLeafNode(otherlv_56, grammarAccess.getDesignCommercialAccess().getPeopleKeyword_3_11());
			}
			otherlv_57='in'
			{
				newLeafNode(otherlv_57, grammarAccess.getDesignCommercialAccess().getInKeyword_3_12());
			}
			otherlv_58='Region'
			{
				newLeafNode(otherlv_58, grammarAccess.getDesignCommercialAccess().getRegionKeyword_3_13());
			}
			(
				(
					lv_region_59_0=RULE_INT
					{
						newLeafNode(lv_region_59_0, grammarAccess.getDesignCommercialAccess().getRegionINTTerminalRuleCall_3_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignCommercialRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_59_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_60='WHAT'
			{
				newLeafNode(otherlv_60, grammarAccess.getDesignCommercialAccess().getWHATKeyword_4_0());
			}
			otherlv_61='WILL'
			{
				newLeafNode(otherlv_61, grammarAccess.getDesignCommercialAccess().getWILLKeyword_4_1());
			}
			otherlv_62='BE'
			{
				newLeafNode(otherlv_62, grammarAccess.getDesignCommercialAccess().getBEKeyword_4_2());
			}
			otherlv_63='THE'
			{
				newLeafNode(otherlv_63, grammarAccess.getDesignCommercialAccess().getTHEKeyword_4_3());
			}
			otherlv_64='DESIGN'
			{
				newLeafNode(otherlv_64, grammarAccess.getDesignCommercialAccess().getDESIGNKeyword_4_4());
			}
			otherlv_65='PLAN'
			{
				newLeafNode(otherlv_65, grammarAccess.getDesignCommercialAccess().getPLANKeyword_4_5());
			}
			otherlv_66='FOR'
			{
				newLeafNode(otherlv_66, grammarAccess.getDesignCommercialAccess().getFORKeyword_4_6());
			}
			otherlv_67='COMMERCIAL'
			{
				newLeafNode(otherlv_67, grammarAccess.getDesignCommercialAccess().getCOMMERCIALKeyword_4_7());
			}
			otherlv_68='AREA'
			{
				newLeafNode(otherlv_68, grammarAccess.getDesignCommercialAccess().getAREAKeyword_4_8());
			}
			otherlv_69='FOR'
			{
				newLeafNode(otherlv_69, grammarAccess.getDesignCommercialAccess().getFORKeyword_4_9());
			}
			(
				(
					lv_no_of_people_70_0=RULE_INT
					{
						newLeafNode(lv_no_of_people_70_0, grammarAccess.getDesignCommercialAccess().getNo_of_peopleINTTerminalRuleCall_4_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignCommercialRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_people",
							lv_no_of_people_70_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_71='PEOPLE'
			{
				newLeafNode(otherlv_71, grammarAccess.getDesignCommercialAccess().getPEOPLEKeyword_4_11());
			}
			otherlv_72='IN'
			{
				newLeafNode(otherlv_72, grammarAccess.getDesignCommercialAccess().getINKeyword_4_12());
			}
			otherlv_73='REGION'
			{
				newLeafNode(otherlv_73, grammarAccess.getDesignCommercialAccess().getREGIONKeyword_4_13());
			}
			(
				(
					lv_region_74_0=RULE_INT
					{
						newLeafNode(lv_region_74_0, grammarAccess.getDesignCommercialAccess().getRegionINTTerminalRuleCall_4_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignCommercialRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_74_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDesignEducational
entryRuleDesignEducational returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDesignEducationalRule()); }
	iv_ruleDesignEducational=ruleDesignEducational
	{ $current=$iv_ruleDesignEducational.current; }
	EOF;

// Rule DesignEducational
ruleDesignEducational returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='what'
			{
				newLeafNode(otherlv_0, grammarAccess.getDesignEducationalAccess().getWhatKeyword_0_0());
			}
			otherlv_1='will'
			{
				newLeafNode(otherlv_1, grammarAccess.getDesignEducationalAccess().getWillKeyword_0_1());
			}
			otherlv_2='be'
			{
				newLeafNode(otherlv_2, grammarAccess.getDesignEducationalAccess().getBeKeyword_0_2());
			}
			otherlv_3='the'
			{
				newLeafNode(otherlv_3, grammarAccess.getDesignEducationalAccess().getTheKeyword_0_3());
			}
			otherlv_4='design'
			{
				newLeafNode(otherlv_4, grammarAccess.getDesignEducationalAccess().getDesignKeyword_0_4());
			}
			otherlv_5='plan'
			{
				newLeafNode(otherlv_5, grammarAccess.getDesignEducationalAccess().getPlanKeyword_0_5());
			}
			otherlv_6='for'
			{
				newLeafNode(otherlv_6, grammarAccess.getDesignEducationalAccess().getForKeyword_0_6());
			}
			otherlv_7='educational'
			{
				newLeafNode(otherlv_7, grammarAccess.getDesignEducationalAccess().getEducationalKeyword_0_7());
			}
			otherlv_8='area'
			{
				newLeafNode(otherlv_8, grammarAccess.getDesignEducationalAccess().getAreaKeyword_0_8());
			}
			otherlv_9='for'
			{
				newLeafNode(otherlv_9, grammarAccess.getDesignEducationalAccess().getForKeyword_0_9());
			}
			(
				(
					lv_no_of_people_10_0=RULE_INT
					{
						newLeafNode(lv_no_of_people_10_0, grammarAccess.getDesignEducationalAccess().getNo_of_peopleINTTerminalRuleCall_0_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignEducationalRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_people",
							lv_no_of_people_10_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_11='people'
			{
				newLeafNode(otherlv_11, grammarAccess.getDesignEducationalAccess().getPeopleKeyword_0_11());
			}
			otherlv_12='in'
			{
				newLeafNode(otherlv_12, grammarAccess.getDesignEducationalAccess().getInKeyword_0_12());
			}
			otherlv_13='region'
			{
				newLeafNode(otherlv_13, grammarAccess.getDesignEducationalAccess().getRegionKeyword_0_13());
			}
			(
				(
					lv_region_14_0=RULE_INT
					{
						newLeafNode(lv_region_14_0, grammarAccess.getDesignEducationalAccess().getRegionINTTerminalRuleCall_0_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignEducationalRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_14_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_15='What'
			{
				newLeafNode(otherlv_15, grammarAccess.getDesignEducationalAccess().getWhatKeyword_1_0());
			}
			otherlv_16='will'
			{
				newLeafNode(otherlv_16, grammarAccess.getDesignEducationalAccess().getWillKeyword_1_1());
			}
			otherlv_17='be'
			{
				newLeafNode(otherlv_17, grammarAccess.getDesignEducationalAccess().getBeKeyword_1_2());
			}
			otherlv_18='the'
			{
				newLeafNode(otherlv_18, grammarAccess.getDesignEducationalAccess().getTheKeyword_1_3());
			}
			otherlv_19='design'
			{
				newLeafNode(otherlv_19, grammarAccess.getDesignEducationalAccess().getDesignKeyword_1_4());
			}
			otherlv_20='plan'
			{
				newLeafNode(otherlv_20, grammarAccess.getDesignEducationalAccess().getPlanKeyword_1_5());
			}
			otherlv_21='for'
			{
				newLeafNode(otherlv_21, grammarAccess.getDesignEducationalAccess().getForKeyword_1_6());
			}
			otherlv_22='educational'
			{
				newLeafNode(otherlv_22, grammarAccess.getDesignEducationalAccess().getEducationalKeyword_1_7());
			}
			otherlv_23='area'
			{
				newLeafNode(otherlv_23, grammarAccess.getDesignEducationalAccess().getAreaKeyword_1_8());
			}
			otherlv_24='for'
			{
				newLeafNode(otherlv_24, grammarAccess.getDesignEducationalAccess().getForKeyword_1_9());
			}
			(
				(
					lv_no_of_people_25_0=RULE_INT
					{
						newLeafNode(lv_no_of_people_25_0, grammarAccess.getDesignEducationalAccess().getNo_of_peopleINTTerminalRuleCall_1_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignEducationalRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_people",
							lv_no_of_people_25_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_26='people'
			{
				newLeafNode(otherlv_26, grammarAccess.getDesignEducationalAccess().getPeopleKeyword_1_11());
			}
			otherlv_27='in'
			{
				newLeafNode(otherlv_27, grammarAccess.getDesignEducationalAccess().getInKeyword_1_12());
			}
			otherlv_28='region'
			{
				newLeafNode(otherlv_28, grammarAccess.getDesignEducationalAccess().getRegionKeyword_1_13());
			}
			(
				(
					lv_region_29_0=RULE_INT
					{
						newLeafNode(lv_region_29_0, grammarAccess.getDesignEducationalAccess().getRegionINTTerminalRuleCall_1_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignEducationalRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_29_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_30='What'
			{
				newLeafNode(otherlv_30, grammarAccess.getDesignEducationalAccess().getWhatKeyword_2_0());
			}
			otherlv_31='Will'
			{
				newLeafNode(otherlv_31, grammarAccess.getDesignEducationalAccess().getWillKeyword_2_1());
			}
			otherlv_32='Be'
			{
				newLeafNode(otherlv_32, grammarAccess.getDesignEducationalAccess().getBeKeyword_2_2());
			}
			otherlv_33='The'
			{
				newLeafNode(otherlv_33, grammarAccess.getDesignEducationalAccess().getTheKeyword_2_3());
			}
			otherlv_34='Design'
			{
				newLeafNode(otherlv_34, grammarAccess.getDesignEducationalAccess().getDesignKeyword_2_4());
			}
			otherlv_35='Plan'
			{
				newLeafNode(otherlv_35, grammarAccess.getDesignEducationalAccess().getPlanKeyword_2_5());
			}
			otherlv_36='For'
			{
				newLeafNode(otherlv_36, grammarAccess.getDesignEducationalAccess().getForKeyword_2_6());
			}
			otherlv_37='Educational'
			{
				newLeafNode(otherlv_37, grammarAccess.getDesignEducationalAccess().getEducationalKeyword_2_7());
			}
			otherlv_38='Area'
			{
				newLeafNode(otherlv_38, grammarAccess.getDesignEducationalAccess().getAreaKeyword_2_8());
			}
			otherlv_39='For'
			{
				newLeafNode(otherlv_39, grammarAccess.getDesignEducationalAccess().getForKeyword_2_9());
			}
			(
				(
					lv_no_of_people_40_0=RULE_INT
					{
						newLeafNode(lv_no_of_people_40_0, grammarAccess.getDesignEducationalAccess().getNo_of_peopleINTTerminalRuleCall_2_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignEducationalRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_people",
							lv_no_of_people_40_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_41='People'
			{
				newLeafNode(otherlv_41, grammarAccess.getDesignEducationalAccess().getPeopleKeyword_2_11());
			}
			otherlv_42='In'
			{
				newLeafNode(otherlv_42, grammarAccess.getDesignEducationalAccess().getInKeyword_2_12());
			}
			otherlv_43='Region'
			{
				newLeafNode(otherlv_43, grammarAccess.getDesignEducationalAccess().getRegionKeyword_2_13());
			}
			(
				(
					lv_region_44_0=RULE_INT
					{
						newLeafNode(lv_region_44_0, grammarAccess.getDesignEducationalAccess().getRegionINTTerminalRuleCall_2_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignEducationalRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_44_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_45='What'
			{
				newLeafNode(otherlv_45, grammarAccess.getDesignEducationalAccess().getWhatKeyword_3_0());
			}
			otherlv_46='Will'
			{
				newLeafNode(otherlv_46, grammarAccess.getDesignEducationalAccess().getWillKeyword_3_1());
			}
			otherlv_47='be'
			{
				newLeafNode(otherlv_47, grammarAccess.getDesignEducationalAccess().getBeKeyword_3_2());
			}
			otherlv_48='the'
			{
				newLeafNode(otherlv_48, grammarAccess.getDesignEducationalAccess().getTheKeyword_3_3());
			}
			otherlv_49='Design'
			{
				newLeafNode(otherlv_49, grammarAccess.getDesignEducationalAccess().getDesignKeyword_3_4());
			}
			otherlv_50='Plan'
			{
				newLeafNode(otherlv_50, grammarAccess.getDesignEducationalAccess().getPlanKeyword_3_5());
			}
			otherlv_51='for'
			{
				newLeafNode(otherlv_51, grammarAccess.getDesignEducationalAccess().getForKeyword_3_6());
			}
			otherlv_52='Educational'
			{
				newLeafNode(otherlv_52, grammarAccess.getDesignEducationalAccess().getEducationalKeyword_3_7());
			}
			otherlv_53='Area'
			{
				newLeafNode(otherlv_53, grammarAccess.getDesignEducationalAccess().getAreaKeyword_3_8());
			}
			otherlv_54='for'
			{
				newLeafNode(otherlv_54, grammarAccess.getDesignEducationalAccess().getForKeyword_3_9());
			}
			(
				(
					lv_no_of_people_55_0=RULE_INT
					{
						newLeafNode(lv_no_of_people_55_0, grammarAccess.getDesignEducationalAccess().getNo_of_peopleINTTerminalRuleCall_3_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignEducationalRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_people",
							lv_no_of_people_55_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_56='People'
			{
				newLeafNode(otherlv_56, grammarAccess.getDesignEducationalAccess().getPeopleKeyword_3_11());
			}
			otherlv_57='in'
			{
				newLeafNode(otherlv_57, grammarAccess.getDesignEducationalAccess().getInKeyword_3_12());
			}
			otherlv_58='Region'
			{
				newLeafNode(otherlv_58, grammarAccess.getDesignEducationalAccess().getRegionKeyword_3_13());
			}
			(
				(
					lv_region_59_0=RULE_INT
					{
						newLeafNode(lv_region_59_0, grammarAccess.getDesignEducationalAccess().getRegionINTTerminalRuleCall_3_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignEducationalRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_59_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_60='WHAT'
			{
				newLeafNode(otherlv_60, grammarAccess.getDesignEducationalAccess().getWHATKeyword_4_0());
			}
			otherlv_61='WILL'
			{
				newLeafNode(otherlv_61, grammarAccess.getDesignEducationalAccess().getWILLKeyword_4_1());
			}
			otherlv_62='BE'
			{
				newLeafNode(otherlv_62, grammarAccess.getDesignEducationalAccess().getBEKeyword_4_2());
			}
			otherlv_63='THE'
			{
				newLeafNode(otherlv_63, grammarAccess.getDesignEducationalAccess().getTHEKeyword_4_3());
			}
			otherlv_64='DESIGN'
			{
				newLeafNode(otherlv_64, grammarAccess.getDesignEducationalAccess().getDESIGNKeyword_4_4());
			}
			otherlv_65='PLAN'
			{
				newLeafNode(otherlv_65, grammarAccess.getDesignEducationalAccess().getPLANKeyword_4_5());
			}
			otherlv_66='FOR'
			{
				newLeafNode(otherlv_66, grammarAccess.getDesignEducationalAccess().getFORKeyword_4_6());
			}
			otherlv_67='EDUCATIONAL'
			{
				newLeafNode(otherlv_67, grammarAccess.getDesignEducationalAccess().getEDUCATIONALKeyword_4_7());
			}
			otherlv_68='AREA'
			{
				newLeafNode(otherlv_68, grammarAccess.getDesignEducationalAccess().getAREAKeyword_4_8());
			}
			otherlv_69='FOR'
			{
				newLeafNode(otherlv_69, grammarAccess.getDesignEducationalAccess().getFORKeyword_4_9());
			}
			(
				(
					lv_no_of_people_70_0=RULE_INT
					{
						newLeafNode(lv_no_of_people_70_0, grammarAccess.getDesignEducationalAccess().getNo_of_peopleINTTerminalRuleCall_4_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignEducationalRule());
						}
						setWithLastConsumed(
							$current,
							"no_of_people",
							lv_no_of_people_70_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
			otherlv_71='PEOPLE'
			{
				newLeafNode(otherlv_71, grammarAccess.getDesignEducationalAccess().getPEOPLEKeyword_4_11());
			}
			otherlv_72='IN'
			{
				newLeafNode(otherlv_72, grammarAccess.getDesignEducationalAccess().getINKeyword_4_12());
			}
			otherlv_73='REGION'
			{
				newLeafNode(otherlv_73, grammarAccess.getDesignEducationalAccess().getREGIONKeyword_4_13());
			}
			(
				(
					lv_region_74_0=RULE_INT
					{
						newLeafNode(lv_region_74_0, grammarAccess.getDesignEducationalAccess().getRegionINTTerminalRuleCall_4_14_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignEducationalRule());
						}
						setWithLastConsumed(
							$current,
							"region",
							lv_region_74_0,
							"org.eclipse.xtext.xbase.Xbase.INT");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleXExpression
entryRuleXExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXExpressionRule()); }
	iv_ruleXExpression=ruleXExpression
	{ $current=$iv_ruleXExpression.current; }
	EOF;

// Rule XExpression
ruleXExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall());
	}
	this_XAssignment_0=ruleXAssignment
	{
		$current = $this_XAssignment_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleXAssignment
entryRuleXAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXAssignmentRule()); }
	iv_ruleXAssignment=ruleXAssignment
	{ $current=$iv_ruleXAssignment.current; }
	EOF;

// Rule XAssignment
ruleXAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXAssignmentRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
					}
					ruleFeatureCallID
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			{
				newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2());
			}
			ruleOpSingleAssign
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0());
					}
					lv_value_3_0=ruleXAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXAssignmentRule());
						}
						set(
							$current,
							"value",
							lv_value_3_0,
							"org.eclipse.xtext.xbase.Xbase.XAssignment");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0());
			}
			this_XOrExpression_4=ruleXOrExpression
			{
				$current = $this_XOrExpression_4.current;
				afterParserOrEnumRuleCall();
			}
			(
				(
					((
						(
						)
						(
							(
								ruleOpMultiAssign
							)
						)
					)
					)=>
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
									$current);
							}
						)
						(
							(
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getXAssignmentRule());
									}
								}
								{
									newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
								}
								ruleOpMultiAssign
								{
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0());
						}
						lv_rightOperand_7_0=ruleXAssignment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXAssignmentRule());
							}
							set(
								$current,
								"rightOperand",
								lv_rightOperand_7_0,
								"org.eclipse.xtext.xbase.Xbase.XAssignment");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
	)
;

// Entry rule entryRuleOpSingleAssign
entryRuleOpSingleAssign returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpSingleAssignRule()); }
	iv_ruleOpSingleAssign=ruleOpSingleAssign
	{ $current=$iv_ruleOpSingleAssign.current.getText(); }
	EOF;

// Rule OpSingleAssign
ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='='
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword());
	}
;

// Entry rule entryRuleOpMultiAssign
entryRuleOpMultiAssign returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpMultiAssignRule()); }
	iv_ruleOpMultiAssign=ruleOpMultiAssign
	{ $current=$iv_ruleOpMultiAssign.current.getText(); }
	EOF;

// Rule OpMultiAssign
ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='+='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0());
		}
		    |
		kw='-='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1());
		}
		    |
		kw='*='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2());
		}
		    |
		kw='/='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3());
		}
		    |
		kw='%='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4());
		}
		    |
		(
			kw='<'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_0());
			}
			kw='<'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_1());
			}
			kw='='
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_5_2());
			}
		)
		    |
		(
			kw='>'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0());
			}
			(
				kw='>'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1());
				}
			)?
			kw='>='
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_2());
			}
		)
	)
;

// Entry rule entryRuleXOrExpression
entryRuleXOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXOrExpressionRule()); }
	iv_ruleXOrExpression=ruleXOrExpression
	{ $current=$iv_ruleXOrExpression.current; }
	EOF;

// Rule XOrExpression
ruleXOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0());
		}
		this_XAndExpression_0=ruleXAndExpression
		{
			$current = $this_XAndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpOr
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getXOrExpressionRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
							}
							ruleOpOr
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleXAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.xtext.xbase.Xbase.XAndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpOr
entryRuleOpOr returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpOrRule()); }
	iv_ruleOpOr=ruleOpOr
	{ $current=$iv_ruleOpOr.current.getText(); }
	EOF;

// Rule OpOr
ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='||'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword());
	}
;

// Entry rule entryRuleXAndExpression
entryRuleXAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXAndExpressionRule()); }
	iv_ruleXAndExpression=ruleXAndExpression
	{ $current=$iv_ruleXAndExpression.current; }
	EOF;

// Rule XAndExpression
ruleXAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0());
		}
		this_XEqualityExpression_0=ruleXEqualityExpression
		{
			$current = $this_XEqualityExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpAnd
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getXAndExpressionRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
							}
							ruleOpAnd
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleXEqualityExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.xtext.xbase.Xbase.XEqualityExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpAnd
entryRuleOpAnd returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpAndRule()); }
	iv_ruleOpAnd=ruleOpAnd
	{ $current=$iv_ruleOpAnd.current.getText(); }
	EOF;

// Rule OpAnd
ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='&&'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword());
	}
;

// Entry rule entryRuleXEqualityExpression
entryRuleXEqualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXEqualityExpressionRule()); }
	iv_ruleXEqualityExpression=ruleXEqualityExpression
	{ $current=$iv_ruleXEqualityExpression.current; }
	EOF;

// Rule XEqualityExpression
ruleXEqualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0());
		}
		this_XRelationalExpression_0=ruleXRelationalExpression
		{
			$current = $this_XRelationalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpEquality
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getXEqualityExpressionRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
							}
							ruleOpEquality
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleXRelationalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.xtext.xbase.Xbase.XRelationalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpEquality
entryRuleOpEquality returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpEqualityRule()); }
	iv_ruleOpEquality=ruleOpEquality
	{ $current=$iv_ruleOpEquality.current.getText(); }
	EOF;

// Rule OpEquality
ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='=='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0());
		}
		    |
		kw='!='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1());
		}
		    |
		kw='==='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2());
		}
		    |
		kw='!=='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3());
		}
	)
;

// Entry rule entryRuleXRelationalExpression
entryRuleXRelationalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXRelationalExpressionRule()); }
	iv_ruleXRelationalExpression=ruleXRelationalExpression
	{ $current=$iv_ruleXRelationalExpression.current; }
	EOF;

// Rule XRelationalExpression
ruleXRelationalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0());
		}
		this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression
		{
			$current = $this_XOtherOperatorExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					((
						(
						)
						'instanceof'
					)
					)=>
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
									$current);
							}
						)
						otherlv_2='instanceof'
						{
							newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0());
						}
						lv_type_3_0=ruleJvmTypeReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
							}
							set(
								$current,
								"type",
								lv_type_3_0,
								"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					((
						(
						)
						(
							(
								ruleOpCompare
							)
						)
					)
					)=>
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
									$current);
							}
						)
						(
							(
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getXRelationalExpressionRule());
									}
								}
								{
									newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
								}
								ruleOpCompare
								{
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0());
						}
						lv_rightOperand_6_0=ruleXOtherOperatorExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
							}
							set(
								$current,
								"rightOperand",
								lv_rightOperand_6_0,
								"org.eclipse.xtext.xbase.Xbase.XOtherOperatorExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleOpCompare
entryRuleOpCompare returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpCompareRule()); }
	iv_ruleOpCompare=ruleOpCompare
	{ $current=$iv_ruleOpCompare.current.getText(); }
	EOF;

// Rule OpCompare
ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0());
		}
		    |
		(
			kw='<'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0());
			}
			kw='='
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1());
			}
		)
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3());
		}
	)
;

// Entry rule entryRuleXOtherOperatorExpression
entryRuleXOtherOperatorExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); }
	iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression
	{ $current=$iv_ruleXOtherOperatorExpression.current; }
	EOF;

// Rule XOtherOperatorExpression
ruleXOtherOperatorExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0());
		}
		this_XAdditiveExpression_0=ruleXAdditiveExpression
		{
			$current = $this_XAdditiveExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpOther
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
							}
							ruleOpOther
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleXAdditiveExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.xtext.xbase.Xbase.XAdditiveExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpOther
entryRuleOpOther returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpOtherRule()); }
	iv_ruleOpOther=ruleOpOther
	{ $current=$iv_ruleOpOther.current.getText(); }
	EOF;

// Rule OpOther
ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='->'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0());
		}
		    |
		kw='..<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1());
		}
		    |
		(
			kw='>'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0());
			}
			kw='..'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1());
			}
		)
		    |
		kw='..'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3());
		}
		    |
		kw='=>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4());
		}
		    |
		(
			kw='>'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0());
			}
			(
				(
					((
						'>'
						'>'
					)
					)=>
					(
						kw='>'
						{
							$current.merge(kw);
							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0());
						}
						kw='>'
						{
							$current.merge(kw);
							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1());
						}
					)
				)
				    |
				kw='>'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1());
				}
			)
		)
		    |
		(
			kw='<'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0());
			}
			(
				(
					((
						'<'
						'<'
					)
					)=>
					(
						kw='<'
						{
							$current.merge(kw);
							newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0());
						}
						kw='<'
						{
							$current.merge(kw);
							newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1());
						}
					)
				)
				    |
				kw='<'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1());
				}
				    |
				kw='=>'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_6_1_2());
				}
			)
		)
		    |
		kw='<>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7());
		}
		    |
		kw='?:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8());
		}
	)
;

// Entry rule entryRuleXAdditiveExpression
entryRuleXAdditiveExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); }
	iv_ruleXAdditiveExpression=ruleXAdditiveExpression
	{ $current=$iv_ruleXAdditiveExpression.current; }
	EOF;

// Rule XAdditiveExpression
ruleXAdditiveExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0());
		}
		this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression
		{
			$current = $this_XMultiplicativeExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpAdd
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
							}
							ruleOpAdd
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleXMultiplicativeExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.xtext.xbase.Xbase.XMultiplicativeExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpAdd
entryRuleOpAdd returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpAddRule()); }
	iv_ruleOpAdd=ruleOpAdd
	{ $current=$iv_ruleOpAdd.current.getText(); }
	EOF;

// Rule OpAdd
ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1());
		}
	)
;

// Entry rule entryRuleXMultiplicativeExpression
entryRuleXMultiplicativeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); }
	iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression
	{ $current=$iv_ruleXMultiplicativeExpression.current; }
	EOF;

// Rule XMultiplicativeExpression
ruleXMultiplicativeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0());
		}
		this_XUnaryOperation_0=ruleXUnaryOperation
		{
			$current = $this_XUnaryOperation_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpMulti
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
							}
							ruleOpMulti
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleXUnaryOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpMulti
entryRuleOpMulti returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpMultiRule()); }
	iv_ruleOpMulti=ruleOpMulti
	{ $current=$iv_ruleOpMulti.current.getText(); }
	EOF;

// Rule OpMulti
ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0());
		}
		    |
		kw='**'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2());
		}
		    |
		kw='%'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3());
		}
	)
;

// Entry rule entryRuleXUnaryOperation
entryRuleXUnaryOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXUnaryOperationRule()); }
	iv_ruleXUnaryOperation=ruleXUnaryOperation
	{ $current=$iv_ruleXUnaryOperation.current; }
	EOF;

// Rule XUnaryOperation
ruleXUnaryOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXUnaryOperationRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
					}
					ruleOpUnary
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0());
					}
					lv_operand_2_0=ruleXUnaryOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
						}
						set(
							$current,
							"operand",
							lv_operand_2_0,
							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1());
		}
		this_XCastedExpression_3=ruleXCastedExpression
		{
			$current = $this_XCastedExpression_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOpUnary
entryRuleOpUnary returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpUnaryRule()); }
	iv_ruleOpUnary=ruleOpUnary
	{ $current=$iv_ruleOpUnary.current.getText(); }
	EOF;

// Rule OpUnary
ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='!'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1());
		}
		    |
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2());
		}
	)
;

// Entry rule entryRuleXCastedExpression
entryRuleXCastedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXCastedExpressionRule()); }
	iv_ruleXCastedExpression=ruleXCastedExpression
	{ $current=$iv_ruleXCastedExpression.current; }
	EOF;

// Rule XCastedExpression
ruleXCastedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_0());
		}
		this_XPostfixOperation_0=ruleXPostfixOperation
		{
			$current = $this_XPostfixOperation_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					'as'
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='as'
					{
						newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0());
					}
					lv_type_3_0=ruleJvmTypeReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
						}
						set(
							$current,
							"type",
							lv_type_3_0,
							"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleXPostfixOperation
entryRuleXPostfixOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXPostfixOperationRule()); }
	iv_ruleXPostfixOperation=ruleXPostfixOperation
	{ $current=$iv_ruleXPostfixOperation.current; }
	EOF;

// Rule XPostfixOperation
ruleXPostfixOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXPostfixOperationAccess().getXMemberFeatureCallParserRuleCall_0());
		}
		this_XMemberFeatureCall_0=ruleXMemberFeatureCall
		{
			$current = $this_XMemberFeatureCall_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			((
				(
				)
				(
					(
						ruleOpPostfix
					)
				)
			)
			)=>
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_0_0(),
							$current);
					}
				)
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getXPostfixOperationRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_1_0());
						}
						ruleOpPostfix
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleOpPostfix
entryRuleOpPostfix returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpPostfixRule()); }
	iv_ruleOpPostfix=ruleOpPostfix
	{ $current=$iv_ruleOpPostfix.current.getText(); }
	EOF;

// Rule OpPostfix
ruleOpPostfix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='++'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0());
		}
		    |
		kw='--'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1());
		}
	)
;

// Entry rule entryRuleXMemberFeatureCall
entryRuleXMemberFeatureCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); }
	iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall
	{ $current=$iv_ruleXMemberFeatureCall.current; }
	EOF;

// Rule XMemberFeatureCall
ruleXMemberFeatureCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0());
		}
		this_XPrimaryExpression_0=ruleXPrimaryExpression
		{
			$current = $this_XPrimaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					((
						(
						)
						(
							'.'
							    |
							(
								(
									'::'
								)
							)
						)
						(
							(
								ruleFeatureCallID
							)
						)
						ruleOpSingleAssign
					)
					)=>
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
									$current);
							}
						)
						(
							otherlv_2='.'
							{
								newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0());
							}
							    |
							(
								(
									lv_explicitStatic_3_0='::'
									{
										newLeafNode(lv_explicitStatic_3_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
										}
										setWithLastConsumed($current, "explicitStatic", true, "::");
									}
								)
							)
						)
						(
							(
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
									}
								}
								{
									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0());
								}
								ruleFeatureCallID
								{
									afterParserOrEnumRuleCall();
								}
							)
						)
						{
							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3());
						}
						ruleOpSingleAssign
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0());
						}
						lv_value_6_0=ruleXAssignment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
							}
							set(
								$current,
								"value",
								lv_value_6_0,
								"org.eclipse.xtext.xbase.Xbase.XAssignment");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					((
						(
						)
						(
							'.'
							    |
							(
								(
									'?.'
								)
							)
							    |
							(
								(
									'::'
								)
							)
						)
					)
					)=>
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
									$current);
							}
						)
						(
							otherlv_8='.'
							{
								newLeafNode(otherlv_8, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
							}
							    |
							(
								(
									lv_nullSafe_9_0='?.'
									{
										newLeafNode(lv_nullSafe_9_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
										}
										setWithLastConsumed($current, "nullSafe", true, "?.");
									}
								)
							)
							    |
							(
								(
									lv_explicitStatic_10_0='::'
									{
										newLeafNode(lv_explicitStatic_10_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
										}
										setWithLastConsumed($current, "explicitStatic", true, "::");
									}
								)
							)
						)
					)
				)
				(
					otherlv_11='<'
					{
						newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0());
							}
							lv_typeArguments_12_0=ruleJvmArgumentTypeReference
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
								}
								add(
									$current,
									"typeArguments",
									lv_typeArguments_12_0,
									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_13=','
						{
							newLeafNode(otherlv_13, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0());
								}
								lv_typeArguments_14_0=ruleJvmArgumentTypeReference
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
									}
									add(
										$current,
										"typeArguments",
										lv_typeArguments_14_0,
										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
					otherlv_15='>'
					{
						newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
					}
				)?
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0());
						}
						ruleIdOrSuper
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						((
							'('
						)
						)=>
						(
							lv_explicitOperationCall_17_0='('
							{
								newLeafNode(lv_explicitOperationCall_17_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
								}
								setWithLastConsumed($current, "explicitOperationCall", true, "(");
							}
						)
					)
					(
						(
							((
								(
								)
								(
									(
										(
											ruleJvmFormalParameter
										)
									)
									(
										','
										(
											(
												ruleJvmFormalParameter
											)
										)
									)*
								)?
								(
									(
										'|'
									)
								)
							)
							)=>
							(
								{
									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0());
								}
								lv_memberCallArguments_18_0=ruleXShortClosure
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
									}
									add(
										$current,
										"memberCallArguments",
										lv_memberCallArguments_18_0,
										"org.eclipse.xtext.xbase.Xbase.XShortClosure");
									afterParserOrEnumRuleCall();
								}
							)
						)
						    |
						(
							(
								(
									{
										newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0());
									}
									lv_memberCallArguments_19_0=ruleXExpression
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
										}
										add(
											$current,
											"memberCallArguments",
											lv_memberCallArguments_19_0,
											"org.eclipse.xtext.xbase.Xbase.XExpression");
										afterParserOrEnumRuleCall();
									}
								)
							)
							(
								otherlv_20=','
								{
									newLeafNode(otherlv_20, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0());
										}
										lv_memberCallArguments_21_0=ruleXExpression
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
											}
											add(
												$current,
												"memberCallArguments",
												lv_memberCallArguments_21_0,
												"org.eclipse.xtext.xbase.Xbase.XExpression");
											afterParserOrEnumRuleCall();
										}
									)
								)
							)*
						)
					)?
					otherlv_22=')'
					{
						newLeafNode(otherlv_22, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
					}
				)?
				(
					((
						(
						)
						'['
					)
					)=>
					(
						{
							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0());
						}
						lv_memberCallArguments_23_0=ruleXClosure
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
							}
							add(
								$current,
								"memberCallArguments",
								lv_memberCallArguments_23_0,
								"org.eclipse.xtext.xbase.Xbase.XClosure");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)
		)*
	)
;

// Entry rule entryRuleXPrimaryExpression
entryRuleXPrimaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); }
	iv_ruleXPrimaryExpression=ruleXPrimaryExpression
	{ $current=$iv_ruleXPrimaryExpression.current; }
	EOF;

// Rule XPrimaryExpression
ruleXPrimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0());
		}
		this_XConstructorCall_0=ruleXConstructorCall
		{
			$current = $this_XConstructorCall_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1());
		}
		this_XBlockExpression_1=ruleXBlockExpression
		{
			$current = $this_XBlockExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2());
		}
		this_XSwitchExpression_2=ruleXSwitchExpression
		{
			$current = $this_XSwitchExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			((
				(
				)
				'synchronized'
				'('
			)
			)=>
			{
				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSynchronizedExpressionParserRuleCall_3());
			}
			this_XSynchronizedExpression_3=ruleXSynchronizedExpression
			{
				$current = $this_XSynchronizedExpression_3.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_4());
		}
		this_XFeatureCall_4=ruleXFeatureCall
		{
			$current = $this_XFeatureCall_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_5());
		}
		this_XLiteral_5=ruleXLiteral
		{
			$current = $this_XLiteral_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_6());
		}
		this_XIfExpression_6=ruleXIfExpression
		{
			$current = $this_XIfExpression_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			((
				(
				)
				'for'
				'('
				(
					(
						ruleJvmFormalParameter
					)
				)
				':'
			)
			)=>
			{
				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_7());
			}
			this_XForLoopExpression_7=ruleXForLoopExpression
			{
				$current = $this_XForLoopExpression_7.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBasicForLoopExpressionParserRuleCall_8());
		}
		this_XBasicForLoopExpression_8=ruleXBasicForLoopExpression
		{
			$current = $this_XBasicForLoopExpression_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_9());
		}
		this_XWhileExpression_9=ruleXWhileExpression
		{
			$current = $this_XWhileExpression_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_10());
		}
		this_XDoWhileExpression_10=ruleXDoWhileExpression
		{
			$current = $this_XDoWhileExpression_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_11());
		}
		this_XThrowExpression_11=ruleXThrowExpression
		{
			$current = $this_XThrowExpression_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_12());
		}
		this_XReturnExpression_12=ruleXReturnExpression
		{
			$current = $this_XReturnExpression_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_13());
		}
		this_XTryCatchFinallyExpression_13=ruleXTryCatchFinallyExpression
		{
			$current = $this_XTryCatchFinallyExpression_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_14());
		}
		this_XParenthesizedExpression_14=ruleXParenthesizedExpression
		{
			$current = $this_XParenthesizedExpression_14.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleXLiteral
entryRuleXLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXLiteralRule()); }
	iv_ruleXLiteral=ruleXLiteral
	{ $current=$iv_ruleXLiteral.current; }
	EOF;

// Rule XLiteral
ruleXLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0());
		}
		this_XCollectionLiteral_0=ruleXCollectionLiteral
		{
			$current = $this_XCollectionLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			((
				(
				)
				'['
			)
			)=>
			{
				newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1());
			}
			this_XClosure_1=ruleXClosure
			{
				$current = $this_XClosure_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2());
		}
		this_XBooleanLiteral_2=ruleXBooleanLiteral
		{
			$current = $this_XBooleanLiteral_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3());
		}
		this_XNumberLiteral_3=ruleXNumberLiteral
		{
			$current = $this_XNumberLiteral_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4());
		}
		this_XNullLiteral_4=ruleXNullLiteral
		{
			$current = $this_XNullLiteral_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5());
		}
		this_XStringLiteral_5=ruleXStringLiteral
		{
			$current = $this_XStringLiteral_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6());
		}
		this_XTypeLiteral_6=ruleXTypeLiteral
		{
			$current = $this_XTypeLiteral_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleXCollectionLiteral
entryRuleXCollectionLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXCollectionLiteralRule()); }
	iv_ruleXCollectionLiteral=ruleXCollectionLiteral
	{ $current=$iv_ruleXCollectionLiteral.current; }
	EOF;

// Rule XCollectionLiteral
ruleXCollectionLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0());
		}
		this_XSetLiteral_0=ruleXSetLiteral
		{
			$current = $this_XSetLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1());
		}
		this_XListLiteral_1=ruleXListLiteral
		{
			$current = $this_XListLiteral_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleXSetLiteral
entryRuleXSetLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXSetLiteralRule()); }
	iv_ruleXSetLiteral=ruleXSetLiteral
	{ $current=$iv_ruleXSetLiteral.current; }
	EOF;

// Rule XSetLiteral
ruleXSetLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
					$current);
			}
		)
		otherlv_1='#'
		{
			newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
					}
					lv_elements_3_0=ruleXExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_0,
							"org.eclipse.xtext.xbase.Xbase.XExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
						}
						lv_elements_5_0=ruleXExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
							}
							add(
								$current,
								"elements",
								lv_elements_5_0,
								"org.eclipse.xtext.xbase.Xbase.XExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleXListLiteral
entryRuleXListLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXListLiteralRule()); }
	iv_ruleXListLiteral=ruleXListLiteral
	{ $current=$iv_ruleXListLiteral.current; }
	EOF;

// Rule XListLiteral
ruleXListLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
					$current);
			}
		)
		otherlv_1='#'
		{
			newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
		}
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
					}
					lv_elements_3_0=ruleXExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXListLiteralRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_0,
							"org.eclipse.xtext.xbase.Xbase.XExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
						}
						lv_elements_5_0=ruleXExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXListLiteralRule());
							}
							add(
								$current,
								"elements",
								lv_elements_5_0,
								"org.eclipse.xtext.xbase.Xbase.XExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleXClosure
entryRuleXClosure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXClosureRule()); }
	iv_ruleXClosure=ruleXClosure
	{ $current=$iv_ruleXClosure.current; }
	EOF;

// Rule XClosure
ruleXClosure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				(
				)
				'['
			)
			)=>
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
							$current);
					}
				)
				otherlv_1='['
				{
					newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
				}
			)
		)
		(
			((
				(
					(
						(
							ruleJvmFormalParameter
						)
					)
					(
						','
						(
							(
								ruleJvmFormalParameter
							)
						)
					)*
				)?
				(
					(
						'|'
					)
				)
			)
			)=>
			(
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0());
							}
							lv_declaredFormalParameters_2_0=ruleJvmFormalParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXClosureRule());
								}
								add(
									$current,
									"declaredFormalParameters",
									lv_declaredFormalParameters_2_0,
									"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_3=','
						{
							newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0());
								}
								lv_declaredFormalParameters_4_0=ruleJvmFormalParameter
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getXClosureRule());
									}
									add(
										$current,
										"declaredFormalParameters",
										lv_declaredFormalParameters_4_0,
										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
				(
					(
						lv_explicitSyntax_5_0='|'
						{
							newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getXClosureRule());
							}
							setWithLastConsumed($current, "explicitSyntax", true, "|");
						}
					)
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0());
				}
				lv_expression_6_0=ruleXExpressionInClosure
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXClosureRule());
					}
					set(
						$current,
						"expression",
						lv_expression_6_0,
						"org.eclipse.xtext.xbase.Xbase.XExpressionInClosure");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=']'
		{
			newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleXExpressionInClosure
entryRuleXExpressionInClosure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXExpressionInClosureRule()); }
	iv_ruleXExpressionInClosure=ruleXExpressionInClosure
	{ $current=$iv_ruleXExpressionInClosure.current; }
	EOF;

// Rule XExpressionInClosure
ruleXExpressionInClosure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0());
					}
					lv_expressions_1_0=ruleXExpressionOrVarDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
						}
						add(
							$current,
							"expressions",
							lv_expressions_1_0,
							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=';'
				{
					newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
				}
			)?
		)*
	)
;

// Entry rule entryRuleXShortClosure
entryRuleXShortClosure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXShortClosureRule()); }
	iv_ruleXShortClosure=ruleXShortClosure
	{ $current=$iv_ruleXShortClosure.current; }
	EOF;

// Rule XShortClosure
ruleXShortClosure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				(
				)
				(
					(
						(
							ruleJvmFormalParameter
						)
					)
					(
						','
						(
							(
								ruleJvmFormalParameter
							)
						)
					)*
				)?
				(
					(
						'|'
					)
				)
			)
			)=>
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
							$current);
					}
				)
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0());
							}
							lv_declaredFormalParameters_1_0=ruleJvmFormalParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXShortClosureRule());
								}
								add(
									$current,
									"declaredFormalParameters",
									lv_declaredFormalParameters_1_0,
									"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_2=','
						{
							newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0());
								}
								lv_declaredFormalParameters_3_0=ruleJvmFormalParameter
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getXShortClosureRule());
									}
									add(
										$current,
										"declaredFormalParameters",
										lv_declaredFormalParameters_3_0,
										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
				(
					(
						lv_explicitSyntax_4_0='|'
						{
							newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getXShortClosureRule());
							}
							setWithLastConsumed($current, "explicitSyntax", true, "|");
						}
					)
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0());
				}
				lv_expression_5_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXShortClosureRule());
					}
					set(
						$current,
						"expression",
						lv_expression_5_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXParenthesizedExpression
entryRuleXParenthesizedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); }
	iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression
	{ $current=$iv_ruleXParenthesizedExpression.current; }
	EOF;

// Rule XParenthesizedExpression
ruleXParenthesizedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1());
		}
		this_XExpression_1=ruleXExpression
		{
			$current = $this_XExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleXIfExpression
entryRuleXIfExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXIfExpressionRule()); }
	iv_ruleXIfExpression=ruleXIfExpression
	{ $current=$iv_ruleXIfExpression.current; }
	EOF;

// Rule XIfExpression
ruleXIfExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='if'
		{
			newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0());
				}
				lv_if_3_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
					}
					set(
						$current,
						"if",
						lv_if_3_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0());
				}
				lv_then_5_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
					}
					set(
						$current,
						"then",
						lv_then_5_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				('else')=>
				otherlv_6='else'
				{
					newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0());
					}
					lv_else_7_0=ruleXExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
						}
						set(
							$current,
							"else",
							lv_else_7_0,
							"org.eclipse.xtext.xbase.Xbase.XExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleXSwitchExpression
entryRuleXSwitchExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXSwitchExpressionRule()); }
	iv_ruleXSwitchExpression=ruleXSwitchExpression
	{ $current=$iv_ruleXSwitchExpression.current; }
	EOF;

// Rule XSwitchExpression
ruleXSwitchExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='switch'
		{
			newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
		}
		(
			(
				(
					((
						'('
						(
							(
								ruleJvmFormalParameter
							)
						)
						':'
					)
					)=>
					(
						otherlv_2='('
						{
							newLeafNode(otherlv_2, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_0_0_0_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0());
								}
								lv_declaredParam_3_0=ruleJvmFormalParameter
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
									}
									set(
										$current,
										"declaredParam",
										lv_declaredParam_3_0,
										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
									afterParserOrEnumRuleCall();
								}
							)
						)
						otherlv_4=':'
						{
							newLeafNode(otherlv_4, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_2());
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0());
						}
						lv_switch_5_0=ruleXExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
							}
							set(
								$current,
								"switch",
								lv_switch_5_0,
								"org.eclipse.xtext.xbase.Xbase.XExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_0_2());
				}
			)
			    |
			(
				(
					((
						(
							(
								ruleJvmFormalParameter
							)
						)
						':'
					)
					)=>
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0());
								}
								lv_declaredParam_7_0=ruleJvmFormalParameter
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
									}
									set(
										$current,
										"declaredParam",
										lv_declaredParam_7_0,
										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
									afterParserOrEnumRuleCall();
								}
							)
						)
						otherlv_8=':'
						{
							newLeafNode(otherlv_8, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_1());
						}
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0());
						}
						lv_switch_9_0=ruleXExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
							}
							set(
								$current,
								"switch",
								lv_switch_9_0,
								"org.eclipse.xtext.xbase.Xbase.XExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		otherlv_10='{'
		{
			newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0());
				}
				lv_cases_11_0=ruleXCasePart
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
					}
					add(
						$current,
						"cases",
						lv_cases_11_0,
						"org.eclipse.xtext.xbase.Xbase.XCasePart");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_12='default'
			{
				newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
			}
			otherlv_13=':'
			{
				newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0());
					}
					lv_default_14_0=ruleXExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
						}
						set(
							$current,
							"default",
							lv_default_14_0,
							"org.eclipse.xtext.xbase.Xbase.XExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleXCasePart
entryRuleXCasePart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXCasePartRule()); }
	iv_ruleXCasePart=ruleXCasePart
	{ $current=$iv_ruleXCasePart.current; }
	EOF;

// Rule XCasePart
ruleXCasePart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXCasePartAccess().getXCasePartAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_1_0());
				}
				lv_typeGuard_1_0=ruleJvmTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXCasePartRule());
					}
					set(
						$current,
						"typeGuard",
						lv_typeGuard_1_0,
						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_2='case'
			{
				newLeafNode(otherlv_2, grammarAccess.getXCasePartAccess().getCaseKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_2_1_0());
					}
					lv_case_3_0=ruleXExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXCasePartRule());
						}
						set(
							$current,
							"case",
							lv_case_3_0,
							"org.eclipse.xtext.xbase.Xbase.XExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				otherlv_4=':'
				{
					newLeafNode(otherlv_4, grammarAccess.getXCasePartAccess().getColonKeyword_3_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0_1_0());
						}
						lv_then_5_0=ruleXExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXCasePartRule());
							}
							set(
								$current,
								"then",
								lv_then_5_0,
								"org.eclipse.xtext.xbase.Xbase.XExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					lv_fallThrough_6_0=','
					{
						newLeafNode(lv_fallThrough_6_0, grammarAccess.getXCasePartAccess().getFallThroughCommaKeyword_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXCasePartRule());
						}
						setWithLastConsumed($current, "fallThrough", true, ",");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleXForLoopExpression
entryRuleXForLoopExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXForLoopExpressionRule()); }
	iv_ruleXForLoopExpression=ruleXForLoopExpression
	{ $current=$iv_ruleXForLoopExpression.current; }
	EOF;

// Rule XForLoopExpression
ruleXForLoopExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				(
				)
				'for'
				'('
				(
					(
						ruleJvmFormalParameter
					)
				)
				':'
			)
			)=>
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0_0_0(),
							$current);
					}
				)
				otherlv_1='for'
				{
					newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_0_0_1());
				}
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0());
						}
						lv_declaredParam_3_0=ruleJvmFormalParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
							}
							set(
								$current,
								"declaredParam",
								lv_declaredParam_3_0,
								"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4=':'
				{
					newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_0_0_4());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_1_0());
				}
				lv_forExpression_5_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
					}
					set(
						$current,
						"forExpression",
						lv_forExpression_5_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_3_0());
				}
				lv_eachExpression_7_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
					}
					set(
						$current,
						"eachExpression",
						lv_eachExpression_7_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXBasicForLoopExpression
entryRuleXBasicForLoopExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXBasicForLoopExpressionRule()); }
	iv_ruleXBasicForLoopExpression=ruleXBasicForLoopExpression
	{ $current=$iv_ruleXBasicForLoopExpression.current; }
	EOF;

// Rule XBasicForLoopExpression
ruleXBasicForLoopExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXBasicForLoopExpressionAccess().getXBasicForLoopExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='for'
		{
			newLeafNode(otherlv_1, grammarAccess.getXBasicForLoopExpressionAccess().getForKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getXBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0());
					}
					lv_initExpressions_3_0=ruleXExpressionOrVarDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
						}
						add(
							$current,
							"initExpressions",
							lv_initExpressions_3_0,
							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0());
						}
						lv_initExpressions_5_0=ruleXExpressionOrVarDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
							}
							add(
								$current,
								"initExpressions",
								lv_initExpressions_5_0,
								"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionXExpressionParserRuleCall_5_0());
				}
				lv_expression_7_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_7_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_6());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_0_0());
					}
					lv_updateExpressions_9_0=ruleXExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
						}
						add(
							$current,
							"updateExpressions",
							lv_updateExpressions_9_0,
							"org.eclipse.xtext.xbase.Xbase.XExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_7_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_1_1_0());
						}
						lv_updateExpressions_11_0=ruleXExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
							}
							add(
								$current,
								"updateExpressions",
								lv_updateExpressions_11_0,
								"org.eclipse.xtext.xbase.Xbase.XExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_12=')'
		{
			newLeafNode(otherlv_12, grammarAccess.getXBasicForLoopExpressionAccess().getRightParenthesisKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_9_0());
				}
				lv_eachExpression_13_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
					}
					set(
						$current,
						"eachExpression",
						lv_eachExpression_13_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXWhileExpression
entryRuleXWhileExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXWhileExpressionRule()); }
	iv_ruleXWhileExpression=ruleXWhileExpression
	{ $current=$iv_ruleXWhileExpression.current; }
	EOF;

// Rule XWhileExpression
ruleXWhileExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='while'
		{
			newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0());
				}
				lv_predicate_3_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
					}
					set(
						$current,
						"predicate",
						lv_predicate_3_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0());
				}
				lv_body_5_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
					}
					set(
						$current,
						"body",
						lv_body_5_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXDoWhileExpression
entryRuleXDoWhileExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); }
	iv_ruleXDoWhileExpression=ruleXDoWhileExpression
	{ $current=$iv_ruleXDoWhileExpression.current; }
	EOF;

// Rule XDoWhileExpression
ruleXDoWhileExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='do'
		{
			newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0());
				}
				lv_body_2_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
					}
					set(
						$current,
						"body",
						lv_body_2_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='while'
		{
			newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0());
				}
				lv_predicate_5_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
					}
					set(
						$current,
						"predicate",
						lv_predicate_5_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleXBlockExpression
entryRuleXBlockExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXBlockExpressionRule()); }
	iv_ruleXBlockExpression=ruleXBlockExpression
	{ $current=$iv_ruleXBlockExpression.current; }
	EOF;

// Rule XBlockExpression
ruleXBlockExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_2_0_0());
					}
					lv_expressions_2_0=ruleXExpressionOrVarDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
						}
						add(
							$current,
							"expressions",
							lv_expressions_2_0,
							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=';'
				{
					newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
				}
			)?
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleXExpressionOrVarDeclaration
entryRuleXExpressionOrVarDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationRule()); }
	iv_ruleXExpressionOrVarDeclaration=ruleXExpressionOrVarDeclaration
	{ $current=$iv_ruleXExpressionOrVarDeclaration.current; }
	EOF;

// Rule XExpressionOrVarDeclaration
ruleXExpressionOrVarDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXVariableDeclarationParserRuleCall_0());
		}
		this_XVariableDeclaration_0=ruleXVariableDeclaration
		{
			$current = $this_XVariableDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXExpressionParserRuleCall_1());
		}
		this_XExpression_1=ruleXExpression
		{
			$current = $this_XExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleXVariableDeclaration
entryRuleXVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXVariableDeclarationRule()); }
	iv_ruleXVariableDeclaration=ruleXVariableDeclaration
	{ $current=$iv_ruleXVariableDeclaration.current; }
	EOF;

// Rule XVariableDeclaration
ruleXVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_writeable_1_0='var'
					{
						newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXVariableDeclarationRule());
						}
						setWithLastConsumed($current, "writeable", true, "var");
					}
				)
			)
			    |
			otherlv_2='val'
			{
				newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1());
			}
		)
		(
			(
				((
					(
						(
							ruleJvmTypeReference
						)
					)
					(
						(
							ruleValidID
						)
					)
				)
				)=>
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0());
							}
							lv_type_3_0=ruleJvmTypeReference
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
								}
								set(
									$current,
									"type",
									lv_type_3_0,
									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0());
							}
							lv_name_4_0=ruleValidID
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
								}
								set(
									$current,
									"name",
									lv_name_4_0,
									"org.eclipse.xtext.xbase.Xtype.ValidID");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0());
					}
					lv_name_5_0=ruleValidID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
						}
						set(
							$current,
							"name",
							lv_name_5_0,
							"org.eclipse.xtext.xbase.Xtype.ValidID");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_6='='
			{
				newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0());
					}
					lv_right_7_0=ruleXExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
						}
						set(
							$current,
							"right",
							lv_right_7_0,
							"org.eclipse.xtext.xbase.Xbase.XExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleJvmFormalParameter
entryRuleJvmFormalParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJvmFormalParameterRule()); }
	iv_ruleJvmFormalParameter=ruleJvmFormalParameter
	{ $current=$iv_ruleJvmFormalParameter.current; }
	EOF;

// Rule JvmFormalParameter
ruleJvmFormalParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
				}
				lv_parameterType_0_0=ruleJvmTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
					}
					set(
						$current,
						"parameterType",
						lv_parameterType_0_0,
						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleValidID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.xbase.Xtype.ValidID");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFullJvmFormalParameter
entryRuleFullJvmFormalParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); }
	iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter
	{ $current=$iv_ruleFullJvmFormalParameter.current; }
	EOF;

// Rule FullJvmFormalParameter
ruleFullJvmFormalParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
				}
				lv_parameterType_0_0=ruleJvmTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
					}
					set(
						$current,
						"parameterType",
						lv_parameterType_0_0,
						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleValidID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.xbase.Xtype.ValidID");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXFeatureCall
entryRuleXFeatureCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXFeatureCallRule()); }
	iv_ruleXFeatureCall=ruleXFeatureCall
	{ $current=$iv_ruleXFeatureCall.current; }
	EOF;

// Rule XFeatureCall
ruleXFeatureCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
					$current);
			}
		)
		(
			otherlv_1='<'
			{
				newLeafNode(otherlv_1, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
					}
					lv_typeArguments_2_0=ruleJvmArgumentTypeReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
						}
						add(
							$current,
							"typeArguments",
							lv_typeArguments_2_0,
							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
						}
						lv_typeArguments_4_0=ruleJvmArgumentTypeReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
							}
							add(
								$current,
								"typeArguments",
								lv_typeArguments_4_0,
								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='>'
			{
				newLeafNode(otherlv_5, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXFeatureCallRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0());
				}
				ruleIdOrSuper
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				((
					'('
				)
				)=>
				(
					lv_explicitOperationCall_7_0='('
					{
						newLeafNode(lv_explicitOperationCall_7_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXFeatureCallRule());
						}
						setWithLastConsumed($current, "explicitOperationCall", true, "(");
					}
				)
			)
			(
				(
					((
						(
						)
						(
							(
								(
									ruleJvmFormalParameter
								)
							)
							(
								','
								(
									(
										ruleJvmFormalParameter
									)
								)
							)*
						)?
						(
							(
								'|'
							)
						)
					)
					)=>
					(
						{
							newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0());
						}
						lv_featureCallArguments_8_0=ruleXShortClosure
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
							}
							add(
								$current,
								"featureCallArguments",
								lv_featureCallArguments_8_0,
								"org.eclipse.xtext.xbase.Xbase.XShortClosure");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0());
							}
							lv_featureCallArguments_9_0=ruleXExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
								}
								add(
									$current,
									"featureCallArguments",
									lv_featureCallArguments_9_0,
									"org.eclipse.xtext.xbase.Xbase.XExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_10=','
						{
							newLeafNode(otherlv_10, grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0());
								}
								lv_featureCallArguments_11_0=ruleXExpression
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
									}
									add(
										$current,
										"featureCallArguments",
										lv_featureCallArguments_11_0,
										"org.eclipse.xtext.xbase.Xbase.XExpression");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)
			)?
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2());
			}
		)?
		(
			((
				(
				)
				'['
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0());
				}
				lv_featureCallArguments_13_0=ruleXClosure
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
					}
					add(
						$current,
						"featureCallArguments",
						lv_featureCallArguments_13_0,
						"org.eclipse.xtext.xbase.Xbase.XClosure");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleFeatureCallID
entryRuleFeatureCallID returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFeatureCallIDRule()); }
	iv_ruleFeatureCallID=ruleFeatureCallID
	{ $current=$iv_ruleFeatureCallID.current.getText(); }
	EOF;

// Rule FeatureCallID
ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0());
		}
		this_ValidID_0=ruleValidID
		{
			$current.merge(this_ValidID_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		kw='extends'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1());
		}
		    |
		kw='static'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2());
		}
		    |
		kw='import'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getImportKeyword_3());
		}
		    |
		kw='extension'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4());
		}
	)
;

// Entry rule entryRuleIdOrSuper
entryRuleIdOrSuper returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIdOrSuperRule()); }
	iv_ruleIdOrSuper=ruleIdOrSuper
	{ $current=$iv_ruleIdOrSuper.current.getText(); }
	EOF;

// Rule IdOrSuper
ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0());
		}
		this_FeatureCallID_0=ruleFeatureCallID
		{
			$current.merge(this_FeatureCallID_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		kw='super'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1());
		}
	)
;

// Entry rule entryRuleXConstructorCall
entryRuleXConstructorCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXConstructorCallRule()); }
	iv_ruleXConstructorCall=ruleXConstructorCall
	{ $current=$iv_ruleXConstructorCall.current; }
	EOF;

// Rule XConstructorCall
ruleXConstructorCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
					$current);
			}
		)
		otherlv_1='new'
		{
			newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXConstructorCallRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				('<')=>
				otherlv_3='<'
				{
					newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0());
					}
					lv_typeArguments_4_0=ruleJvmArgumentTypeReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
						}
						add(
							$current,
							"typeArguments",
							lv_typeArguments_4_0,
							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0());
						}
						lv_typeArguments_6_0=ruleJvmArgumentTypeReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
							}
							add(
								$current,
								"typeArguments",
								lv_typeArguments_6_0,
								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_7='>'
			{
				newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
			}
		)?
		(
			(
				((
					'('
				)
				)=>
				(
					lv_explicitConstructorCall_8_0='('
					{
						newLeafNode(lv_explicitConstructorCall_8_0, grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXConstructorCallRule());
						}
						setWithLastConsumed($current, "explicitConstructorCall", true, "(");
					}
				)
			)
			(
				(
					((
						(
						)
						(
							(
								(
									ruleJvmFormalParameter
								)
							)
							(
								','
								(
									(
										ruleJvmFormalParameter
									)
								)
							)*
						)?
						(
							(
								'|'
							)
						)
					)
					)=>
					(
						{
							newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0());
						}
						lv_arguments_9_0=ruleXShortClosure
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_9_0,
								"org.eclipse.xtext.xbase.Xbase.XShortClosure");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0());
							}
							lv_arguments_10_0=ruleXExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
								}
								add(
									$current,
									"arguments",
									lv_arguments_10_0,
									"org.eclipse.xtext.xbase.Xbase.XExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_11=','
						{
							newLeafNode(otherlv_11, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0());
								}
								lv_arguments_12_0=ruleXExpression
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
									}
									add(
										$current,
										"arguments",
										lv_arguments_12_0,
										"org.eclipse.xtext.xbase.Xbase.XExpression");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)
			)?
			otherlv_13=')'
			{
				newLeafNode(otherlv_13, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
			}
		)?
		(
			((
				(
				)
				'['
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0());
				}
				lv_arguments_14_0=ruleXClosure
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_14_0,
						"org.eclipse.xtext.xbase.Xbase.XClosure");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleXBooleanLiteral
entryRuleXBooleanLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXBooleanLiteralRule()); }
	iv_ruleXBooleanLiteral=ruleXBooleanLiteral
	{ $current=$iv_ruleXBooleanLiteral.current; }
	EOF;

// Rule XBooleanLiteral
ruleXBooleanLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
					$current);
			}
		)
		(
			otherlv_1='false'
			{
				newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
			}
			    |
			(
				(
					lv_isTrue_2_0='true'
					{
						newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXBooleanLiteralRule());
						}
						setWithLastConsumed($current, "isTrue", true, "true");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleXNullLiteral
entryRuleXNullLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXNullLiteralRule()); }
	iv_ruleXNullLiteral=ruleXNullLiteral
	{ $current=$iv_ruleXNullLiteral.current; }
	EOF;

// Rule XNullLiteral
ruleXNullLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
					$current);
			}
		)
		otherlv_1='null'
		{
			newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
		}
	)
;

// Entry rule entryRuleXNumberLiteral
entryRuleXNumberLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXNumberLiteralRule()); }
	iv_ruleXNumberLiteral=ruleXNumberLiteral
	{ $current=$iv_ruleXNumberLiteral.current; }
	EOF;

// Rule XNumberLiteral
ruleXNumberLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0());
				}
				lv_value_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.xbase.Xbase.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXStringLiteral
entryRuleXStringLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXStringLiteralRule()); }
	iv_ruleXStringLiteral=ruleXStringLiteral
	{ $current=$iv_ruleXStringLiteral.current; }
	EOF;

// Rule XStringLiteral
ruleXStringLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
					$current);
			}
		)
		(
			(
				lv_value_1_0=RULE_STRING
				{
					newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXStringLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.xbase.Xtype.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleXTypeLiteral
entryRuleXTypeLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXTypeLiteralRule()); }
	iv_ruleXTypeLiteral=ruleXTypeLiteral
	{ $current=$iv_ruleXTypeLiteral.current; }
	EOF;

// Rule XTypeLiteral
ruleXTypeLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
					$current);
			}
		)
		otherlv_1='typeof'
		{
			newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXTypeLiteralRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0());
				}
				lv_arrayDimensions_4_0=ruleArrayBrackets
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXTypeLiteralRule());
					}
					add(
						$current,
						"arrayDimensions",
						lv_arrayDimensions_4_0,
						"org.eclipse.xtext.xbase.Xtype.ArrayBrackets");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleXThrowExpression
entryRuleXThrowExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXThrowExpressionRule()); }
	iv_ruleXThrowExpression=ruleXThrowExpression
	{ $current=$iv_ruleXThrowExpression.current; }
	EOF;

// Rule XThrowExpression
ruleXThrowExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='throw'
		{
			newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXReturnExpression
entryRuleXReturnExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXReturnExpressionRule()); }
	iv_ruleXReturnExpression=ruleXReturnExpression
	{ $current=$iv_ruleXReturnExpression.current; }
	EOF;

// Rule XReturnExpression
ruleXReturnExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='return'
		{
			newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
		}
		(
			('extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING)=>
			(
				{
					newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleXTryCatchFinallyExpression
entryRuleXTryCatchFinallyExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); }
	iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression
	{ $current=$iv_ruleXTryCatchFinallyExpression.current; }
	EOF;

// Rule XTryCatchFinallyExpression
ruleXTryCatchFinallyExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='try'
		{
			newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					('catch')=>
					(
						{
							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0());
						}
						lv_catchClauses_3_0=ruleXCatchClause
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
							}
							add(
								$current,
								"catchClauses",
								lv_catchClauses_3_0,
								"org.eclipse.xtext.xbase.Xbase.XCatchClause");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				(
					(
						('finally')=>
						otherlv_4='finally'
						{
							newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0());
							}
							lv_finallyExpression_5_0=ruleXExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
								}
								set(
									$current,
									"finallyExpression",
									lv_finallyExpression_5_0,
									"org.eclipse.xtext.xbase.Xbase.XExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
			    |
			(
				otherlv_6='finally'
				{
					newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0());
						}
						lv_finallyExpression_7_0=ruleXExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
							}
							set(
								$current,
								"finallyExpression",
								lv_finallyExpression_7_0,
								"org.eclipse.xtext.xbase.Xbase.XExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleXSynchronizedExpression
entryRuleXSynchronizedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXSynchronizedExpressionRule()); }
	iv_ruleXSynchronizedExpression=ruleXSynchronizedExpression
	{ $current=$iv_ruleXSynchronizedExpression.current; }
	EOF;

// Rule XSynchronizedExpression
ruleXSynchronizedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				(
				)
				'synchronized'
				'('
			)
			)=>
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getXSynchronizedExpressionAccess().getXSynchronizedExpressionAction_0_0_0(),
							$current);
					}
				)
				otherlv_1='synchronized'
				{
					newLeafNode(otherlv_1, grammarAccess.getXSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1());
				}
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getXSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getParamXExpressionParserRuleCall_1_0());
				}
				lv_param_3_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
					}
					set(
						$current,
						"param",
						lv_param_3_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getXSynchronizedExpressionAccess().getRightParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getExpressionXExpressionParserRuleCall_3_0());
				}
				lv_expression_5_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_5_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXCatchClause
entryRuleXCatchClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXCatchClauseRule()); }
	iv_ruleXCatchClause=ruleXCatchClause
	{ $current=$iv_ruleXCatchClause.current; }
	EOF;

// Rule XCatchClause
ruleXCatchClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			('catch')=>
			otherlv_0='catch'
			{
				newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0());
				}
				lv_declaredParam_2_0=ruleFullJvmFormalParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
					}
					set(
						$current,
						"declaredParam",
						lv_declaredParam_2_0,
						"org.eclipse.xtext.xbase.Xbase.FullJvmFormalParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0());
				}
				lv_expression_4_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
					}
					set(
						$current,
						"expression",
						lv_expression_4_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0());
		}
		this_ValidID_0=ruleValidID
		{
			$current.merge(this_ValidID_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				('.')=>
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
				}
			)
			{
				newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1());
			}
			this_ValidID_2=ruleValidID
			{
				$current.merge(this_ValidID_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
	)
;

// Entry rule entryRuleNumber
entryRuleNumber returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getNumberRule()); }
	iv_ruleNumber=ruleNumber
	{ $current=$iv_ruleNumber.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Number
ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_HEX_0=RULE_HEX
		{
			$current.merge(this_HEX_0);
		}
		{
			newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0());
		}
		    |
		(
			(
				this_INT_1=RULE_INT
				{
					$current.merge(this_INT_1);
				}
				{
					newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0());
				}
				    |
				this_DECIMAL_2=RULE_DECIMAL
				{
					$current.merge(this_DECIMAL_2);
				}
				{
					newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1());
				}
			)
			(
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0());
				}
				(
					this_INT_4=RULE_INT
					{
						$current.merge(this_INT_4);
					}
					{
						newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0());
					}
					    |
					this_DECIMAL_5=RULE_DECIMAL
					{
						$current.merge(this_DECIMAL_5);
					}
					{
						newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1());
					}
				)
			)?
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleJvmTypeReference
entryRuleJvmTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); }
	iv_ruleJvmTypeReference=ruleJvmTypeReference
	{ $current=$iv_ruleJvmTypeReference.current; }
	EOF;

// Rule JvmTypeReference
ruleJvmTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0());
			}
			this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference
			{
				$current = $this_JvmParameterizedTypeReference_0.current;
				afterParserOrEnumRuleCall();
			}
			(
				((
					(
					)
					ruleArrayBrackets
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
								$current);
						}
					)
					{
						newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1());
					}
					ruleArrayBrackets
					{
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)
		    |
		{
			newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1());
		}
		this_XFunctionTypeRef_3=ruleXFunctionTypeRef
		{
			$current = $this_XFunctionTypeRef_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleArrayBrackets
entryRuleArrayBrackets returns [String current=null]:
	{ newCompositeNode(grammarAccess.getArrayBracketsRule()); }
	iv_ruleArrayBrackets=ruleArrayBrackets
	{ $current=$iv_ruleArrayBrackets.current.getText(); }
	EOF;

// Rule ArrayBrackets
ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='['
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0());
		}
		kw=']'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1());
		}
	)
;

// Entry rule entryRuleXFunctionTypeRef
entryRuleXFunctionTypeRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); }
	iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef
	{ $current=$iv_ruleXFunctionTypeRef.current; }
	EOF;

// Rule XFunctionTypeRef
ruleXFunctionTypeRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0());
						}
						lv_paramTypes_1_0=ruleJvmTypeReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
							}
							add(
								$current,
								"paramTypes",
								lv_paramTypes_1_0,
								"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_2=','
					{
						newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0());
							}
							lv_paramTypes_3_0=ruleJvmTypeReference
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
								}
								add(
									$current,
									"paramTypes",
									lv_paramTypes_3_0,
									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
			}
		)?
		otherlv_5='=>'
		{
			newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0());
				}
				lv_returnType_6_0=ruleJvmTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_6_0,
						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleJvmParameterizedTypeReference
entryRuleJvmParameterizedTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); }
	iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference
	{ $current=$iv_ruleJvmParameterizedTypeReference.current; }
	EOF;

// Rule JvmParameterizedTypeReference
ruleJvmParameterizedTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				('<')=>
				otherlv_1='<'
				{
					newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
					}
					lv_arguments_2_0=ruleJvmArgumentTypeReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_2_0,
							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
						}
						lv_arguments_4_0=ruleJvmArgumentTypeReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_4_0,
								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='>'
			{
				newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
			}
			(
				(
					((
						(
						)
						'.'
					)
					)=>
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0(),
									$current);
							}
						)
						otherlv_7='.'
						{
							newLeafNode(otherlv_7, grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1());
						}
					)
				)
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0());
						}
						ruleValidID
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						('<')=>
						otherlv_9='<'
						{
							newLeafNode(otherlv_9, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0());
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0());
							}
							lv_arguments_10_0=ruleJvmArgumentTypeReference
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
								}
								add(
									$current,
									"arguments",
									lv_arguments_10_0,
									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_11=','
						{
							newLeafNode(otherlv_11, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0());
								}
								lv_arguments_12_0=ruleJvmArgumentTypeReference
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
									}
									add(
										$current,
										"arguments",
										lv_arguments_12_0,
										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
					otherlv_13='>'
					{
						newLeafNode(otherlv_13, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3());
					}
				)?
			)*
		)?
	)
;

// Entry rule entryRuleJvmArgumentTypeReference
entryRuleJvmArgumentTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); }
	iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference
	{ $current=$iv_ruleJvmArgumentTypeReference.current; }
	EOF;

// Rule JvmArgumentTypeReference
ruleJvmArgumentTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0());
		}
		this_JvmTypeReference_0=ruleJvmTypeReference
		{
			$current = $this_JvmTypeReference_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1());
		}
		this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference
		{
			$current = $this_JvmWildcardTypeReference_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleJvmWildcardTypeReference
entryRuleJvmWildcardTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); }
	iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference
	{ $current=$iv_ruleJvmWildcardTypeReference.current; }
	EOF;

// Rule JvmWildcardTypeReference
ruleJvmWildcardTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
					$current);
			}
		)
		otherlv_1='?'
		{
			newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0());
						}
						lv_constraints_2_0=ruleJvmUpperBound
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_2_0,
								"org.eclipse.xtext.xbase.Xtype.JvmUpperBound");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0());
						}
						lv_constraints_3_0=ruleJvmUpperBoundAnded
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_3_0,
								"org.eclipse.xtext.xbase.Xtype.JvmUpperBoundAnded");
							afterParserOrEnumRuleCall();
						}
					)
				)*
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0());
						}
						lv_constraints_4_0=ruleJvmLowerBound
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_4_0,
								"org.eclipse.xtext.xbase.Xtype.JvmLowerBound");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0());
						}
						lv_constraints_5_0=ruleJvmLowerBoundAnded
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_5_0,
								"org.eclipse.xtext.xbase.Xtype.JvmLowerBoundAnded");
							afterParserOrEnumRuleCall();
						}
					)
				)*
			)
		)?
	)
;

// Entry rule entryRuleJvmUpperBound
entryRuleJvmUpperBound returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJvmUpperBoundRule()); }
	iv_ruleJvmUpperBound=ruleJvmUpperBound
	{ $current=$iv_ruleJvmUpperBound.current; }
	EOF;

// Rule JvmUpperBound
ruleJvmUpperBound returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='extends'
		{
			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
				}
				lv_typeReference_1_0=ruleJvmTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
					}
					set(
						$current,
						"typeReference",
						lv_typeReference_1_0,
						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleJvmUpperBoundAnded
entryRuleJvmUpperBoundAnded returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); }
	iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded
	{ $current=$iv_ruleJvmUpperBoundAnded.current; }
	EOF;

// Rule JvmUpperBoundAnded
ruleJvmUpperBoundAnded returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='&'
		{
			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
				}
				lv_typeReference_1_0=ruleJvmTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
					}
					set(
						$current,
						"typeReference",
						lv_typeReference_1_0,
						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleJvmLowerBound
entryRuleJvmLowerBound returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJvmLowerBoundRule()); }
	iv_ruleJvmLowerBound=ruleJvmLowerBound
	{ $current=$iv_ruleJvmLowerBound.current; }
	EOF;

// Rule JvmLowerBound
ruleJvmLowerBound returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='super'
		{
			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
				}
				lv_typeReference_1_0=ruleJvmTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
					}
					set(
						$current,
						"typeReference",
						lv_typeReference_1_0,
						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleJvmLowerBoundAnded
entryRuleJvmLowerBoundAnded returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJvmLowerBoundAndedRule()); }
	iv_ruleJvmLowerBoundAnded=ruleJvmLowerBoundAnded
	{ $current=$iv_ruleJvmLowerBoundAnded.current; }
	EOF;

// Rule JvmLowerBoundAnded
ruleJvmLowerBoundAnded returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='&'
		{
			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
				}
				lv_typeReference_1_0=ruleJvmTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJvmLowerBoundAndedRule());
					}
					set(
						$current,
						"typeReference",
						lv_typeReference_1_0,
						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); }
	iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard
	{ $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }
	EOF;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1());
		}
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2());
		}
	)
;

// Entry rule entryRuleValidID
entryRuleValidID returns [String current=null]:
	{ newCompositeNode(grammarAccess.getValidIDRule()); }
	iv_ruleValidID=ruleValidID
	{ $current=$iv_ruleValidID.current.getText(); }
	EOF;

// Rule ValidID
ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall());
	}
;

// Entry rule entryRuleXImportDeclaration
entryRuleXImportDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXImportDeclarationRule()); }
	iv_ruleXImportDeclaration=ruleXImportDeclaration
	{ $current=$iv_ruleXImportDeclaration.current; }
	EOF;

// Rule XImportDeclaration
ruleXImportDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
		}
		(
			(
				(
					(
						lv_static_1_0='static'
						{
							newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getXImportDeclarationRule());
							}
							setWithLastConsumed($current, "static", true, "static");
						}
					)
				)
				(
					(
						lv_extension_2_0='extension'
						{
							newLeafNode(lv_extension_2_0, grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getXImportDeclarationRule());
							}
							setWithLastConsumed($current, "extension", true, "extension");
						}
					)
				)?
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getXImportDeclarationRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0());
						}
						ruleQualifiedNameInStaticImport
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						(
							lv_wildcard_4_0='*'
							{
								newLeafNode(lv_wildcard_4_0, grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getXImportDeclarationRule());
								}
								setWithLastConsumed($current, "wildcard", true, "*");
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0());
							}
							lv_memberName_5_0=ruleValidID
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
								}
								set(
									$current,
									"memberName",
									lv_memberName_5_0,
									"org.eclipse.xtext.xbase.Xtype.ValidID");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXImportDeclarationRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0());
					}
					lv_importedNamespace_7_0=ruleQualifiedNameWithWildcard
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
						}
						set(
							$current,
							"importedNamespace",
							lv_importedNamespace_7_0,
							"org.eclipse.xtext.xbase.Xtype.QualifiedNameWithWildcard");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_8=';'
			{
				newLeafNode(otherlv_8, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
			}
		)?
	)
;

// Entry rule entryRuleQualifiedNameInStaticImport
entryRuleQualifiedNameInStaticImport returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameInStaticImportRule()); }
	iv_ruleQualifiedNameInStaticImport=ruleQualifiedNameInStaticImport
	{ $current=$iv_ruleQualifiedNameInStaticImport.current.getText(); }
	EOF;

// Rule QualifiedNameInStaticImport
ruleQualifiedNameInStaticImport returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0());
		}
		this_ValidID_0=ruleValidID
		{
			$current.merge(this_ValidID_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1());
		}
	)+
;

RULE_HEX : ('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F'|'_')+ ('#' (('b'|'B') ('i'|'I')|('l'|'L')))?;

RULE_INT : '0'..'9' ('0'..'9'|'_')*;

RULE_DECIMAL : RULE_INT (('e'|'E') ('+'|'-')? RULE_INT)? (('b'|'B') ('i'|'I'|'d'|'D')|('l'|'L'|'d'|'D'|'f'|'F'))?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'$'|'_') ('a'..'z'|'A'..'Z'|'$'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'?|'\'' ('\\' .|~(('\\'|'\'')))* '\''?);

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
